{
  "pageProps": {
    "section": "getting-started",
    "specs": {
      "rest": [
        {
          "market": [
            {
              "paths": [
                {
                  "id": "/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}",
                  "templatedPath": "/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}",
                  "path": "get_v2_aggs_ticker__stocksticker__range__multiplier___timespan___from___to",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "ticker": {
                        "description": "The exchange symbol that this item is traded under.",
                        "type": "string"
                      },
                      "adjusted": {
                        "description": "Whether or not this response was adjusted for splits.",
                        "type": "boolean"
                      },
                      "queryCount": {
                        "description": "The number of aggregates (minute or day) used to generate the response.",
                        "type": "integer"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "resultsCount": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "c": {
                              "description": "The close price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "h": {
                              "description": "The highest price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "l": {
                              "description": "The lowest price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "n": {
                              "description": "The number of transactions in the aggregate window.",
                              "type": "integer"
                            },
                            "o": {
                              "description": "The open price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "otc": {
                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                              "type": "boolean"
                            },
                            "t": {
                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                              "type": "integer"
                            },
                            "v": {
                              "description": "The trading volume of the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "vw": {
                              "description": "The volume weighted average price.",
                              "format": "double",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"adjusted\": true,\n \"queryCount\": 2,\n \"request_id\": \"6a7e466379af0a71039d60cc78e72282\",\n \"results\": [\n  {\n   \"c\": 75.0875,\n   \"h\": 75.15,\n   \"l\": 73.7975,\n   \"n\": 1,\n   \"o\": 74.06,\n   \"t\": 1577941200000,\n   \"v\": 135647456,\n   \"vw\": 74.6099\n  },\n  {\n   \"c\": 74.3575,\n   \"h\": 75.145,\n   \"l\": 74.125,\n   \"n\": 1,\n   \"o\": 74.2875,\n   \"t\": 1578027600000,\n   \"v\": 146535512,\n   \"vw\": 74.7026\n  }\n ],\n \"resultsCount\": 2,\n \"status\": \"OK\",\n \"ticker\": \"AAPL\"\n}",
                  "description": "Get aggregate bars for a stock over a given date range in custom time window sizes.\n<br />\n<br />\nFor example, if timespan = ‘minute’ and multiplier = ‘5’ then 5-minute bars will be returned.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the stock/equity.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stocksTicker",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "The size of the timespan multiplier.",
                      "example": 1,
                      "in": "path",
                      "name": "multiplier",
                      "required": true,
                      "schema": { "type": "integer" }
                    },
                    {
                      "description": "The size of the time window.",
                      "example": "day",
                      "in": "path",
                      "name": "timespan",
                      "required": true,
                      "schema": {
                        "enum": [
                          "minute",
                          "hour",
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "The start of the aggregate time window. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
                      "example": "2021-07-22",
                      "in": "path",
                      "name": "from",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "The end of the aggregate time window. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
                      "example": "2021-07-22",
                      "in": "path",
                      "name": "to",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "type": "boolean" }
                    },
                    {
                      "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
                      "example": "asc",
                      "in": "query",
                      "name": "sort",
                      "schema": { "enum": ["asc", "desc"] }
                    },
                    {
                      "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
                      "example": 120,
                      "in": "query",
                      "name": "limit",
                      "schema": { "type": "integer" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "adjusted": true,
                            "queryCount": 2,
                            "request_id": "6a7e466379af0a71039d60cc78e72282",
                            "results": [
                              {
                                "c": 75.0875,
                                "h": 75.15,
                                "l": 73.7975,
                                "n": 1,
                                "o": 74.06,
                                "t": 1577941200000,
                                "v": 135647456,
                                "vw": 74.6099
                              },
                              {
                                "c": 74.3575,
                                "h": 75.145,
                                "l": 74.125,
                                "n": 1,
                                "o": 74.2875,
                                "t": 1578027600000,
                                "v": 146535512,
                                "vw": 74.7026
                              }
                            ],
                            "resultsCount": 2,
                            "status": "OK",
                            "ticker": "AAPL"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "ticker": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "adjusted": {
                                    "description": "Whether or not this response was adjusted for splits.",
                                    "type": "boolean"
                                  },
                                  "queryCount": {
                                    "description": "The number of aggregates (minute or day) used to generate the response.",
                                    "type": "integer"
                                  },
                                  "request_id": {
                                    "description": "A request id assigned by the server.",
                                    "type": "string"
                                  },
                                  "resultsCount": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "results": {
                                    "items": {
                                      "properties": {
                                        "c": {
                                          "description": "The close price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "h": {
                                          "description": "The highest price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "l": {
                                          "description": "The lowest price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "n": {
                                          "description": "The number of transactions in the aggregate window.",
                                          "type": "integer"
                                        },
                                        "o": {
                                          "description": "The open price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "otc": {
                                          "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                          "type": "boolean"
                                        },
                                        "t": {
                                          "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                          "type": "integer"
                                        },
                                        "v": {
                                          "description": "The trading volume of the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "vw": {
                                          "description": "The volume weighted average price.",
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Stock Aggregates."
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Aggregates (Bars)",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/aggs/grouped/locale/us/market/stocks/{date}",
                  "templatedPath": "/v2/aggs/grouped/locale/us/market/stocks/{date}",
                  "path": "get_v2_aggs_grouped_locale_us_market_stocks__date",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "adjusted": {
                        "description": "Whether or not this response was adjusted for splits.",
                        "type": "boolean"
                      },
                      "queryCount": {
                        "description": "The number of aggregates (minute or day) used to generate the response.",
                        "type": "integer"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "resultsCount": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "T": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "c": {
                              "description": "The close price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "h": {
                              "description": "The highest price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "l": {
                              "description": "The lowest price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "n": {
                              "description": "The number of transactions in the aggregate window.",
                              "type": "integer"
                            },
                            "o": {
                              "description": "The open price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "otc": {
                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                              "type": "boolean"
                            },
                            "t": {
                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                              "type": "integer"
                            },
                            "v": {
                              "description": "The trading volume of the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "vw": {
                              "description": "The volume weighted average price.",
                              "format": "double",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"adjusted\": true,\n \"queryCount\": 3,\n \"results\": [\n  {\n   \"T\": \"KIMpL\",\n   \"c\": 25.9102,\n   \"h\": 26.25,\n   \"l\": 25.91,\n   \"n\": 74,\n   \"o\": 26.07,\n   \"t\": 1602705600000,\n   \"v\": 4369,\n   \"vw\": 26.0407\n  },\n  {\n   \"T\": \"TANH\",\n   \"c\": 23.4,\n   \"h\": 24.763,\n   \"l\": 22.65,\n   \"n\": 1096,\n   \"o\": 24.5,\n   \"t\": 1602705600000,\n   \"v\": 25933.6,\n   \"vw\": 23.493\n  },\n  {\n   \"T\": \"VSAT\",\n   \"c\": 34.24,\n   \"h\": 35.47,\n   \"l\": 34.21,\n   \"n\": 4966,\n   \"o\": 34.9,\n   \"t\": 1602705600000,\n   \"v\": 312583,\n   \"vw\": 34.4736\n  }\n ],\n \"resultsCount\": 3,\n \"status\": \"OK\"\n}",
                  "description": "Get the daily open, high, low, and close (OHLC) for the entire stocks/equities markets.\n",
                  "parameters": [
                    {
                      "description": "The beginning date for the aggregate window.",
                      "example": "2020-10-14",
                      "in": "path",
                      "name": "date",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "type": "boolean" }
                    },
                    {
                      "description": "Include OTC securities in the response. Default is false (don't include OTC securities).\n",
                      "in": "query",
                      "name": "include_otc",
                      "schema": { "type": "boolean" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "adjusted": true,
                            "queryCount": 3,
                            "results": [
                              {
                                "T": "KIMpL",
                                "c": 25.9102,
                                "h": 26.25,
                                "l": 25.91,
                                "n": 74,
                                "o": 26.07,
                                "t": 1602705600000,
                                "v": 4369,
                                "vw": 26.0407
                              },
                              {
                                "T": "TANH",
                                "c": 23.4,
                                "h": 24.763,
                                "l": 22.65,
                                "n": 1096,
                                "o": 24.5,
                                "t": 1602705600000,
                                "v": 25933.6,
                                "vw": 23.493
                              },
                              {
                                "T": "VSAT",
                                "c": 34.24,
                                "h": 35.47,
                                "l": 34.21,
                                "n": 4966,
                                "o": 34.9,
                                "t": 1602705600000,
                                "v": 312583,
                                "vw": 34.4736
                              }
                            ],
                            "resultsCount": 3,
                            "status": "OK"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "adjusted": {
                                    "description": "Whether or not this response was adjusted for splits.",
                                    "type": "boolean"
                                  },
                                  "queryCount": {
                                    "description": "The number of aggregates (minute or day) used to generate the response.",
                                    "type": "integer"
                                  },
                                  "request_id": {
                                    "description": "A request id assigned by the server.",
                                    "type": "string"
                                  },
                                  "resultsCount": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "results": {
                                    "items": {
                                      "properties": {
                                        "T": {
                                          "description": "The exchange symbol that this item is traded under.",
                                          "type": "string"
                                        },
                                        "c": {
                                          "description": "The close price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "h": {
                                          "description": "The highest price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "l": {
                                          "description": "The lowest price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "n": {
                                          "description": "The number of transactions in the aggregate window.",
                                          "type": "integer"
                                        },
                                        "o": {
                                          "description": "The open price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "otc": {
                                          "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                          "type": "boolean"
                                        },
                                        "t": {
                                          "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                          "type": "integer"
                                        },
                                        "v": {
                                          "description": "The trading volume of the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "vw": {
                                          "description": "The volume weighted average price.",
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Previous day OHLC for ticker"
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Grouped Daily (Bars)",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/aggs/grouped/locale/us/market/stocks/{date}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v1/open-close/{stocksTicker}/{date}",
                  "templatedPath": "/v1/open-close/{stocksTicker}/{date}",
                  "path": "get_v1_open-close__stocksticker___date",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "afterHours": {
                        "description": "The close price of the ticker symbol in after hours trading.",
                        "format": "double",
                        "type": "number"
                      },
                      "close": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "from": {
                        "description": "The requested date.",
                        "format": "date",
                        "type": "string"
                      },
                      "high": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "low": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "open": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "preMarket": {
                        "description": "The open price of the ticker symbol in pre-market trading.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "symbol": {
                        "description": "The exchange symbol that this item is traded under.",
                        "type": "string"
                      },
                      "volume": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"afterHours\": 322.1,\n \"close\": 325.12,\n \"from\": \"2020-10-14T00:00:00.000Z\",\n \"high\": 326.2,\n \"low\": 322.3,\n \"open\": 324.66,\n \"preMarket\": 324.5,\n \"status\": \"OK\",\n \"symbol\": \"AAPL\",\n \"volume\": 26122646\n}",
                  "description": "Get the open, close and afterhours prices of a stock symbol on a certain date.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the stock/equity.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stocksTicker",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "The date of the requested open/close in the format YYYY-MM-DD.",
                      "example": "2020-10-14",
                      "in": "path",
                      "name": "date",
                      "required": true,
                      "schema": { "format": "date", "type": "string" }
                    },
                    {
                      "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "type": "boolean" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "afterHours": 322.1,
                            "close": 325.12,
                            "from": "2020-10-14T00:00:00.000Z",
                            "high": 326.2,
                            "low": 322.3,
                            "open": 324.66,
                            "preMarket": 324.5,
                            "status": "OK",
                            "symbol": "AAPL",
                            "volume": 26122646
                          },
                          "schema": {
                            "properties": {
                              "afterHours": {
                                "description": "The close price of the ticker symbol in after hours trading.",
                                "format": "double",
                                "type": "number"
                              },
                              "close": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "from": {
                                "description": "The requested date.",
                                "format": "date",
                                "type": "string"
                              },
                              "high": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "low": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "open": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "otc": {
                                "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                "type": "boolean"
                              },
                              "preMarket": {
                                "description": "The open price of the ticker symbol in pre-market trading.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              },
                              "symbol": {
                                "description": "The exchange symbol that this item is traded under.",
                                "type": "string"
                              },
                              "volume": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "The open/close of this stock symbol."
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Daily Open/Close",
                  "tags": ["stocks:open-close"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v1/open-close/{stocksTicker}/{date}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/aggs/ticker/{stocksTicker}/prev",
                  "templatedPath": "/v2/aggs/ticker/{stocksTicker}/prev",
                  "path": "get_v2_aggs_ticker__stocksticker__prev",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "ticker": {
                        "description": "The exchange symbol that this item is traded under.",
                        "type": "string"
                      },
                      "adjusted": {
                        "description": "Whether or not this response was adjusted for splits.",
                        "type": "boolean"
                      },
                      "queryCount": {
                        "description": "The number of aggregates (minute or day) used to generate the response.",
                        "type": "integer"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "resultsCount": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "c": {
                              "description": "The close price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "h": {
                              "description": "The highest price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "l": {
                              "description": "The lowest price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "n": {
                              "description": "The number of transactions in the aggregate window.",
                              "type": "integer"
                            },
                            "o": {
                              "description": "The open price for the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "t": {
                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                              "type": "integer"
                            },
                            "v": {
                              "description": "The trading volume of the symbol in the given time period.",
                              "format": "double",
                              "type": "number"
                            },
                            "vw": {
                              "description": "The volume weighted average price.",
                              "format": "double",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"adjusted\": true,\n \"queryCount\": 1,\n \"request_id\": \"6a7e466379af0a71039d60cc78e72282\",\n \"results\": [\n  {\n   \"T\": \"AAPL\",\n   \"c\": 115.97,\n   \"h\": 117.59,\n   \"l\": 114.13,\n   \"o\": 115.55,\n   \"t\": 1605042000000,\n   \"v\": 131704427,\n   \"vw\": 116.3058\n  }\n ],\n \"resultsCount\": 1,\n \"status\": \"OK\",\n \"ticker\": \"AAPL\"\n}",
                  "description": "Get the previous day's open, high, low, and close (OHLC) for the specified stock ticker.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the stock/equity.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stocksTicker",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "type": "boolean" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "adjusted": true,
                            "queryCount": 1,
                            "request_id": "6a7e466379af0a71039d60cc78e72282",
                            "results": [
                              {
                                "T": "AAPL",
                                "c": 115.97,
                                "h": 117.59,
                                "l": 114.13,
                                "o": 115.55,
                                "t": 1605042000000,
                                "v": 131704427,
                                "vw": 116.3058
                              }
                            ],
                            "resultsCount": 1,
                            "status": "OK",
                            "ticker": "AAPL"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "ticker": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "adjusted": {
                                    "description": "Whether or not this response was adjusted for splits.",
                                    "type": "boolean"
                                  },
                                  "queryCount": {
                                    "description": "The number of aggregates (minute or day) used to generate the response.",
                                    "type": "integer"
                                  },
                                  "request_id": {
                                    "description": "A request id assigned by the server.",
                                    "type": "string"
                                  },
                                  "resultsCount": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "results": {
                                    "items": {
                                      "properties": {
                                        "c": {
                                          "description": "The close price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "h": {
                                          "description": "The highest price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "l": {
                                          "description": "The lowest price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "n": {
                                          "description": "The number of transactions in the aggregate window.",
                                          "type": "integer"
                                        },
                                        "o": {
                                          "description": "The open price for the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "t": {
                                          "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                          "type": "integer"
                                        },
                                        "v": {
                                          "description": "The trading volume of the symbol in the given time period.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "vw": {
                                          "description": "The volume weighted average price.",
                                          "format": "double",
                                          "type": "number"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "The previous day OHLC for the ticker."
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Previous Close",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/aggs/ticker/{stocksTicker}/prev?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/trades/{stockTicker}",
                  "templatedPath": "/v3/trades/{stockTicker}",
                  "path": "get_v3_trades__stockticker",
                  "entitlements": {
                    "dataType": "trades",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Trades",
                      "path": "get_v2_ticks_stocks_trades__ticker___date"
                    }
                  },
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "conditions": {
                              "description": "A list of condition codes.",
                              "items": {
                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "correction": {
                              "description": "The trade correction indicator.",
                              "type": "integer"
                            },
                            "exchange": {
                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                              "type": "integer"
                            },
                            "id": {
                              "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                              "type": "string"
                            },
                            "participant_timestamp": {
                              "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the trade was actually generated at the exchange.",
                              "format": "int64",
                              "type": "integer",
                              "x-polygon-go-type": {
                                "name": "INanoseconds",
                                "path": "github.com/polygon-io/ptime"
                              }
                            },
                            "price": {
                              "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                              "format": "double",
                              "type": "number"
                            },
                            "sequence_number": {
                              "description": "The sequence number represents the sequence in which trade events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "sip_timestamp": {
                              "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this trade from the exchange which produced it.",
                              "format": "int64",
                              "type": "integer",
                              "x-polygon-go-type": {
                                "name": "INanoseconds",
                                "path": "github.com/polygon-io/ptime"
                              }
                            },
                            "size": {
                              "description": "The size of a trade (also known as volume).",
                              "format": "double",
                              "type": "number"
                            },
                            "tape": {
                              "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                              "format": "int32",
                              "type": "integer"
                            },
                            "trf_id": {
                              "description": "The ID for the Trade Reporting Facility where the trade took place.",
                              "type": "integer"
                            },
                            "trf_timestamp": {
                              "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this trade.",
                              "format": "int64",
                              "type": "integer",
                              "x-polygon-go-type": {
                                "name": "INanoseconds",
                                "path": "github.com/polygon-io/ptime"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v3/trades/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": [\n  {\n   \"conditions\": [\n    12,\n    41\n   ],\n   \"exchange\": 11,\n   \"id\": \"1\",\n   \"participant_timestamp\": 1517562000015577000,\n   \"price\": 171.55,\n   \"sequence_number\": 1063,\n   \"sip_timestamp\": 1517562000016036600,\n   \"size\": 100,\n   \"tape\": 3\n  },\n  {\n   \"conditions\": [\n    12,\n    41\n   ],\n   \"exchange\": 11,\n   \"id\": \"2\",\n   \"participant_timestamp\": 1517562000015577600,\n   \"price\": 171.55,\n   \"sequence_number\": 1064,\n   \"sip_timestamp\": 1517562000016038100,\n   \"size\": 100,\n   \"tape\": 3\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "Get trades for a ticker symbol in a given time range.",
                  "operationId": "Trades",
                  "parameters": [
                    {
                      "description": "The ticker symbol to get trades for.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stockTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    },
                    {
                      "description": "Query by trade timestamp. Either a date with the format YYYY-MM-DD or a nanosecond timestamp.",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 50000.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "example": 10,
                        "maximum": 50000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "timestamp",
                        "enum": ["timestamp"],
                        "example": "timestamp",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v3/trades/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                            "results": [
                              {
                                "conditions": [12, 41],
                                "exchange": 11,
                                "id": "1",
                                "participant_timestamp": 1517562000015577000,
                                "price": 171.55,
                                "sequence_number": 1063,
                                "sip_timestamp": 1517562000016036600,
                                "size": 100,
                                "tape": 3
                              },
                              {
                                "conditions": [12, 41],
                                "exchange": 11,
                                "id": "2",
                                "participant_timestamp": 1517562000015577600,
                                "price": 171.55,
                                "sequence_number": 1064,
                                "sip_timestamp": 1517562000016038100,
                                "size": 100,
                                "tape": 3
                              }
                            ],
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "results": {
                                "items": {
                                  "properties": {
                                    "conditions": {
                                      "description": "A list of condition codes.",
                                      "items": {
                                        "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "type": "array"
                                    },
                                    "correction": {
                                      "description": "The trade correction indicator.",
                                      "type": "integer"
                                    },
                                    "exchange": {
                                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                                      "type": "string"
                                    },
                                    "participant_timestamp": {
                                      "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the trade was actually generated at the exchange.",
                                      "format": "int64",
                                      "type": "integer",
                                      "x-polygon-go-type": {
                                        "name": "INanoseconds",
                                        "path": "github.com/polygon-io/ptime"
                                      }
                                    },
                                    "price": {
                                      "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                                      "format": "double",
                                      "type": "number"
                                    },
                                    "sequence_number": {
                                      "description": "The sequence number represents the sequence in which trade events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                                      "format": "int64",
                                      "type": "integer"
                                    },
                                    "sip_timestamp": {
                                      "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this trade from the exchange which produced it.",
                                      "format": "int64",
                                      "type": "integer",
                                      "x-polygon-go-type": {
                                        "name": "INanoseconds",
                                        "path": "github.com/polygon-io/ptime"
                                      }
                                    },
                                    "size": {
                                      "description": "The size of a trade (also known as volume).",
                                      "format": "double",
                                      "type": "number"
                                    },
                                    "tape": {
                                      "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "trf_id": {
                                      "description": "The ID for the Trade Reporting Facility where the trade took place.",
                                      "type": "integer"
                                    },
                                    "trf_timestamp": {
                                      "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this trade.",
                                      "format": "int64",
                                      "type": "integer",
                                      "x-polygon-go-type": {
                                        "name": "INanoseconds",
                                        "path": "github.com/polygon-io/ptime"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "A list of trades."
                    }
                  },
                  "summary": "Trades",
                  "tags": ["stocks:trades"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Trade data",
                    "name": "trades"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "x-polygon-paginate": {
                    "limit": { "max": 50000 },
                    "order": { "default": "desc" },
                    "sort": { "default": "timestamp", "enum": ["timestamp"] }
                  },
                  "x-polygon-replaces": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Trades",
                      "path": "get_v2_ticks_stocks_trades__ticker___date"
                    }
                  },
                  "parameterTemplate": "{apiBase}/v3/trades/{stockTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/ticks/stocks/trades/{ticker}/{date}",
                  "templatedPath": "/v2/ticks/stocks/trades/{ticker}/{date}",
                  "path": "get_v2_ticks_stocks_trades__ticker___date",
                  "entitlements": {
                    "dataType": "trades",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Trades v3",
                      "path": "get_v3_trades__stockticker"
                    }
                  },
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "db_latency": {
                        "description": "Latency in milliseconds for the query results from the database.",
                        "type": "integer"
                      },
                      "results_count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "success": {
                        "description": "Whether or not this query was executed successfully.",
                        "type": "boolean"
                      },
                      "ticker": {
                        "description": "The exchange symbol that this item is traded under.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "T": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "f": {
                              "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                              "type": "integer"
                            },
                            "q": {
                              "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                              "format": "int64",
                              "type": "integer"
                            },
                            "t": {
                              "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                              "type": "integer"
                            },
                            "y": {
                              "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                              "type": "integer"
                            },
                            "c": {
                              "description": "A list of condition codes.\n",
                              "items": {
                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "e": {
                              "description": "The trade correction indicator.\n",
                              "type": "integer"
                            },
                            "i": {
                              "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                              "type": "string"
                            },
                            "p": {
                              "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                              "format": "double",
                              "type": "number"
                            },
                            "r": {
                              "description": "The ID for the Trade Reporting Facility where the trade took place.\n",
                              "type": "integer"
                            },
                            "s": {
                              "description": "The size of a trade (also known as volume).\n",
                              "format": "double",
                              "type": "number"
                            },
                            "x": {
                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                              "type": "integer"
                            },
                            "z": {
                              "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"db_latency\": 11,\n \"map\": {\n  \"I\": {\n   \"name\": \"orig_id\",\n   \"type\": \"string\"\n  },\n  \"c\": {\n   \"name\": \"conditions\",\n   \"type\": \"int\"\n  },\n  \"e\": {\n   \"name\": \"correction\",\n   \"type\": \"int\"\n  },\n  \"f\": {\n   \"name\": \"trf_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"i\": {\n   \"name\": \"id\",\n   \"type\": \"string\"\n  },\n  \"p\": {\n   \"name\": \"price\",\n   \"type\": \"float64\"\n  },\n  \"q\": {\n   \"name\": \"sequence_number\",\n   \"type\": \"int64\"\n  },\n  \"r\": {\n   \"name\": \"trf_id\",\n   \"type\": \"int\"\n  },\n  \"s\": {\n   \"name\": \"size\",\n   \"type\": \"int\"\n  },\n  \"t\": {\n   \"name\": \"sip_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"x\": {\n   \"name\": \"exchange\",\n   \"type\": \"int\"\n  },\n  \"y\": {\n   \"name\": \"participant_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"z\": {\n   \"name\": \"tape\",\n   \"type\": \"int\"\n  }\n },\n \"results\": [\n  {\n   \"c\": [\n    12,\n    41\n   ],\n   \"i\": \"1\",\n   \"p\": 171.55,\n   \"q\": 1063,\n   \"s\": 100,\n   \"t\": 1517562000016036600,\n   \"x\": 11,\n   \"y\": 1517562000015577000,\n   \"z\": 3\n  },\n  {\n   \"c\": [\n    12,\n    41\n   ],\n   \"i\": \"2\",\n   \"p\": 171.55,\n   \"q\": 1064,\n   \"s\": 100,\n   \"t\": 1517562000016038100,\n   \"x\": 11,\n   \"y\": 1517562000015577600,\n   \"z\": 3\n  }\n ],\n \"results_count\": 2,\n \"success\": true,\n \"ticker\": \"AAPL\"\n}",
                  "description": "Get trades for a given ticker symbol on a specified date.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol we want trades for.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "ticker",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "The date/day of the trades to retrieve in the format YYYY-MM-DD.",
                      "example": "2020-10-14",
                      "in": "path",
                      "name": "date",
                      "required": true,
                      "schema": { "format": "date", "type": "string" }
                    },
                    {
                      "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "integer" }
                    },
                    {
                      "description": "The maximum timestamp allowed in the results.\n",
                      "in": "query",
                      "name": "timestampLimit",
                      "schema": { "type": "integer" }
                    },
                    {
                      "description": "Reverse the order of the results.\n",
                      "example": true,
                      "in": "query",
                      "name": "reverse",
                      "schema": { "type": "boolean" }
                    },
                    {
                      "description": "Limit the size of the response, max 50000 and default 5000.",
                      "example": 10,
                      "in": "query",
                      "name": "limit",
                      "schema": { "type": "integer" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "db_latency": 11,
                            "map": {
                              "I": { "name": "orig_id", "type": "string" },
                              "c": { "name": "conditions", "type": "int" },
                              "e": { "name": "correction", "type": "int" },
                              "f": { "name": "trf_timestamp", "type": "int64" },
                              "i": { "name": "id", "type": "string" },
                              "p": { "name": "price", "type": "float64" },
                              "q": {
                                "name": "sequence_number",
                                "type": "int64"
                              },
                              "r": { "name": "trf_id", "type": "int" },
                              "s": { "name": "size", "type": "int" },
                              "t": { "name": "sip_timestamp", "type": "int64" },
                              "x": { "name": "exchange", "type": "int" },
                              "y": {
                                "name": "participant_timestamp",
                                "type": "int64"
                              },
                              "z": { "name": "tape", "type": "int" }
                            },
                            "results": [
                              {
                                "c": [12, 41],
                                "i": "1",
                                "p": 171.55,
                                "q": 1063,
                                "s": 100,
                                "t": 1517562000016036600,
                                "x": 11,
                                "y": 1517562000015577000,
                                "z": 3
                              },
                              {
                                "c": [12, 41],
                                "i": "2",
                                "p": 171.55,
                                "q": 1064,
                                "s": 100,
                                "t": 1517562000016038100,
                                "x": 11,
                                "y": 1517562000015577600,
                                "z": 3
                              }
                            ],
                            "results_count": 2,
                            "success": true,
                            "ticker": "AAPL"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "db_latency": {
                                    "description": "Latency in milliseconds for the query results from the database.",
                                    "type": "integer"
                                  },
                                  "results_count": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "success": {
                                    "description": "Whether or not this query was executed successfully.",
                                    "type": "boolean"
                                  },
                                  "ticker": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "results": {
                                    "items": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "T": {
                                              "description": "The exchange symbol that this item is traded under.",
                                              "type": "string"
                                            },
                                            "f": {
                                              "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                                              "type": "integer"
                                            },
                                            "q": {
                                              "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                                              "format": "int64",
                                              "type": "integer"
                                            },
                                            "t": {
                                              "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                                              "type": "integer"
                                            },
                                            "y": {
                                              "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "c": {
                                              "description": "A list of condition codes.\n",
                                              "items": {
                                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                                                "type": "integer"
                                              },
                                              "type": "array"
                                            },
                                            "e": {
                                              "description": "The trade correction indicator.\n",
                                              "type": "integer"
                                            },
                                            "i": {
                                              "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                              "type": "string"
                                            },
                                            "p": {
                                              "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "r": {
                                              "description": "The ID for the Trade Reporting Facility where the trade took place.\n",
                                              "type": "integer"
                                            },
                                            "s": {
                                              "description": "The size of a trade (also known as volume).\n",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "x": {
                                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                              "type": "integer"
                                            },
                                            "z": {
                                              "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "A list of trades."
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Trades",
                  "tags": ["stocks:trades"],
                  "x-polygon-deprecation": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Trades v3",
                      "path": "get_v3_trades__stockticker"
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "description": "Trade data",
                    "name": "trades"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/ticks/stocks/trades/{ticker}/{date}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/last/trade/{stocksTicker}",
                  "templatedPath": "/v2/last/trade/{stocksTicker}",
                  "path": "get_v2_last_trade__stocksticker",
                  "entitlements": {
                    "dataType": "trades",
                    "market": "stocks",
                    "timeframes": ["realtime", "delayed"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "properties": {
                          "T": {
                            "description": "The exchange symbol that this item is traded under.",
                            "type": "string"
                          },
                          "c": {
                            "description": "A list of condition codes.",
                            "items": {
                              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                              "type": "integer"
                            },
                            "type": "array",
                            "x-polygon-go-type": { "name": "[]*int32" }
                          },
                          "e": {
                            "description": "The trade correction indicator.",
                            "type": "integer"
                          },
                          "f": {
                            "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                            "type": "integer"
                          },
                          "i": {
                            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                            "type": "string"
                          },
                          "p": {
                            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                            "format": "double",
                            "type": "number"
                          },
                          "q": {
                            "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                            "format": "int64",
                            "type": "integer"
                          },
                          "r": {
                            "description": "The ID for the Trade Reporting Facility where the trade took place.",
                            "type": "integer"
                          },
                          "s": {
                            "description": "The size of a trade (also known as volume).",
                            "format": "double",
                            "type": "number"
                          },
                          "t": {
                            "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                            "type": "integer"
                          },
                          "x": {
                            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                            "type": "integer"
                          },
                          "y": {
                            "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                            "type": "integer"
                          },
                          "z": {
                            "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-polygon-go-type": { "name": "LastTradeResult" }
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"request_id\": \"f05562305bd26ced64b98ed68b3c5d96\",\n \"results\": {\n  \"T\": \"AAPL\",\n  \"c\": [\n   37\n  ],\n  \"f\": 1617901342969796400,\n  \"i\": \"118749\",\n  \"p\": 129.8473,\n  \"q\": 3135876,\n  \"r\": 202,\n  \"s\": 25,\n  \"t\": 1617901342969834000,\n  \"x\": 4,\n  \"y\": 1617901342968000000,\n  \"z\": 3\n },\n \"status\": \"OK\"\n}",
                  "description": "Get the most recent trade for a given stock.",
                  "operationId": "LastTrade",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the stock/equity.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stocksTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "request_id": "f05562305bd26ced64b98ed68b3c5d96",
                            "results": {
                              "T": "AAPL",
                              "c": [37],
                              "f": 1617901342969796400,
                              "i": "118749",
                              "p": 129.8473,
                              "q": 3135876,
                              "r": 202,
                              "s": 25,
                              "t": 1617901342969834000,
                              "x": 4,
                              "y": 1617901342968000000,
                              "z": 3
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "properties": {
                                  "T": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  },
                                  "c": {
                                    "description": "A list of condition codes.",
                                    "items": {
                                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                                      "type": "integer"
                                    },
                                    "type": "array",
                                    "x-polygon-go-type": { "name": "[]*int32" }
                                  },
                                  "e": {
                                    "description": "The trade correction indicator.",
                                    "type": "integer"
                                  },
                                  "f": {
                                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                                    "type": "integer"
                                  },
                                  "i": {
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                                    "type": "string"
                                  },
                                  "p": {
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "q": {
                                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "r": {
                                    "description": "The ID for the Trade Reporting Facility where the trade took place.",
                                    "type": "integer"
                                  },
                                  "s": {
                                    "description": "The size of a trade (also known as volume).",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "t": {
                                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                                    "type": "integer"
                                  },
                                  "x": {
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                    "type": "integer"
                                  },
                                  "y": {
                                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                    "type": "integer"
                                  },
                                  "z": {
                                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "x-polygon-go-type": {
                                  "name": "LastTradeResult"
                                }
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "The last trade for this stock."
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    },
                    "404": {
                      "description": "The specified resource was not found"
                    }
                  },
                  "summary": "Last Trade",
                  "tags": ["stocks:last:trade"],
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "description": "Real Time Data", "name": "realtime" },
                    {
                      "description": "15 minute delayed data",
                      "name": "delayed"
                    }
                  ],
                  "x-polygon-entitlement-data-type": {
                    "description": "Trade data",
                    "name": "trades"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/last/trade/{stocksTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/quotes/{stockTicker}",
                  "templatedPath": "/v3/quotes/{stockTicker}",
                  "path": "get_v3_quotes__stockticker",
                  "entitlements": {
                    "dataType": "nbbo",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Quotes (NBBO)",
                      "path": "get_v2_ticks_stocks_nbbo__ticker___date"
                    }
                  },
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "ask_exchange": {
                              "description": "The ask exchange ID",
                              "type": "integer"
                            },
                            "ask_price": {
                              "description": "The ask price.",
                              "format": "double",
                              "type": "number"
                            },
                            "ask_size": {
                              "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                              "format": "double",
                              "type": "number"
                            },
                            "bid_exchange": {
                              "description": "The bid exchange ID",
                              "type": "integer"
                            },
                            "bid_price": {
                              "description": "The bid price.",
                              "format": "double",
                              "type": "number"
                            },
                            "bid_size": {
                              "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                              "format": "double",
                              "type": "number"
                            },
                            "conditions": {
                              "description": "A list of condition codes.",
                              "items": {
                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "indicators": {
                              "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                              "items": {
                                "description": "The indicator code.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "participant_timestamp": {
                              "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                              "format": "int64",
                              "type": "integer",
                              "x-polygon-go-type": {
                                "name": "INanoseconds",
                                "path": "github.com/polygon-io/ptime"
                              }
                            },
                            "sequence_number": {
                              "description": "The sequence number represents the sequence in which quote events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                              "format": "int64",
                              "type": "integer"
                            },
                            "sip_timestamp": {
                              "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this quote from the exchange which produced it.",
                              "format": "int64",
                              "type": "integer",
                              "x-polygon-go-type": {
                                "name": "INanoseconds",
                                "path": "github.com/polygon-io/ptime"
                              }
                            },
                            "tape": {
                              "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                              "format": "int32",
                              "type": "integer"
                            },
                            "trf_timestamp": {
                              "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this quote.",
                              "format": "int64",
                              "type": "integer",
                              "x-polygon-go-type": {
                                "name": "INanoseconds",
                                "path": "github.com/polygon-io/ptime"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v3/quotes/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": [\n  {\n   \"ask_exchange\": 0,\n   \"ask_price\": 0,\n   \"ask_size\": 0,\n   \"bid_exchange\": 11,\n   \"bid_price\": 102.7,\n   \"bid_size\": 60,\n   \"conditions\": [\n    1\n   ],\n   \"participant_timestamp\": 1517562000065321200,\n   \"sequence_number\": 2060,\n   \"sip_timestamp\": 1517562000065700400,\n   \"tape\": 3\n  },\n  {\n   \"ask_exchange\": 0,\n   \"ask_price\": 0,\n   \"ask_size\": 0,\n   \"bid_exchange\": 11,\n   \"bid_price\": 170,\n   \"bid_size\": 2,\n   \"conditions\": [\n    1\n   ],\n   \"participant_timestamp\": 1517562000065408300,\n   \"sequence_number\": 2061,\n   \"sip_timestamp\": 1517562000065791500,\n   \"tape\": 3\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "Get NBBO quotes for a ticker symbol in a given time range.",
                  "operationId": "Quotes",
                  "parameters": [
                    {
                      "description": "The ticker symbol to get quotes for.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stockTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    },
                    {
                      "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a nanosecond timestamp.",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 50000.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "example": 10,
                        "maximum": 50000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "timestamp",
                        "enum": ["timestamp"],
                        "example": "timestamp",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v3/quotes/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                            "results": [
                              {
                                "ask_exchange": 0,
                                "ask_price": 0,
                                "ask_size": 0,
                                "bid_exchange": 11,
                                "bid_price": 102.7,
                                "bid_size": 60,
                                "conditions": [1],
                                "participant_timestamp": 1517562000065321200,
                                "sequence_number": 2060,
                                "sip_timestamp": 1517562000065700400,
                                "tape": 3
                              },
                              {
                                "ask_exchange": 0,
                                "ask_price": 0,
                                "ask_size": 0,
                                "bid_exchange": 11,
                                "bid_price": 170,
                                "bid_size": 2,
                                "conditions": [1],
                                "participant_timestamp": 1517562000065408300,
                                "sequence_number": 2061,
                                "sip_timestamp": 1517562000065791500,
                                "tape": 3
                              }
                            ],
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "results": {
                                "items": {
                                  "properties": {
                                    "ask_exchange": {
                                      "description": "The ask exchange ID",
                                      "type": "integer"
                                    },
                                    "ask_price": {
                                      "description": "The ask price.",
                                      "format": "double",
                                      "type": "number"
                                    },
                                    "ask_size": {
                                      "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                                      "format": "double",
                                      "type": "number"
                                    },
                                    "bid_exchange": {
                                      "description": "The bid exchange ID",
                                      "type": "integer"
                                    },
                                    "bid_price": {
                                      "description": "The bid price.",
                                      "format": "double",
                                      "type": "number"
                                    },
                                    "bid_size": {
                                      "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                                      "format": "double",
                                      "type": "number"
                                    },
                                    "conditions": {
                                      "description": "A list of condition codes.",
                                      "items": {
                                        "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "type": "array"
                                    },
                                    "indicators": {
                                      "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                                      "items": {
                                        "description": "The indicator code.",
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "type": "array"
                                    },
                                    "participant_timestamp": {
                                      "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                      "format": "int64",
                                      "type": "integer",
                                      "x-polygon-go-type": {
                                        "name": "INanoseconds",
                                        "path": "github.com/polygon-io/ptime"
                                      }
                                    },
                                    "sequence_number": {
                                      "description": "The sequence number represents the sequence in which quote events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                                      "format": "int64",
                                      "type": "integer"
                                    },
                                    "sip_timestamp": {
                                      "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this quote from the exchange which produced it.",
                                      "format": "int64",
                                      "type": "integer",
                                      "x-polygon-go-type": {
                                        "name": "INanoseconds",
                                        "path": "github.com/polygon-io/ptime"
                                      }
                                    },
                                    "tape": {
                                      "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "trf_timestamp": {
                                      "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this quote.",
                                      "format": "int64",
                                      "type": "integer",
                                      "x-polygon-go-type": {
                                        "name": "INanoseconds",
                                        "path": "github.com/polygon-io/ptime"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "A list of quotes."
                    }
                  },
                  "summary": "Quotes (NBBO)",
                  "tags": ["stocks:quotes"],
                  "x-polygon-entitlement-data-type": {
                    "description": "NBBO data",
                    "name": "nbbo"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "x-polygon-paginate": {
                    "limit": { "max": 50000 },
                    "order": { "default": "desc" },
                    "sort": { "default": "timestamp", "enum": ["timestamp"] }
                  },
                  "x-polygon-replaces": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Quotes (NBBO)",
                      "path": "get_v2_ticks_stocks_nbbo__ticker___date"
                    }
                  },
                  "parameterTemplate": "{apiBase}/v3/quotes/{stockTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/ticks/stocks/nbbo/{ticker}/{date}",
                  "templatedPath": "/v2/ticks/stocks/nbbo/{ticker}/{date}",
                  "path": "get_v2_ticks_stocks_nbbo__ticker___date",
                  "entitlements": {
                    "dataType": "nbbo",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Quotes (NBBO) v3",
                      "path": "get_v3_quotes__stockticker"
                    }
                  },
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "db_latency": {
                        "description": "Latency in milliseconds for the query results from the database.",
                        "type": "integer"
                      },
                      "results_count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "success": {
                        "description": "Whether or not this query was executed successfully.",
                        "type": "boolean"
                      },
                      "ticker": {
                        "description": "The exchange symbol that this item is traded under.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "T": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "f": {
                              "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                              "type": "integer"
                            },
                            "q": {
                              "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                              "format": "int64",
                              "type": "integer"
                            },
                            "t": {
                              "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                              "type": "integer"
                            },
                            "y": {
                              "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                              "type": "integer"
                            },
                            "P": {
                              "description": "The ask price.",
                              "format": "double",
                              "type": "number"
                            },
                            "S": {
                              "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                              "type": "integer"
                            },
                            "X": {
                              "description": "Ask Exchange Id",
                              "type": "integer"
                            },
                            "c": {
                              "description": "A list of condition codes.\n",
                              "items": {
                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "i": {
                              "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                              "items": {
                                "description": "The indicator code.\n",
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "p": {
                              "description": "The bid price.",
                              "format": "double",
                              "type": "number"
                            },
                            "s": {
                              "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                              "type": "integer"
                            },
                            "x": {
                              "description": "Bid Exchange Id",
                              "type": "integer"
                            },
                            "z": {
                              "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"db_latency\": 43,\n \"map\": {\n  \"P\": {\n   \"name\": \"ask_price\",\n   \"type\": \"float64\"\n  },\n  \"S\": {\n   \"name\": \"ask_size\",\n   \"type\": \"int\"\n  },\n  \"X\": {\n   \"name\": \"ask_exchange\",\n   \"type\": \"int\"\n  },\n  \"c\": {\n   \"name\": \"conditions\",\n   \"type\": \"int\"\n  },\n  \"f\": {\n   \"name\": \"trf_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"i\": {\n   \"name\": \"indicators\",\n   \"type\": \"int\"\n  },\n  \"p\": {\n   \"name\": \"bid_price\",\n   \"type\": \"float64\"\n  },\n  \"q\": {\n   \"name\": \"sequence_number\",\n   \"type\": \"int\"\n  },\n  \"s\": {\n   \"name\": \"bid_size\",\n   \"type\": \"int\"\n  },\n  \"t\": {\n   \"name\": \"sip_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"x\": {\n   \"name\": \"bid_exchange\",\n   \"type\": \"int\"\n  },\n  \"y\": {\n   \"name\": \"participant_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"z\": {\n   \"name\": \"tape\",\n   \"type\": \"int\"\n  }\n },\n \"results\": [\n  {\n   \"P\": 0,\n   \"S\": 0,\n   \"X\": 0,\n   \"c\": [\n    1\n   ],\n   \"p\": 102.7,\n   \"q\": 2060,\n   \"s\": 60,\n   \"t\": 1517562000065700400,\n   \"x\": 11,\n   \"y\": 1517562000065321200,\n   \"z\": 3\n  },\n  {\n   \"P\": 0,\n   \"S\": 0,\n   \"X\": 0,\n   \"c\": [\n    1\n   ],\n   \"p\": 170,\n   \"q\": 2061,\n   \"s\": 2,\n   \"t\": 1517562000065791500,\n   \"x\": 11,\n   \"y\": 1517562000065408300,\n   \"z\": 3\n  }\n ],\n \"results_count\": 2,\n \"success\": true,\n \"ticker\": \"AAPL\"\n}",
                  "description": "Get NBBO quotes for a given ticker symbol on a specified date.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol we want quotes for.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "ticker",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "The date/day of the quotes to retrieve in the format YYYY-MM-DD.",
                      "example": "2020-10-14",
                      "in": "path",
                      "name": "date",
                      "required": true,
                      "schema": { "format": "date", "type": "string" }
                    },
                    {
                      "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "integer" }
                    },
                    {
                      "description": "The maximum timestamp allowed in the results.\n",
                      "in": "query",
                      "name": "timestampLimit",
                      "schema": { "type": "integer" }
                    },
                    {
                      "description": "Reverse the order of the results.\n",
                      "example": true,
                      "in": "query",
                      "name": "reverse",
                      "schema": { "type": "boolean" }
                    },
                    {
                      "description": "Limit the size of the response, max 50000 and default 5000.",
                      "example": 10,
                      "in": "query",
                      "name": "limit",
                      "schema": { "type": "integer" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "db_latency": 43,
                            "map": {
                              "P": { "name": "ask_price", "type": "float64" },
                              "S": { "name": "ask_size", "type": "int" },
                              "X": { "name": "ask_exchange", "type": "int" },
                              "c": { "name": "conditions", "type": "int" },
                              "f": { "name": "trf_timestamp", "type": "int64" },
                              "i": { "name": "indicators", "type": "int" },
                              "p": { "name": "bid_price", "type": "float64" },
                              "q": { "name": "sequence_number", "type": "int" },
                              "s": { "name": "bid_size", "type": "int" },
                              "t": { "name": "sip_timestamp", "type": "int64" },
                              "x": { "name": "bid_exchange", "type": "int" },
                              "y": {
                                "name": "participant_timestamp",
                                "type": "int64"
                              },
                              "z": { "name": "tape", "type": "int" }
                            },
                            "results": [
                              {
                                "P": 0,
                                "S": 0,
                                "X": 0,
                                "c": [1],
                                "p": 102.7,
                                "q": 2060,
                                "s": 60,
                                "t": 1517562000065700400,
                                "x": 11,
                                "y": 1517562000065321200,
                                "z": 3
                              },
                              {
                                "P": 0,
                                "S": 0,
                                "X": 0,
                                "c": [1],
                                "p": 170,
                                "q": 2061,
                                "s": 2,
                                "t": 1517562000065791500,
                                "x": 11,
                                "y": 1517562000065408300,
                                "z": 3
                              }
                            ],
                            "results_count": 2,
                            "success": true,
                            "ticker": "AAPL"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "db_latency": {
                                    "description": "Latency in milliseconds for the query results from the database.",
                                    "type": "integer"
                                  },
                                  "results_count": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "success": {
                                    "description": "Whether or not this query was executed successfully.",
                                    "type": "boolean"
                                  },
                                  "ticker": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "results": {
                                    "items": {
                                      "allOf": [
                                        {
                                          "properties": {
                                            "T": {
                                              "description": "The exchange symbol that this item is traded under.",
                                              "type": "string"
                                            },
                                            "f": {
                                              "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                                              "type": "integer"
                                            },
                                            "q": {
                                              "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                                              "format": "int64",
                                              "type": "integer"
                                            },
                                            "t": {
                                              "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                                              "type": "integer"
                                            },
                                            "y": {
                                              "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        {
                                          "properties": {
                                            "P": {
                                              "description": "The ask price.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "S": {
                                              "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                                              "type": "integer"
                                            },
                                            "X": {
                                              "allOf": [
                                                {
                                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                                  "type": "integer"
                                                },
                                                {
                                                  "description": "Ask Exchange Id"
                                                }
                                              ]
                                            },
                                            "c": {
                                              "description": "A list of condition codes.\n",
                                              "items": {
                                                "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                                                "type": "integer"
                                              },
                                              "type": "array"
                                            },
                                            "i": {
                                              "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                                              "items": {
                                                "description": "The indicator code.\n",
                                                "type": "integer"
                                              },
                                              "type": "array"
                                            },
                                            "p": {
                                              "description": "The bid price.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "s": {
                                              "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                                              "type": "integer"
                                            },
                                            "x": {
                                              "allOf": [
                                                {
                                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                                  "type": "integer"
                                                },
                                                {
                                                  "description": "Bid Exchange Id"
                                                }
                                              ]
                                            },
                                            "z": {
                                              "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "A list of quotes."
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Quotes (NBBO)",
                  "tags": ["stocks:quotes"],
                  "x-polygon-deprecation": {
                    "date": 1654056060000,
                    "replaces": {
                      "name": "Quotes (NBBO) v3",
                      "path": "get_v3_quotes__stockticker"
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "description": "NBBO data",
                    "name": "nbbo"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/ticks/stocks/nbbo/{ticker}/{date}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/last/nbbo/{stocksTicker}",
                  "templatedPath": "/v2/last/nbbo/{stocksTicker}",
                  "path": "get_v2_last_nbbo__stocksticker",
                  "entitlements": {
                    "dataType": "nbbo",
                    "market": "stocks",
                    "timeframes": ["realtime", "delayed"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "properties": {
                          "P": {
                            "description": "The ask price.",
                            "format": "double",
                            "type": "number"
                          },
                          "S": {
                            "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                            "type": "integer"
                          },
                          "T": {
                            "description": "The exchange symbol that this item is traded under.",
                            "type": "string"
                          },
                          "X": {
                            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                            "type": "integer"
                          },
                          "c": {
                            "description": "A list of condition codes.",
                            "items": {
                              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                              "type": "integer"
                            },
                            "type": "array",
                            "x-polygon-go-type": { "name": "[]*int32" }
                          },
                          "f": {
                            "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                            "type": "integer"
                          },
                          "i": {
                            "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                            "items": {
                              "description": "The indicator code.",
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "p": {
                            "description": "The bid price.",
                            "format": "double",
                            "type": "number"
                          },
                          "q": {
                            "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                            "format": "int64",
                            "type": "integer"
                          },
                          "s": {
                            "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                            "type": "integer"
                          },
                          "t": {
                            "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                            "type": "integer"
                          },
                          "x": {
                            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                            "type": "integer"
                          },
                          "y": {
                            "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                            "type": "integer"
                          },
                          "z": {
                            "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                            "type": "integer"
                          }
                        },
                        "type": "object",
                        "x-polygon-go-type": { "name": "LastQuoteResult" }
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"request_id\": \"b84e24636301f19f88e0dfbf9a45ed5c\",\n \"results\": {\n  \"P\": 127.98,\n  \"S\": 7,\n  \"T\": \"AAPL\",\n  \"X\": 19,\n  \"p\": 127.96,\n  \"q\": 83480742,\n  \"s\": 1,\n  \"t\": 1617827221349730300,\n  \"x\": 11,\n  \"y\": 1617827221349366000,\n  \"z\": 3\n },\n \"status\": \"OK\"\n}",
                  "description": "Get the most recent NBBO (Quote) tick for a given stock.",
                  "operationId": "LastQuote",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the stock/equity.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stocksTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "request_id": "b84e24636301f19f88e0dfbf9a45ed5c",
                            "results": {
                              "P": 127.98,
                              "S": 7,
                              "T": "AAPL",
                              "X": 19,
                              "p": 127.96,
                              "q": 83480742,
                              "s": 1,
                              "t": 1617827221349730300,
                              "x": 11,
                              "y": 1617827221349366000,
                              "z": 3
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "properties": {
                                  "P": {
                                    "description": "The ask price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "S": {
                                    "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                                    "type": "integer"
                                  },
                                  "T": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  },
                                  "X": {
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                    "type": "integer"
                                  },
                                  "c": {
                                    "description": "A list of condition codes.",
                                    "items": {
                                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                                      "type": "integer"
                                    },
                                    "type": "array",
                                    "x-polygon-go-type": { "name": "[]*int32" }
                                  },
                                  "f": {
                                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                                    "type": "integer"
                                  },
                                  "i": {
                                    "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                                    "items": {
                                      "description": "The indicator code.",
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "p": {
                                    "description": "The bid price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "q": {
                                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "s": {
                                    "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                                    "type": "integer"
                                  },
                                  "x": {
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                    "type": "integer"
                                  },
                                  "y": {
                                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                    "type": "integer"
                                  },
                                  "z": {
                                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "x-polygon-go-type": {
                                  "name": "LastQuoteResult"
                                }
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "The last NBBO tick for this stock."
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    },
                    "404": {
                      "description": "The specified resource was not found"
                    }
                  },
                  "summary": "Last Quote",
                  "tags": ["stocks:last:quote"],
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "description": "Real Time Data", "name": "realtime" },
                    {
                      "description": "15 minute delayed data",
                      "name": "delayed"
                    }
                  ],
                  "x-polygon-entitlement-data-type": {
                    "description": "NBBO data",
                    "name": "nbbo"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/last/nbbo/{stocksTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/snapshot/locale/us/markets/stocks/tickers",
                  "templatedPath": "/v2/snapshot/locale/us/markets/stocks/tickers",
                  "path": "get_v2_snapshot_locale_us_markets_stocks_tickers",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": ["realtime", "delayed"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "tickers": {
                        "items": {
                          "properties": {
                            "day": {
                              "description": "The most recent daily bar for this ticker.",
                              "properties": {
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "lastQuote": {
                              "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                              "properties": {
                                "P": {
                                  "description": "The ask price.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "S": {
                                  "description": "The ask size in lots.",
                                  "type": "integer"
                                },
                                "p": {
                                  "description": "The bid price.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "s": {
                                  "description": "The bid size in lots.",
                                  "type": "integer"
                                },
                                "t": {
                                  "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "lastTrade": {
                              "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                              "properties": {
                                "c": {
                                  "description": "The trade conditions.",
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "i": {
                                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                  "type": "string"
                                },
                                "p": {
                                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                  "format": "double",
                                  "type": "number"
                                },
                                "s": {
                                  "description": "The size (volume) of the trade.",
                                  "type": "integer"
                                },
                                "t": {
                                  "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                  "type": "integer"
                                },
                                "x": {
                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "min": {
                              "description": "The most recent minute bar for this ticker.",
                              "properties": {
                                "av": {
                                  "description": "The accumulated volume.",
                                  "type": "integer"
                                },
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "prevDay": {
                              "description": "The previous day's bar for this ticker.",
                              "properties": {
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "ticker": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "todaysChange": {
                              "description": "The value of the change the from previous day.",
                              "format": "double",
                              "type": "number"
                            },
                            "todaysChangePerc": {
                              "description": "The percentage change since the previous day.",
                              "format": "double",
                              "type": "number"
                            },
                            "updated": {
                              "description": "The last updated timestamp.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"count\": 1,\n \"status\": \"OK\",\n \"tickers\": [\n  {\n   \"day\": {\n    \"c\": 20.506,\n    \"h\": 20.64,\n    \"l\": 20.506,\n    \"o\": 20.64,\n    \"v\": 37216,\n    \"vw\": 20.616\n   },\n   \"lastQuote\": {\n    \"P\": 20.6,\n    \"S\": 22,\n    \"p\": 20.5,\n    \"s\": 13,\n    \"t\": 1605192959994246100\n   },\n   \"lastTrade\": {\n    \"c\": [\n     14,\n     41\n    ],\n    \"i\": \"71675577320245\",\n    \"p\": 20.506,\n    \"s\": 2416,\n    \"t\": 1605192894630916600,\n    \"x\": 4\n   },\n   \"min\": {\n    \"av\": 37216,\n    \"c\": 20.506,\n    \"h\": 20.506,\n    \"l\": 20.506,\n    \"o\": 20.506,\n    \"v\": 5000,\n    \"vw\": 20.5105\n   },\n   \"prevDay\": {\n    \"c\": 20.63,\n    \"h\": 21,\n    \"l\": 20.5,\n    \"o\": 20.79,\n    \"v\": 292738,\n    \"vw\": 20.6939\n   },\n   \"ticker\": \"BCAT\",\n   \"todaysChange\": -0.124,\n   \"todaysChangePerc\": -0.601,\n   \"updated\": 1605192894630916600\n  }\n ]\n}",
                  "description": "Get the most up-to-date market data for all traded stock symbols.\n<br />\n<br />\nNote: Snapshot data is cleared at 3:30am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
                  "parameters": [
                    {
                      "description": "A comma separated list of tickers to get snapshots for.",
                      "in": "query",
                      "name": "tickers",
                      "schema": {
                        "items": { "type": "string" },
                        "type": "array"
                      }
                    },
                    {
                      "description": "Include OTC securities in the response. Default is false (don't include OTC securities).\n",
                      "in": "query",
                      "name": "include_otc",
                      "schema": { "type": "boolean" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "count": 1,
                            "status": "OK",
                            "tickers": [
                              {
                                "day": {
                                  "c": 20.506,
                                  "h": 20.64,
                                  "l": 20.506,
                                  "o": 20.64,
                                  "v": 37216,
                                  "vw": 20.616
                                },
                                "lastQuote": {
                                  "P": 20.6,
                                  "S": 22,
                                  "p": 20.5,
                                  "s": 13,
                                  "t": 1605192959994246100
                                },
                                "lastTrade": {
                                  "c": [14, 41],
                                  "i": "71675577320245",
                                  "p": 20.506,
                                  "s": 2416,
                                  "t": 1605192894630916600,
                                  "x": 4
                                },
                                "min": {
                                  "av": 37216,
                                  "c": 20.506,
                                  "h": 20.506,
                                  "l": 20.506,
                                  "o": 20.506,
                                  "v": 5000,
                                  "vw": 20.5105
                                },
                                "prevDay": {
                                  "c": 20.63,
                                  "h": 21,
                                  "l": 20.5,
                                  "o": 20.79,
                                  "v": 292738,
                                  "vw": 20.6939
                                },
                                "ticker": "BCAT",
                                "todaysChange": -0.124,
                                "todaysChangePerc": -0.601,
                                "updated": 1605192894630916600
                              }
                            ]
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "count": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "tickers": {
                                    "items": {
                                      "properties": {
                                        "day": {
                                          "description": "The most recent daily bar for this ticker.",
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "double",
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "lastQuote": {
                                          "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                          "properties": {
                                            "P": {
                                              "description": "The ask price.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "S": {
                                              "description": "The ask size in lots.",
                                              "type": "integer"
                                            },
                                            "p": {
                                              "description": "The bid price.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "s": {
                                              "description": "The bid size in lots.",
                                              "type": "integer"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "lastTrade": {
                                          "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                          "properties": {
                                            "c": {
                                              "description": "The trade conditions.",
                                              "items": { "type": "string" },
                                              "type": "array"
                                            },
                                            "i": {
                                              "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                              "type": "string"
                                            },
                                            "p": {
                                              "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "s": {
                                              "description": "The size (volume) of the trade.",
                                              "type": "integer"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "type": "integer"
                                            },
                                            "x": {
                                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "min": {
                                          "description": "The most recent minute bar for this ticker.",
                                          "properties": {
                                            "av": {
                                              "description": "The accumulated volume.",
                                              "type": "integer"
                                            },
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "double",
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "prevDay": {
                                          "description": "The previous day's bar for this ticker.",
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "double",
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "ticker": {
                                          "description": "The exchange symbol that this item is traded under.",
                                          "type": "string"
                                        },
                                        "todaysChange": {
                                          "description": "The value of the change the from previous day.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "todaysChangePerc": {
                                          "description": "The percentage change since the previous day.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "updated": {
                                          "description": "The last updated timestamp.",
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Get current state for all tickers"
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "All Tickers",
                  "tags": ["stocks:snapshot"],
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "description": "Real Time Data", "name": "realtime" },
                    {
                      "description": "15 minute delayed data",
                      "name": "delayed"
                    }
                  ],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/snapshot/locale/us/markets/stocks/tickers?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                },
                {
                  "id": "/v2/snapshot/locale/us/markets/stocks/{direction}",
                  "templatedPath": "/v2/snapshot/locale/us/markets/stocks/{direction}",
                  "path": "get_v2_snapshot_locale_us_markets_stocks__direction",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": ["realtime", "delayed"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "tickers": {
                        "items": {
                          "properties": {
                            "day": {
                              "description": "The most recent daily bar for this ticker.",
                              "properties": {
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "lastQuote": {
                              "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                              "properties": {
                                "P": {
                                  "description": "The ask price.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "S": {
                                  "description": "The ask size in lots.",
                                  "type": "integer"
                                },
                                "p": {
                                  "description": "The bid price.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "s": {
                                  "description": "The bid size in lots.",
                                  "type": "integer"
                                },
                                "t": {
                                  "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "lastTrade": {
                              "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                              "properties": {
                                "c": {
                                  "description": "The trade conditions.",
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "i": {
                                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                  "type": "string"
                                },
                                "p": {
                                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                  "format": "double",
                                  "type": "number"
                                },
                                "s": {
                                  "description": "The size (volume) of the trade.",
                                  "type": "integer"
                                },
                                "t": {
                                  "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                  "type": "integer"
                                },
                                "x": {
                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "min": {
                              "description": "The most recent minute bar for this ticker.",
                              "properties": {
                                "av": {
                                  "description": "The accumulated volume.",
                                  "type": "integer"
                                },
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "prevDay": {
                              "description": "The previous day's bar for this ticker.",
                              "properties": {
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "ticker": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "todaysChange": {
                              "description": "The value of the change the from previous day.",
                              "format": "double",
                              "type": "number"
                            },
                            "todaysChangePerc": {
                              "description": "The percentage change since the previous day.",
                              "format": "double",
                              "type": "number"
                            },
                            "updated": {
                              "description": "The last updated timestamp.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"status\": \"OK\",\n \"tickers\": [\n  {\n   \"day\": {\n    \"c\": 14.2284,\n    \"h\": 15.09,\n    \"l\": 14.2,\n    \"o\": 14.33,\n    \"v\": 133963,\n    \"vw\": 14.5311\n   },\n   \"lastQuote\": {\n    \"P\": 14.44,\n    \"S\": 11,\n    \"p\": 14.2,\n    \"s\": 25,\n    \"t\": 1605195929997325600\n   },\n   \"lastTrade\": {\n    \"c\": [\n     63\n    ],\n    \"i\": \"79372124707124\",\n    \"p\": 14.2284,\n    \"s\": 536,\n    \"t\": 1605195848258266000,\n    \"x\": 4\n   },\n   \"min\": {\n    \"av\": 133963,\n    \"c\": 14.2284,\n    \"h\": 14.325,\n    \"l\": 14.2,\n    \"o\": 14.28,\n    \"v\": 6108,\n    \"vw\": 14.2426\n   },\n   \"prevDay\": {\n    \"c\": 0.73,\n    \"h\": 0.799,\n    \"l\": 0.73,\n    \"o\": 0.75,\n    \"v\": 1568097,\n    \"vw\": 0.7721\n   },\n   \"ticker\": \"PDS\",\n   \"todaysChange\": 13.498,\n   \"todaysChangePerc\": 1849.096,\n   \"updated\": 1605195848258266000\n  }\n ]\n}",
                  "description": "Get the most up-to-date market data for the current top 20 gainers or losers of the day in the stocks/equities markets.\n<br />\n<br />\nTop gainers are those tickers whose price has increased by the highest percentage since the previous day's close.\nTop losers are those tickers whose price has decreased by the highest percentage since the previous day's close.\n<br />\n<br />\nNote: Snapshot data is cleared at 3:30am EST and gets populated as data is received from the exchanges.\n",
                  "parameters": [
                    {
                      "description": "The direction of the snapshot results to return.\n",
                      "example": "gainers",
                      "in": "path",
                      "name": "direction",
                      "required": true,
                      "schema": {
                        "enum": ["gainers", "losers"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Include OTC securities in the response. Default is false (don't include OTC securities).\n",
                      "in": "query",
                      "name": "include_otc",
                      "schema": { "type": "boolean" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "status": "OK",
                            "tickers": [
                              {
                                "day": {
                                  "c": 14.2284,
                                  "h": 15.09,
                                  "l": 14.2,
                                  "o": 14.33,
                                  "v": 133963,
                                  "vw": 14.5311
                                },
                                "lastQuote": {
                                  "P": 14.44,
                                  "S": 11,
                                  "p": 14.2,
                                  "s": 25,
                                  "t": 1605195929997325600
                                },
                                "lastTrade": {
                                  "c": [63],
                                  "i": "79372124707124",
                                  "p": 14.2284,
                                  "s": 536,
                                  "t": 1605195848258266000,
                                  "x": 4
                                },
                                "min": {
                                  "av": 133963,
                                  "c": 14.2284,
                                  "h": 14.325,
                                  "l": 14.2,
                                  "o": 14.28,
                                  "v": 6108,
                                  "vw": 14.2426
                                },
                                "prevDay": {
                                  "c": 0.73,
                                  "h": 0.799,
                                  "l": 0.73,
                                  "o": 0.75,
                                  "v": 1568097,
                                  "vw": 0.7721
                                },
                                "ticker": "PDS",
                                "todaysChange": 13.498,
                                "todaysChangePerc": 1849.096,
                                "updated": 1605195848258266000
                              }
                            ]
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "tickers": {
                                    "items": {
                                      "properties": {
                                        "day": {
                                          "description": "The most recent daily bar for this ticker.",
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "double",
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "lastQuote": {
                                          "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                          "properties": {
                                            "P": {
                                              "description": "The ask price.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "S": {
                                              "description": "The ask size in lots.",
                                              "type": "integer"
                                            },
                                            "p": {
                                              "description": "The bid price.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "s": {
                                              "description": "The bid size in lots.",
                                              "type": "integer"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "lastTrade": {
                                          "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                          "properties": {
                                            "c": {
                                              "description": "The trade conditions.",
                                              "items": { "type": "string" },
                                              "type": "array"
                                            },
                                            "i": {
                                              "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                              "type": "string"
                                            },
                                            "p": {
                                              "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "s": {
                                              "description": "The size (volume) of the trade.",
                                              "type": "integer"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "type": "integer"
                                            },
                                            "x": {
                                              "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                              "type": "integer"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "min": {
                                          "description": "The most recent minute bar for this ticker.",
                                          "properties": {
                                            "av": {
                                              "description": "The accumulated volume.",
                                              "type": "integer"
                                            },
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "double",
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "prevDay": {
                                          "description": "The previous day's bar for this ticker.",
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "double",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "double",
                                              "type": "number"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "ticker": {
                                          "description": "The exchange symbol that this item is traded under.",
                                          "type": "string"
                                        },
                                        "todaysChange": {
                                          "description": "The value of the change the from previous day.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "todaysChangePerc": {
                                          "description": "The percentage change since the previous day.",
                                          "format": "double",
                                          "type": "number"
                                        },
                                        "updated": {
                                          "description": "The last updated timestamp.",
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Get the current tickers of the day"
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Gainers/Losers",
                  "tags": ["stocks:snapshot"],
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "description": "Real Time Data", "name": "realtime" },
                    {
                      "description": "15 minute delayed data",
                      "name": "delayed"
                    }
                  ],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/snapshot/locale/us/markets/stocks/{direction}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                },
                {
                  "id": "/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}",
                  "templatedPath": "/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}",
                  "path": "get_v2_snapshot_locale_us_markets_stocks_tickers__stocksticker",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": ["realtime", "delayed"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "ticker": {
                        "properties": {
                          "day": {
                            "description": "The most recent daily bar for this ticker.",
                            "properties": {
                              "c": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "h": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "l": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "o": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "otc": {
                                "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                "type": "boolean"
                              },
                              "v": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "vw": {
                                "description": "The volume weighted average price.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "lastQuote": {
                            "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                            "properties": {
                              "P": {
                                "description": "The ask price.",
                                "format": "double",
                                "type": "number"
                              },
                              "S": {
                                "description": "The ask size in lots.",
                                "type": "integer"
                              },
                              "p": {
                                "description": "The bid price.",
                                "format": "double",
                                "type": "number"
                              },
                              "s": {
                                "description": "The bid size in lots.",
                                "type": "integer"
                              },
                              "t": {
                                "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "lastTrade": {
                            "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                            "properties": {
                              "c": {
                                "description": "The trade conditions.",
                                "items": { "type": "string" },
                                "type": "array"
                              },
                              "i": {
                                "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                "type": "string"
                              },
                              "p": {
                                "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                "format": "double",
                                "type": "number"
                              },
                              "s": {
                                "description": "The size (volume) of the trade.",
                                "type": "integer"
                              },
                              "t": {
                                "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                "type": "integer"
                              },
                              "x": {
                                "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "min": {
                            "description": "The most recent minute bar for this ticker.",
                            "properties": {
                              "av": {
                                "description": "The accumulated volume.",
                                "type": "integer"
                              },
                              "c": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "h": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "l": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "o": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "otc": {
                                "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                "type": "boolean"
                              },
                              "v": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "vw": {
                                "description": "The volume weighted average price.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "prevDay": {
                            "description": "The previous day's bar for this ticker.",
                            "properties": {
                              "c": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "h": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "l": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "o": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "otc": {
                                "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                "type": "boolean"
                              },
                              "v": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "vw": {
                                "description": "The volume weighted average price.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "ticker": {
                            "description": "The exchange symbol that this item is traded under.",
                            "type": "string"
                          },
                          "todaysChange": {
                            "description": "The value of the change the from previous day.",
                            "format": "double",
                            "type": "number"
                          },
                          "todaysChangePerc": {
                            "description": "The percentage change since the previous day.",
                            "format": "double",
                            "type": "number"
                          },
                          "updated": {
                            "description": "The last updated timestamp.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"request_id\": \"657e430f1ae768891f018e08e03598d8\",\n \"status\": \"OK\",\n \"ticker\": {\n  \"day\": {\n   \"c\": 120.4229,\n   \"h\": 120.53,\n   \"l\": 118.81,\n   \"o\": 119.62,\n   \"v\": 28727868,\n   \"vw\": 119.725\n  },\n  \"lastQuote\": {\n   \"P\": 120.47,\n   \"S\": 4,\n   \"p\": 120.46,\n   \"s\": 8,\n   \"t\": 1605195918507251700\n  },\n  \"lastTrade\": {\n   \"c\": [\n    14,\n    41\n   ],\n   \"i\": \"4046\",\n   \"p\": 120.47,\n   \"s\": 236,\n   \"t\": 1605195918306274000,\n   \"x\": 10\n  },\n  \"min\": {\n   \"av\": 28724441,\n   \"c\": 120.4201,\n   \"h\": 120.468,\n   \"l\": 120.37,\n   \"o\": 120.435,\n   \"v\": 270796,\n   \"vw\": 120.4129\n  },\n  \"prevDay\": {\n   \"c\": 119.49,\n   \"h\": 119.63,\n   \"l\": 116.44,\n   \"o\": 117.19,\n   \"v\": 110597265,\n   \"vw\": 118.4998\n  },\n  \"ticker\": \"AAPL\",\n  \"todaysChange\": 0.98,\n  \"todaysChangePerc\": 0.82,\n  \"updated\": 1605195918306274000\n }\n}",
                  "description": "Get the most up-to-date market data for a single traded stock ticker.\n<br />\n<br />\nNote: Snapshot data is cleared at 3:30am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the stock/equity.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stocksTicker",
                      "required": true,
                      "schema": { "type": "string" }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "request_id": "657e430f1ae768891f018e08e03598d8",
                            "status": "OK",
                            "ticker": {
                              "day": {
                                "c": 120.4229,
                                "h": 120.53,
                                "l": 118.81,
                                "o": 119.62,
                                "v": 28727868,
                                "vw": 119.725
                              },
                              "lastQuote": {
                                "P": 120.47,
                                "S": 4,
                                "p": 120.46,
                                "s": 8,
                                "t": 1605195918507251700
                              },
                              "lastTrade": {
                                "c": [14, 41],
                                "i": "4046",
                                "p": 120.47,
                                "s": 236,
                                "t": 1605195918306274000,
                                "x": 10
                              },
                              "min": {
                                "av": 28724441,
                                "c": 120.4201,
                                "h": 120.468,
                                "l": 120.37,
                                "o": 120.435,
                                "v": 270796,
                                "vw": 120.4129
                              },
                              "prevDay": {
                                "c": 119.49,
                                "h": 119.63,
                                "l": 116.44,
                                "o": 117.19,
                                "v": 110597265,
                                "vw": 118.4998
                              },
                              "ticker": "AAPL",
                              "todaysChange": 0.98,
                              "todaysChangePerc": 0.82,
                              "updated": 1605195918306274000
                            }
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "request_id": {
                                    "description": "A request id assigned by the server.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "ticker": {
                                    "properties": {
                                      "day": {
                                        "description": "The most recent daily bar for this ticker.",
                                        "properties": {
                                          "c": {
                                            "description": "The close price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "h": {
                                            "description": "The highest price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "l": {
                                            "description": "The lowest price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "o": {
                                            "description": "The open price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "otc": {
                                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                            "type": "boolean"
                                          },
                                          "v": {
                                            "description": "The trading volume of the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "vw": {
                                            "description": "The volume weighted average price.",
                                            "format": "double",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "lastQuote": {
                                        "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                        "properties": {
                                          "P": {
                                            "description": "The ask price.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "S": {
                                            "description": "The ask size in lots.",
                                            "type": "integer"
                                          },
                                          "p": {
                                            "description": "The bid price.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "s": {
                                            "description": "The bid size in lots.",
                                            "type": "integer"
                                          },
                                          "t": {
                                            "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "lastTrade": {
                                        "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                        "properties": {
                                          "c": {
                                            "description": "The trade conditions.",
                                            "items": { "type": "string" },
                                            "type": "array"
                                          },
                                          "i": {
                                            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                            "type": "string"
                                          },
                                          "p": {
                                            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "s": {
                                            "description": "The size (volume) of the trade.",
                                            "type": "integer"
                                          },
                                          "t": {
                                            "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                            "type": "integer"
                                          },
                                          "x": {
                                            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                            "type": "integer"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "min": {
                                        "description": "The most recent minute bar for this ticker.",
                                        "properties": {
                                          "av": {
                                            "description": "The accumulated volume.",
                                            "type": "integer"
                                          },
                                          "c": {
                                            "description": "The close price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "h": {
                                            "description": "The highest price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "l": {
                                            "description": "The lowest price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "o": {
                                            "description": "The open price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "otc": {
                                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                            "type": "boolean"
                                          },
                                          "v": {
                                            "description": "The trading volume of the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "vw": {
                                            "description": "The volume weighted average price.",
                                            "format": "double",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "prevDay": {
                                        "description": "The previous day's bar for this ticker.",
                                        "properties": {
                                          "c": {
                                            "description": "The close price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "h": {
                                            "description": "The highest price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "l": {
                                            "description": "The lowest price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "o": {
                                            "description": "The open price for the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "otc": {
                                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                            "type": "boolean"
                                          },
                                          "v": {
                                            "description": "The trading volume of the symbol in the given time period.",
                                            "format": "double",
                                            "type": "number"
                                          },
                                          "vw": {
                                            "description": "The volume weighted average price.",
                                            "format": "double",
                                            "type": "number"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "ticker": {
                                        "description": "The exchange symbol that this item is traded under.",
                                        "type": "string"
                                      },
                                      "todaysChange": {
                                        "description": "The value of the change the from previous day.",
                                        "format": "double",
                                        "type": "number"
                                      },
                                      "todaysChangePerc": {
                                        "description": "The percentage change since the previous day.",
                                        "format": "double",
                                        "type": "number"
                                      },
                                      "updated": {
                                        "description": "The last updated timestamp.",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Get current state for a ticker"
                    },
                    "default": { "description": "Unexpected error" }
                  },
                  "summary": "Ticker",
                  "tags": ["stocks:snapshot"],
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "description": "Real Time Data", "name": "realtime" },
                    {
                      "description": "15 minute delayed data",
                      "name": "delayed"
                    }
                  ],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": "Snapshots"
            },
            {
              "paths": [
                {
                  "id": "/v1/indicators/sma/{stockTicker}",
                  "templatedPath": "/v1/indicators/sma/{stockTicker}",
                  "path": "get_v1_indicators_sma__stockticker",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "properties": {
                          "underlying": {
                            "properties": {
                              "aggregates": {
                                "items": {
                                  "properties": {
                                    "c": {
                                      "description": "The close price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "h": {
                                      "description": "The highest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "l": {
                                      "description": "The lowest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "n": {
                                      "description": "The number of transactions in the aggregate window.",
                                      "type": "integer"
                                    },
                                    "o": {
                                      "description": "The open price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "otc": {
                                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                      "type": "boolean"
                                    },
                                    "t": {
                                      "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "v": {
                                      "description": "The trading volume of the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "vw": {
                                      "description": "The volume weighted average price.",
                                      "format": "float",
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "v",
                                    "vw",
                                    "o",
                                    "c",
                                    "h",
                                    "l",
                                    "t",
                                    "n"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-type": {
                                    "name": "Aggregate",
                                    "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                  }
                                },
                                "type": "array"
                              },
                              "url": {
                                "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "values": {
                            "items": {
                              "properties": {
                                "timestamp": {
                                  "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                  "format": "int64",
                                  "type": "integer",
                                  "x-polygon-go-type": {
                                    "name": "IMicroseconds",
                                    "path": "github.com/polygon-io/ptime"
                                  }
                                },
                                "value": {
                                  "description": "The indicator value for this period.",
                                  "format": "float",
                                  "type": "number",
                                  "x-polygon-go-type": { "name": "*float64" }
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-polygon-go-type": { "name": "SMAResults" }
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/sma/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"aggregates\": [\n    {\n     \"c\": 75.0875,\n     \"h\": 75.15,\n     \"l\": 73.7975,\n     \"n\": 1,\n     \"o\": 74.06,\n     \"t\": 1577941200000,\n     \"v\": 135647456,\n     \"vw\": 74.6099\n    },\n    {\n     \"c\": 74.3575,\n     \"h\": 75.145,\n     \"l\": 74.125,\n     \"n\": 1,\n     \"o\": 74.2875,\n     \"t\": 1578027600000,\n     \"v\": 146535512,\n     \"vw\": 74.7026\n    }\n   ],\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"timestamp\": 1517562000016,\n    \"value\": 140.139\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
                  "description": "Get the simple moving average (SMA) for a ticker symbol over a given time range.",
                  "operationId": "SMA",
                  "parameters": [
                    {
                      "description": "The ticker symbol for which to get simple moving average (SMA) data.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stockTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    },
                    {
                      "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "The size of the aggregate time window.",
                      "example": "day",
                      "in": "query",
                      "name": "timespan",
                      "schema": {
                        "default": "day",
                        "enum": [
                          "minute",
                          "hour",
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not the aggregates used to calculate the simple moving average are adjusted for splits. By default, aggregates are adjusted.\nSet this to false to get results that are NOT adjusted for splits.",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "default": true, "type": "boolean" }
                    },
                    {
                      "description": "The window size used to calculate the simple moving average (SMA). i.e. a window size of 10 with daily aggregates would result in a 10 day moving average.",
                      "example": 50,
                      "in": "query",
                      "name": "window",
                      "schema": { "default": 50, "type": "integer" }
                    },
                    {
                      "description": "The price in the aggregate which will be used to calculate the simple moving average. i.e. 'close' will result in using close prices to \ncalculate the simple moving average (SMA).",
                      "example": "close",
                      "in": "query",
                      "name": "series_type",
                      "schema": {
                        "default": "close",
                        "enum": ["open", "high", "low", "close"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
                      "in": "query",
                      "name": "expand_underlying",
                      "schema": { "default": false, "type": "boolean" }
                    },
                    {
                      "description": "The order in which to return the results, ordered by timestamp.",
                      "example": "desc",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 5000",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "maximum": 5000,
                        "type": "integer"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v1/indicators/sma/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                            "results": {
                              "underlying": {
                                "aggregates": [
                                  {
                                    "c": 75.0875,
                                    "h": 75.15,
                                    "l": 73.7975,
                                    "n": 1,
                                    "o": 74.06,
                                    "t": 1577941200000,
                                    "v": 135647456,
                                    "vw": 74.6099
                                  },
                                  {
                                    "c": 74.3575,
                                    "h": 75.145,
                                    "l": 74.125,
                                    "n": 1,
                                    "o": 74.2875,
                                    "t": 1578027600000,
                                    "v": 146535512,
                                    "vw": 74.7026
                                  }
                                ],
                                "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                              },
                              "values": [
                                { "timestamp": 1517562000016, "value": 140.139 }
                              ]
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "properties": {
                                  "underlying": {
                                    "properties": {
                                      "aggregates": {
                                        "items": {
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "n": {
                                              "description": "The number of transactions in the aggregate window.",
                                              "type": "integer"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "float",
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "v",
                                            "vw",
                                            "o",
                                            "c",
                                            "h",
                                            "l",
                                            "t",
                                            "n"
                                          ],
                                          "type": "object",
                                          "x-polygon-go-type": {
                                            "name": "Aggregate",
                                            "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "url": {
                                        "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "values": {
                                    "items": {
                                      "properties": {
                                        "timestamp": {
                                          "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                          "format": "int64",
                                          "type": "integer",
                                          "x-polygon-go-type": {
                                            "name": "IMicroseconds",
                                            "path": "github.com/polygon-io/ptime"
                                          }
                                        },
                                        "value": {
                                          "description": "The indicator value for this period.",
                                          "format": "float",
                                          "type": "number",
                                          "x-polygon-go-type": {
                                            "name": "*float64"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "x-polygon-go-type": { "name": "SMAResults" }
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "Simple Moving Average (SMA) data for each period."
                    }
                  },
                  "summary": "Simple Moving Average (SMA)",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v1/indicators/sma/{stockTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                },
                {
                  "id": "/v1/indicators/ema/{stockTicker}",
                  "templatedPath": "/v1/indicators/ema/{stockTicker}",
                  "path": "get_v1_indicators_ema__stockticker",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "properties": {
                          "underlying": {
                            "properties": {
                              "aggregates": {
                                "items": {
                                  "properties": {
                                    "c": {
                                      "description": "The close price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "h": {
                                      "description": "The highest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "l": {
                                      "description": "The lowest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "n": {
                                      "description": "The number of transactions in the aggregate window.",
                                      "type": "integer"
                                    },
                                    "o": {
                                      "description": "The open price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "otc": {
                                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                      "type": "boolean"
                                    },
                                    "t": {
                                      "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "v": {
                                      "description": "The trading volume of the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "vw": {
                                      "description": "The volume weighted average price.",
                                      "format": "float",
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "v",
                                    "vw",
                                    "o",
                                    "c",
                                    "h",
                                    "l",
                                    "t",
                                    "n"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-type": {
                                    "name": "Aggregate",
                                    "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                  }
                                },
                                "type": "array"
                              },
                              "url": {
                                "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "values": {
                            "items": {
                              "properties": {
                                "timestamp": {
                                  "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                  "format": "int64",
                                  "type": "integer",
                                  "x-polygon-go-type": {
                                    "name": "IMicroseconds",
                                    "path": "github.com/polygon-io/ptime"
                                  }
                                },
                                "value": {
                                  "description": "The indicator value for this period.",
                                  "format": "float",
                                  "type": "number",
                                  "x-polygon-go-type": { "name": "*float64" }
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-polygon-go-type": { "name": "EMAResults" }
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/ema/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"timestamp\": 1517562000016,\n    \"value\": 140.139\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
                  "description": "Get the exponential moving average (EMA) for a ticker symbol over a given time range.",
                  "operationId": "EMA",
                  "parameters": [
                    {
                      "description": "The ticker symbol for which to get exponential moving average (EMA) data.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stockTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    },
                    {
                      "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "The size of the aggregate time window.",
                      "example": "day",
                      "in": "query",
                      "name": "timespan",
                      "schema": {
                        "default": "day",
                        "enum": [
                          "minute",
                          "hour",
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not the aggregates used to calculate the exponential moving average are adjusted for splits. By default, aggregates are adjusted. Set this to false to get results that are NOT adjusted for splits.",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "default": true, "type": "boolean" }
                    },
                    {
                      "description": "The window size used to calculate the exponential moving average (EMA). i.e. a window size of 10 with daily aggregates would result in a 10 day moving average.",
                      "example": 50,
                      "in": "query",
                      "name": "window",
                      "schema": { "default": 50, "type": "integer" }
                    },
                    {
                      "description": "The price in the aggregate which will be used to calculate the exponential moving average. i.e. 'close' will result in using close prices to \ncalculate the exponential moving average (EMA).",
                      "example": "close",
                      "in": "query",
                      "name": "series_type",
                      "schema": {
                        "default": "close",
                        "enum": ["open", "high", "low", "close"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
                      "in": "query",
                      "name": "expand_underlying",
                      "schema": { "default": false, "type": "boolean" }
                    },
                    {
                      "description": "The order in which to return the results, ordered by timestamp.",
                      "example": "desc",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 5000",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "maximum": 5000,
                        "type": "integer"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v1/indicators/ema/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                            "results": {
                              "underlying": {
                                "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                              },
                              "values": [
                                { "timestamp": 1517562000016, "value": 140.139 }
                              ]
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "properties": {
                                  "underlying": {
                                    "properties": {
                                      "aggregates": {
                                        "items": {
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "n": {
                                              "description": "The number of transactions in the aggregate window.",
                                              "type": "integer"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "float",
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "v",
                                            "vw",
                                            "o",
                                            "c",
                                            "h",
                                            "l",
                                            "t",
                                            "n"
                                          ],
                                          "type": "object",
                                          "x-polygon-go-type": {
                                            "name": "Aggregate",
                                            "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "url": {
                                        "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "values": {
                                    "items": {
                                      "properties": {
                                        "timestamp": {
                                          "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                          "format": "int64",
                                          "type": "integer",
                                          "x-polygon-go-type": {
                                            "name": "IMicroseconds",
                                            "path": "github.com/polygon-io/ptime"
                                          }
                                        },
                                        "value": {
                                          "description": "The indicator value for this period.",
                                          "format": "float",
                                          "type": "number",
                                          "x-polygon-go-type": {
                                            "name": "*float64"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "x-polygon-go-type": { "name": "EMAResults" }
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "Exponential Moving Average (EMA) data for each period."
                    }
                  },
                  "summary": "Exponential Moving Average (EMA)",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v1/indicators/ema/{stockTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                },
                {
                  "id": "/v1/indicators/macd/{stockTicker}",
                  "templatedPath": "/v1/indicators/macd/{stockTicker}",
                  "path": "get_v1_indicators_macd__stockticker",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "properties": {
                          "underlying": {
                            "properties": {
                              "aggregates": {
                                "items": {
                                  "properties": {
                                    "c": {
                                      "description": "The close price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "h": {
                                      "description": "The highest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "l": {
                                      "description": "The lowest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "n": {
                                      "description": "The number of transactions in the aggregate window.",
                                      "type": "integer"
                                    },
                                    "o": {
                                      "description": "The open price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "otc": {
                                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                      "type": "boolean"
                                    },
                                    "t": {
                                      "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "v": {
                                      "description": "The trading volume of the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "vw": {
                                      "description": "The volume weighted average price.",
                                      "format": "float",
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "v",
                                    "vw",
                                    "o",
                                    "c",
                                    "h",
                                    "l",
                                    "t",
                                    "n"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-type": {
                                    "name": "Aggregate",
                                    "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                  }
                                },
                                "type": "array"
                              },
                              "url": {
                                "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "values": {
                            "items": {
                              "properties": {
                                "histogram": {
                                  "description": "The indicator value for this period.",
                                  "format": "float",
                                  "type": "number",
                                  "x-polygon-go-type": { "name": "*float64" }
                                },
                                "signal": {
                                  "description": "The indicator value for this period.",
                                  "format": "float",
                                  "type": "number",
                                  "x-polygon-go-type": { "name": "*float64" }
                                },
                                "timestamp": {
                                  "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                  "format": "int64",
                                  "type": "integer",
                                  "x-polygon-go-type": {
                                    "name": "IMicroseconds",
                                    "path": "github.com/polygon-io/ptime"
                                  }
                                },
                                "value": {
                                  "description": "The indicator value for this period.",
                                  "format": "float",
                                  "type": "number",
                                  "x-polygon-go-type": { "name": "*float64" }
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-polygon-go-type": { "name": "MACDResults" }
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/macd/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"histogram\": 38.3801666667,\n    \"signal\": 106.9811666667,\n    \"timestamp\": 1517562000016,\n    \"value\": 145.3613333333\n   },\n   {\n    \"histogram\": 41.098859136,\n    \"signal\": 102.7386283473,\n    \"timestamp\": 1517562001016,\n    \"value\": 143.8374874833\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
                  "description": "Get moving average convergence/divergence (MACD) data for a ticker symbol over a given time range.",
                  "operationId": "MACD",
                  "parameters": [
                    {
                      "description": "The ticker symbol for which to get MACD data.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stockTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    },
                    {
                      "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "The size of the aggregate time window.",
                      "example": "day",
                      "in": "query",
                      "name": "timespan",
                      "schema": {
                        "default": "day",
                        "enum": [
                          "minute",
                          "hour",
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not the aggregates used to calculate the MACD are adjusted for splits. By default, aggregates are adjusted. Set this to false to get results that are NOT adjusted for splits.",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "default": true, "type": "boolean" }
                    },
                    {
                      "description": "The short window size used to calculate MACD data.",
                      "example": 12,
                      "in": "query",
                      "name": "short_window",
                      "schema": { "default": 12, "type": "integer" }
                    },
                    {
                      "description": "The long window size used to calculate MACD data.",
                      "example": 26,
                      "in": "query",
                      "name": "long_window",
                      "schema": { "default": 26, "type": "integer" }
                    },
                    {
                      "description": "The window size used to calculate the MACD signal line.",
                      "example": 9,
                      "in": "query",
                      "name": "signal_window",
                      "schema": { "default": 9, "type": "integer" }
                    },
                    {
                      "description": "The price in the aggregate which will be used to calculate the MACD. i.e. 'close' will result in using close prices to \ncalculate the MACD.",
                      "example": "close",
                      "in": "query",
                      "name": "series_type",
                      "schema": {
                        "default": "close",
                        "enum": ["open", "high", "low", "close"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
                      "in": "query",
                      "name": "expand_underlying",
                      "schema": { "default": false, "type": "boolean" }
                    },
                    {
                      "description": "The order in which to return the results, ordered by timestamp.",
                      "example": "desc",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 5000",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "maximum": 5000,
                        "type": "integer"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v1/indicators/macd/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                            "results": {
                              "underlying": {
                                "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                              },
                              "values": [
                                {
                                  "histogram": 38.3801666667,
                                  "signal": 106.9811666667,
                                  "timestamp": 1517562000016,
                                  "value": 145.3613333333
                                },
                                {
                                  "histogram": 41.098859136,
                                  "signal": 102.7386283473,
                                  "timestamp": 1517562001016,
                                  "value": 143.8374874833
                                }
                              ]
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "properties": {
                                  "underlying": {
                                    "properties": {
                                      "aggregates": {
                                        "items": {
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "n": {
                                              "description": "The number of transactions in the aggregate window.",
                                              "type": "integer"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "float",
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "v",
                                            "vw",
                                            "o",
                                            "c",
                                            "h",
                                            "l",
                                            "t",
                                            "n"
                                          ],
                                          "type": "object",
                                          "x-polygon-go-type": {
                                            "name": "Aggregate",
                                            "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "url": {
                                        "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "values": {
                                    "items": {
                                      "properties": {
                                        "histogram": {
                                          "description": "The indicator value for this period.",
                                          "format": "float",
                                          "type": "number",
                                          "x-polygon-go-type": {
                                            "name": "*float64"
                                          }
                                        },
                                        "signal": {
                                          "description": "The indicator value for this period.",
                                          "format": "float",
                                          "type": "number",
                                          "x-polygon-go-type": {
                                            "name": "*float64"
                                          }
                                        },
                                        "timestamp": {
                                          "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                          "format": "int64",
                                          "type": "integer",
                                          "x-polygon-go-type": {
                                            "name": "IMicroseconds",
                                            "path": "github.com/polygon-io/ptime"
                                          }
                                        },
                                        "value": {
                                          "description": "The indicator value for this period.",
                                          "format": "float",
                                          "type": "number",
                                          "x-polygon-go-type": {
                                            "name": "*float64"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "x-polygon-go-type": { "name": "MACDResults" }
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "Moving Average Convergence/Divergence (MACD) data for each period."
                    }
                  },
                  "summary": "Moving Average Convergence/Divergence (MACD)",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v1/indicators/macd/{stockTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                },
                {
                  "id": "/v1/indicators/rsi/{stockTicker}",
                  "templatedPath": "/v1/indicators/rsi/{stockTicker}",
                  "path": "get_v1_indicators_rsi__stockticker",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "properties": {
                          "underlying": {
                            "properties": {
                              "aggregates": {
                                "items": {
                                  "properties": {
                                    "c": {
                                      "description": "The close price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "h": {
                                      "description": "The highest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "l": {
                                      "description": "The lowest price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "n": {
                                      "description": "The number of transactions in the aggregate window.",
                                      "type": "integer"
                                    },
                                    "o": {
                                      "description": "The open price for the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "otc": {
                                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                      "type": "boolean"
                                    },
                                    "t": {
                                      "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "v": {
                                      "description": "The trading volume of the symbol in the given time period.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "vw": {
                                      "description": "The volume weighted average price.",
                                      "format": "float",
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "v",
                                    "vw",
                                    "o",
                                    "c",
                                    "h",
                                    "l",
                                    "t",
                                    "n"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-type": {
                                    "name": "Aggregate",
                                    "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                  }
                                },
                                "type": "array"
                              },
                              "url": {
                                "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "values": {
                            "items": {
                              "properties": {
                                "timestamp": {
                                  "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                  "format": "int64",
                                  "type": "integer",
                                  "x-polygon-go-type": {
                                    "name": "IMicroseconds",
                                    "path": "github.com/polygon-io/ptime"
                                  }
                                },
                                "value": {
                                  "description": "The indicator value for this period.",
                                  "format": "float",
                                  "type": "number",
                                  "x-polygon-go-type": { "name": "*float64" }
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "x-polygon-go-type": { "name": "RSIResults" }
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/rsi/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"timestamp\": 1517562000016,\n    \"value\": 140.139\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
                  "description": "Get the relative strength index (RSI) for a ticker symbol over a given time range.",
                  "operationId": "RSI",
                  "parameters": [
                    {
                      "description": "The ticker symbol for which to get relative strength index (RSI) data.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "stockTicker",
                      "required": true,
                      "schema": { "type": "string" },
                      "x-polygon-go-id": "Ticker"
                    },
                    {
                      "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
                      "in": "query",
                      "name": "timestamp",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "The size of the aggregate time window.",
                      "example": "day",
                      "in": "query",
                      "name": "timespan",
                      "schema": {
                        "default": "day",
                        "enum": [
                          "minute",
                          "hour",
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not the aggregates used to calculate the relative strength index are adjusted for splits. By default, aggregates are adjusted. Set this to false to get results that are NOT adjusted for splits.",
                      "example": true,
                      "in": "query",
                      "name": "adjusted",
                      "schema": { "default": true, "type": "boolean" }
                    },
                    {
                      "description": "The window size used to calculate the relative strength index (RSI).",
                      "example": 14,
                      "in": "query",
                      "name": "window",
                      "schema": { "default": 14, "type": "integer" }
                    },
                    {
                      "description": "The price in the aggregate which will be used to calculate the relative strength index. i.e. 'close' will result in using close prices to \ncalculate the relative strength index (RSI).",
                      "example": "close",
                      "in": "query",
                      "name": "series_type",
                      "schema": {
                        "default": "close",
                        "enum": ["open", "high", "low", "close"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
                      "in": "query",
                      "name": "expand_underlying",
                      "schema": { "default": false, "type": "boolean" }
                    },
                    {
                      "description": "The order in which to return the results, ordered by timestamp.",
                      "example": "desc",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "default": "desc",
                        "enum": ["asc", "desc"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 5000",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "maximum": 5000,
                        "type": "integer"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v1/indicators/rsi/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                            "results": {
                              "underlying": {
                                "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                              },
                              "values": [
                                { "timestamp": 1517562000016, "value": 140.139 }
                              ]
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "properties": {
                                  "underlying": {
                                    "properties": {
                                      "aggregates": {
                                        "items": {
                                          "properties": {
                                            "c": {
                                              "description": "The close price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "h": {
                                              "description": "The highest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "l": {
                                              "description": "The lowest price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "n": {
                                              "description": "The number of transactions in the aggregate window.",
                                              "type": "integer"
                                            },
                                            "o": {
                                              "description": "The open price for the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "otc": {
                                              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                              "type": "boolean"
                                            },
                                            "t": {
                                              "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "v": {
                                              "description": "The trading volume of the symbol in the given time period.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "vw": {
                                              "description": "The volume weighted average price.",
                                              "format": "float",
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "v",
                                            "vw",
                                            "o",
                                            "c",
                                            "h",
                                            "l",
                                            "t",
                                            "n"
                                          ],
                                          "type": "object",
                                          "x-polygon-go-type": {
                                            "name": "Aggregate",
                                            "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                          }
                                        },
                                        "type": "array"
                                      },
                                      "url": {
                                        "description": "The URL which can be used to request the underlying aggregates used in this request.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "values": {
                                    "items": {
                                      "properties": {
                                        "timestamp": {
                                          "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                          "format": "int64",
                                          "type": "integer",
                                          "x-polygon-go-type": {
                                            "name": "IMicroseconds",
                                            "path": "github.com/polygon-io/ptime"
                                          }
                                        },
                                        "value": {
                                          "description": "The indicator value for this period.",
                                          "format": "float",
                                          "type": "number",
                                          "x-polygon-go-type": {
                                            "name": "*float64"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object",
                                "x-polygon-go-type": { "name": "RSIResults" }
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "Relative strength Index data for each period."
                    }
                  },
                  "summary": "Relative Strength Index (RSI)",
                  "tags": ["stocks:aggregates"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Aggregate data",
                    "name": "aggregates"
                  },
                  "x-polygon-entitlement-market-type": {
                    "description": "Stocks data",
                    "name": "stocks"
                  },
                  "parameterTemplate": "{apiBase}/v1/indicators/rsi/{stockTicker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": "Technical Indicators"
            }
          ]
        },
        {
          "reference": [
            {
              "paths": [
                {
                  "id": "/v3/reference/tickers",
                  "templatedPath": "/v3/reference/tickers",
                  "path": "get_v3_reference_tickers",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "results": {
                        "description": "An array of tickers that match your query.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
                        "items": {
                          "properties": {
                            "active": {
                              "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                              "type": "boolean"
                            },
                            "cik": {
                              "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                              "type": "string"
                            },
                            "composite_figi": {
                              "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                              "type": "string"
                            },
                            "currency_name": {
                              "description": "The name of the currency that this asset is traded with.",
                              "type": "string"
                            },
                            "delisted_utc": {
                              "description": "The last date that the asset was traded.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "last_updated_utc": {
                              "description": "The information is accurate up to this time.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the asset.",
                              "enum": ["us", "global"],
                              "type": "string"
                            },
                            "market": {
                              "description": "The market type of the asset.",
                              "enum": ["stocks", "crypto", "fx", "otc"],
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                              "type": "string"
                            },
                            "primary_exchange": {
                              "description": "The ISO code of the primary listing exchange for this asset.",
                              "type": "string"
                            },
                            "share_class_figi": {
                              "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                              "type": "string"
                            },
                            "ticker": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                              "type": "string"
                            }
                          },
                          "required": ["ticker", "name", "market", "locale"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"count\": 1,\n \"next_url\": \"https://api.polygon.io/v3/reference/tickers?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"e70013d92930de90e089dc8fa098888e\",\n \"results\": [\n  {\n   \"active\": true,\n   \"cik\": \"0001090872\",\n   \"composite_figi\": \"BBG000BWQYZ5\",\n   \"currency_name\": \"usd\",\n   \"last_updated_utc\": \"2021-04-25T00:00:00Z\",\n   \"locale\": \"us\",\n   \"market\": \"stocks\",\n   \"name\": \"Agilent Technologies Inc.\",\n   \"primary_exchange\": \"XNYS\",\n   \"share_class_figi\": \"BBG001SCTQY4\",\n   \"ticker\": \"A\",\n   \"type\": \"CS\"\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "Query all ticker symbols which are supported by Polygon.io. This API currently includes Stocks/Equities, Crypto, and Forex.\n",
                  "parameters": [
                    {
                      "description": "Specify a ticker symbol.\nDefaults to empty string which queries all tickers.\n",
                      "in": "query",
                      "name": "ticker",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "Specify the type of the tickers. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).\nDefaults to empty string which queries all types.\n",
                      "in": "query",
                      "name": "type",
                      "schema": {
                        "enum": [
                          "CS",
                          "ADRC",
                          "ADRP",
                          "ADRR",
                          "UNIT",
                          "RIGHT",
                          "PFD",
                          "FUND",
                          "SP",
                          "WARRANT",
                          "INDEX",
                          "ETF",
                          "ETN",
                          "OS",
                          "GDR",
                          "OTHER",
                          "NYRS",
                          "AGEN",
                          "EQLK",
                          "BOND",
                          "ADRW",
                          "BASKET",
                          "LT"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Filter by market type. By default all markets are included.\n",
                      "in": "query",
                      "name": "market",
                      "schema": {
                        "enum": ["stocks", "crypto", "fx", "otc"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Specify the primary exchange of the asset in the ISO code format. Find more information about the ISO codes [at the ISO org website](https://www.iso20022.org/market-identifier-codes).\nDefaults to empty string which queries all exchanges.\n",
                      "in": "query",
                      "name": "exchange",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Specify the CUSIP code of the asset you want to search for. Find more information about CUSIP codes [at their website](https://www.cusip.com/identifiers.html#/CUSIP).\nDefaults to empty string which queries all CUSIPs.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
                      "in": "query",
                      "name": "cusip",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Specify the CIK of the asset you want to search for. Find more information about CIK codes [at their website](https://www.sec.gov/edgar/searchedgar/cik.htm).\nDefaults to empty string which queries all CIKs.\n",
                      "in": "query",
                      "name": "cik",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Specify a point in time to retrieve tickers available on that date.\nDefaults to the most recent available date.\n",
                      "in": "query",
                      "name": "date",
                      "schema": {
                        "oneOf": [
                          { "format": "date-time", "type": "string" },
                          { "format": "date", "type": "string" }
                        ]
                      }
                    },
                    {
                      "description": "Search for terms within the ticker and/or company name.\n",
                      "in": "query",
                      "name": "search",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Specify if the tickers returned should be actively traded on the queried date. Default is true.\n",
                      "example": true,
                      "in": "query",
                      "name": "active",
                      "schema": { "type": "boolean" }
                    },
                    {
                      "description": "The field to sort the results on. Default is ticker.\nIf the `search` query parameter is present, `sort` is ignored and results are ordered by relevance.\n",
                      "example": "ticker",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "enum": [
                          "ticker",
                          "name",
                          "market",
                          "locale",
                          "primary_exchange",
                          "type",
                          "currency_symbol",
                          "currency_name",
                          "base_currency_symbol",
                          "base_currency_name",
                          "cik",
                          "composite_figi",
                          "share_class_figi",
                          "last_updated_utc",
                          "delisted_utc"
                        ],
                        "type": "string"
                      }
                    },
                    {
                      "description": "The order to sort the results on. Default is asc (ascending).\n",
                      "example": "asc",
                      "in": "query",
                      "name": "order",
                      "schema": { "enum": ["asc", "desc"], "type": "string" }
                    },
                    {
                      "description": "Limit the size of the response, default is 100 and max is 1000.\n\nIf your query returns more than the max limit and you want to retrieve the next page of results,\nsee the `next_url` response attribute.\n",
                      "example": 10,
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 100,
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "count": 1,
                            "next_url": "https://api.polygon.io/v3/reference/tickers?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "request_id": "e70013d92930de90e089dc8fa098888e",
                            "results": [
                              {
                                "active": true,
                                "cik": "0001090872",
                                "composite_figi": "BBG000BWQYZ5",
                                "currency_name": "usd",
                                "last_updated_utc": "2021-04-25T00:00:00Z",
                                "locale": "us",
                                "market": "stocks",
                                "name": "Agilent Technologies Inc.",
                                "primary_exchange": "XNYS",
                                "share_class_figi": "BBG001SCTQY4",
                                "ticker": "A",
                                "type": "CS"
                              }
                            ],
                            "status": "OK"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "results": {
                                    "description": "An array of tickers that match your query.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
                                    "items": {
                                      "properties": {
                                        "active": {
                                          "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                                          "type": "boolean"
                                        },
                                        "cik": {
                                          "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                                          "type": "string"
                                        },
                                        "composite_figi": {
                                          "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                                          "type": "string"
                                        },
                                        "currency_name": {
                                          "description": "The name of the currency that this asset is traded with.",
                                          "type": "string"
                                        },
                                        "delisted_utc": {
                                          "description": "The last date that the asset was traded.",
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "last_updated_utc": {
                                          "description": "The information is accurate up to this time.",
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "locale": {
                                          "description": "The locale of the asset.",
                                          "enum": ["us", "global"],
                                          "type": "string"
                                        },
                                        "market": {
                                          "description": "The market type of the asset.",
                                          "enum": [
                                            "stocks",
                                            "crypto",
                                            "fx",
                                            "otc"
                                          ],
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                                          "type": "string"
                                        },
                                        "primary_exchange": {
                                          "description": "The ISO code of the primary listing exchange for this asset.",
                                          "type": "string"
                                        },
                                        "share_class_figi": {
                                          "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                                          "type": "string"
                                        },
                                        "ticker": {
                                          "description": "The exchange symbol that this item is traded under.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "ticker",
                                        "name",
                                        "market",
                                        "locale"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "next_url": {
                                    "description": "If present, this value can be used to fetch the next page of data.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "request_id": {
                                    "description": "A request id assigned by the server.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "count": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Reference Tickers."
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    }
                  },
                  "summary": "Tickers",
                  "tags": ["reference:tickers:list"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/tickers?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/reference/tickers/{ticker}",
                  "templatedPath": "/v3/reference/tickers/{ticker}",
                  "path": "get_v3_reference_tickers__ticker",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "results": {
                        "description": "Ticker with details.\n",
                        "properties": {
                          "active": {
                            "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                            "type": "boolean"
                          },
                          "address": {
                            "properties": {
                              "address1": {
                                "description": "The first line of the company's headquarters address.",
                                "type": "string"
                              },
                              "city": {
                                "description": "The city of the company's headquarters address.",
                                "type": "string"
                              },
                              "postal_code": {
                                "description": "The postal code of the company's headquarters address.",
                                "type": "string"
                              },
                              "state": {
                                "description": "The state of the company's headquarters address.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "branding": {
                            "properties": {
                              "icon_url": {
                                "description": "A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                                "type": "string"
                              },
                              "logo_url": {
                                "description": "A link to this ticker's company's logo.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "cik": {
                            "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                            "type": "string"
                          },
                          "composite_figi": {
                            "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                            "type": "string"
                          },
                          "currency_name": {
                            "description": "The name of the currency that this asset is traded with.",
                            "type": "string"
                          },
                          "delisted_utc": {
                            "description": "The last date that the asset was traded.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the company and what they do/offer.",
                            "type": "string"
                          },
                          "homepage_url": {
                            "description": "The URL of the company's website homepage.",
                            "type": "string"
                          },
                          "list_date": {
                            "description": "The date that the symbol was first publicly listed in the format YYYY-MM-DD.",
                            "type": "string"
                          },
                          "locale": {
                            "description": "The locale of the asset.",
                            "enum": ["us", "global"],
                            "type": "string"
                          },
                          "market": {
                            "description": "The market type of the asset.",
                            "enum": ["stocks", "crypto", "fx", "otc"],
                            "type": "string"
                          },
                          "market_cap": {
                            "description": "The most recent close price of the ticker multiplied by weighted outstanding shares.",
                            "format": "double",
                            "type": "number"
                          },
                          "name": {
                            "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                            "type": "string"
                          },
                          "phone_number": {
                            "description": "The phone number for the company behind this ticker.",
                            "type": "string"
                          },
                          "primary_exchange": {
                            "description": "The ISO code of the primary listing exchange for this asset.",
                            "type": "string"
                          },
                          "share_class_figi": {
                            "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                            "type": "string"
                          },
                          "share_class_shares_outstanding": {
                            "description": "The recorded number of outstanding shares for this particular share class.",
                            "format": "double",
                            "type": "number"
                          },
                          "sic_code": {
                            "description": "The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.\n",
                            "type": "string"
                          },
                          "sic_description": {
                            "description": "A description of this ticker's SIC code.",
                            "type": "string"
                          },
                          "ticker": {
                            "description": "The exchange symbol that this item is traded under.",
                            "type": "string"
                          },
                          "ticker_root": {
                            "description": "The root of a specified ticker. For example, the root of BRK.A is BRK.",
                            "type": "string"
                          },
                          "ticker_suffix": {
                            "description": "The suffix of a specified ticker. For example, the suffix of BRK.A is A.",
                            "type": "string"
                          },
                          "total_employees": {
                            "description": "The approximate number of employees for the company.",
                            "type": "number"
                          },
                          "type": {
                            "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                            "type": "string"
                          },
                          "weighted_shares_outstanding": {
                            "description": "The shares outstanding calculated assuming all shares of other share classes are converted to this share class.\n",
                            "format": "double",
                            "type": "number"
                          }
                        },
                        "required": [
                          "ticker",
                          "name",
                          "market",
                          "locale",
                          "active",
                          "currency_name"
                        ],
                        "type": "object"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": {\n  \"active\": true,\n  \"address\": {\n   \"address1\": \"One Apple Park Way\",\n   \"city\": \"Cupertino\",\n   \"postal_code\": \"95014\",\n   \"state\": \"CA\"\n  },\n  \"branding\": {\n   \"icon_url\": \"https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_icon.png\",\n   \"logo_url\": \"https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_logo.svg\"\n  },\n  \"cik\": \"0000320193\",\n  \"composite_figi\": \"BBG000B9XRY4\",\n  \"currency_name\": \"usd\",\n  \"description\": \"Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), AirPods, and TV boxes (Apple TV), among others. The iPhone makes up the majority of Apple's total revenue. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Card, and Apple Pay, among others. Apple's products run internally developed software and semiconductors, and the firm is well known for its integration of hardware, software and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers. The company generates roughly 40% of its revenue from the Americas, with the remainder earned internationally.\",\n  \"homepage_url\": \"https://www.apple.com\",\n  \"list_date\": \"1980-12-12\",\n  \"locale\": \"us\",\n  \"market\": \"stocks\",\n  \"market_cap\": 2771126040150,\n  \"name\": \"Apple Inc.\",\n  \"phone_number\": \"(408) 996-1010\",\n  \"primary_exchange\": \"XNAS\",\n  \"share_class_figi\": \"BBG001S5N8V8\",\n  \"share_class_shares_outstanding\": 16406400000,\n  \"sic_code\": \"3571\",\n  \"sic_description\": \"ELECTRONIC COMPUTERS\",\n  \"ticker\": \"AAPL\",\n  \"ticker_root\": \"AAPL\",\n  \"total_employees\": 154000,\n  \"type\": \"CS\",\n  \"weighted_shares_outstanding\": 16334371000\n },\n \"status\": \"OK\"\n}",
                  "description": "Get a single ticker supported by Polygon.io. This response will have detailed information about the ticker and the company behind it.\n",
                  "parameters": [
                    {
                      "description": "The ticker symbol of the asset.",
                      "example": "AAPL",
                      "in": "path",
                      "name": "ticker",
                      "required": true,
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Specify a point in time to get information about the ticker available on that date.\nWhen retrieving information from SEC filings, we compare this date with the period of report date on the SEC filing.\n\nFor example, consider an SEC filing submitted by AAPL on 2019-07-31, with a period of report date ending on 2019-06-29.\nThat means that the filing was submitted on 2019-07-31, but the filing was created based on information from 2019-06-29.\nIf you were to query for AAPL details on 2019-06-29, the ticker details would include information from the SEC filing.\n\nDefaults to the most recent available date.\n",
                      "in": "query",
                      "name": "date",
                      "schema": {
                        "oneOf": [
                          { "format": "date-time", "type": "string" },
                          { "format": "date", "type": "string" }
                        ]
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe",
                            "results": {
                              "active": true,
                              "address": {
                                "address1": "One Apple Park Way",
                                "city": "Cupertino",
                                "postal_code": "95014",
                                "state": "CA"
                              },
                              "branding": {
                                "icon_url": "https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_icon.png",
                                "logo_url": "https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_logo.svg"
                              },
                              "cik": "0000320193",
                              "composite_figi": "BBG000B9XRY4",
                              "currency_name": "usd",
                              "description": "Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), AirPods, and TV boxes (Apple TV), among others. The iPhone makes up the majority of Apple's total revenue. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Card, and Apple Pay, among others. Apple's products run internally developed software and semiconductors, and the firm is well known for its integration of hardware, software and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers. The company generates roughly 40% of its revenue from the Americas, with the remainder earned internationally.",
                              "homepage_url": "https://www.apple.com",
                              "list_date": "1980-12-12",
                              "locale": "us",
                              "market": "stocks",
                              "market_cap": 2771126040150,
                              "name": "Apple Inc.",
                              "phone_number": "(408) 996-1010",
                              "primary_exchange": "XNAS",
                              "share_class_figi": "BBG001S5N8V8",
                              "share_class_shares_outstanding": 16406400000,
                              "sic_code": "3571",
                              "sic_description": "ELECTRONIC COMPUTERS",
                              "ticker": "AAPL",
                              "ticker_root": "AAPL",
                              "total_employees": 154000,
                              "type": "CS",
                              "weighted_shares_outstanding": 16334371000
                            },
                            "status": "OK"
                          },
                          "schema": {
                            "allOf": [
                              {
                                "properties": {
                                  "results": {
                                    "description": "Ticker with details.\n",
                                    "properties": {
                                      "active": {
                                        "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                                        "type": "boolean"
                                      },
                                      "address": {
                                        "properties": {
                                          "address1": {
                                            "description": "The first line of the company's headquarters address.",
                                            "type": "string"
                                          },
                                          "city": {
                                            "description": "The city of the company's headquarters address.",
                                            "type": "string"
                                          },
                                          "postal_code": {
                                            "description": "The postal code of the company's headquarters address.",
                                            "type": "string"
                                          },
                                          "state": {
                                            "description": "The state of the company's headquarters address.",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "branding": {
                                        "properties": {
                                          "icon_url": {
                                            "description": "A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                                            "type": "string"
                                          },
                                          "logo_url": {
                                            "description": "A link to this ticker's company's logo.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "cik": {
                                        "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                                        "type": "string"
                                      },
                                      "composite_figi": {
                                        "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                                        "type": "string"
                                      },
                                      "currency_name": {
                                        "description": "The name of the currency that this asset is traded with.",
                                        "type": "string"
                                      },
                                      "delisted_utc": {
                                        "description": "The last date that the asset was traded.",
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "description": {
                                        "description": "A description of the company and what they do/offer.",
                                        "type": "string"
                                      },
                                      "homepage_url": {
                                        "description": "The URL of the company's website homepage.",
                                        "type": "string"
                                      },
                                      "list_date": {
                                        "description": "The date that the symbol was first publicly listed in the format YYYY-MM-DD.",
                                        "type": "string"
                                      },
                                      "locale": {
                                        "description": "The locale of the asset.",
                                        "enum": ["us", "global"],
                                        "type": "string"
                                      },
                                      "market": {
                                        "description": "The market type of the asset.",
                                        "enum": [
                                          "stocks",
                                          "crypto",
                                          "fx",
                                          "otc"
                                        ],
                                        "type": "string"
                                      },
                                      "market_cap": {
                                        "description": "The most recent close price of the ticker multiplied by weighted outstanding shares.",
                                        "format": "double",
                                        "type": "number"
                                      },
                                      "name": {
                                        "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                                        "type": "string"
                                      },
                                      "phone_number": {
                                        "description": "The phone number for the company behind this ticker.",
                                        "type": "string"
                                      },
                                      "primary_exchange": {
                                        "description": "The ISO code of the primary listing exchange for this asset.",
                                        "type": "string"
                                      },
                                      "share_class_figi": {
                                        "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                                        "type": "string"
                                      },
                                      "share_class_shares_outstanding": {
                                        "description": "The recorded number of outstanding shares for this particular share class.",
                                        "format": "double",
                                        "type": "number"
                                      },
                                      "sic_code": {
                                        "description": "The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.\n",
                                        "type": "string"
                                      },
                                      "sic_description": {
                                        "description": "A description of this ticker's SIC code.",
                                        "type": "string"
                                      },
                                      "ticker": {
                                        "description": "The exchange symbol that this item is traded under.",
                                        "type": "string"
                                      },
                                      "ticker_root": {
                                        "description": "The root of a specified ticker. For example, the root of BRK.A is BRK.",
                                        "type": "string"
                                      },
                                      "ticker_suffix": {
                                        "description": "The suffix of a specified ticker. For example, the suffix of BRK.A is A.",
                                        "type": "string"
                                      },
                                      "total_employees": {
                                        "description": "The approximate number of employees for the company.",
                                        "type": "number"
                                      },
                                      "type": {
                                        "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                                        "type": "string"
                                      },
                                      "weighted_shares_outstanding": {
                                        "description": "The shares outstanding calculated assuming all shares of other share classes are converted to this share class.\n",
                                        "format": "double",
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "ticker",
                                      "name",
                                      "market",
                                      "locale",
                                      "active",
                                      "currency_name"
                                    ],
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "request_id": {
                                    "description": "A request id assigned by the server.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "count": {
                                    "description": "The total number of results for this request.",
                                    "type": "integer"
                                  },
                                  "status": {
                                    "description": "The status of this request's response.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        }
                      },
                      "description": "Reference Tickers."
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    }
                  },
                  "summary": "Ticker Details v3",
                  "tags": ["reference:tickers:get"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/tickers/{ticker}?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v2/reference/news",
                  "templatedPath": "/v2/reference/news",
                  "path": "get_v2_reference_news",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "amp_url": {
                              "description": "The mobile friendly Accelerated Mobile Page (AMP) URL.",
                              "type": "string"
                            },
                            "article_url": {
                              "description": "A link to the news article.",
                              "type": "string"
                            },
                            "author": {
                              "description": "The article's author.",
                              "type": "string"
                            },
                            "description": {
                              "description": "A description of the article.",
                              "type": "string"
                            },
                            "id": {
                              "description": "Unique identifier for the article.",
                              "type": "string"
                            },
                            "image_url": {
                              "description": "The article's image URL.",
                              "type": "string"
                            },
                            "keywords": {
                              "description": "The keywords associated with the article (which will vary depending on\nthe publishing source).",
                              "items": { "type": "string" },
                              "type": "array"
                            },
                            "published_utc": {
                              "description": "The date the article was published on.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "publisher": {
                              "properties": {
                                "favicon_url": {
                                  "description": "The publisher's homepage favicon URL.",
                                  "type": "string"
                                },
                                "homepage_url": {
                                  "description": "The publisher's homepage URL.",
                                  "type": "string"
                                },
                                "logo_url": {
                                  "description": "The publisher's logo URL.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The publisher's name.",
                                  "type": "string"
                                }
                              },
                              "required": ["name", "logo_url", "homepage_url"],
                              "type": "object"
                            },
                            "tickers": {
                              "description": "The ticker symbols associated with the article.",
                              "items": {
                                "description": "The exchange symbol that this item is traded under.",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "title": {
                              "description": "The title of the news article.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "publisher",
                            "title",
                            "author",
                            "published_utc",
                            "article_url",
                            "tickers"
                          ],
                          "type": "object",
                          "x-polygon-go-type": {
                            "name": "NewsArticleMetadata",
                            "path": "github.com/polygon-io/go-lib-models/v2/globals"
                          }
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"count\": 1,\n \"next_url\": \"https://api.polygon.io:443/v2/reference/news?cursor=eyJsaW1pdCI6MSwic29ydCI6InB1Ymxpc2hlZF91dGMiLCJvcmRlciI6ImFzY2VuZGluZyIsInRpY2tlciI6e30sInB1Ymxpc2hlZF91dGMiOnsiZ3RlIjoiMjAyMS0wNC0yNiJ9LCJzZWFyY2hfYWZ0ZXIiOlsxNjE5NDA0Mzk3MDAwLG51bGxdfQ\",\n \"request_id\": \"831afdb0b8078549fed053476984947a\",\n \"results\": [\n  {\n   \"amp_url\": \"https://amp.benzinga.com/amp/content/20784086\",\n   \"article_url\": \"https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square\",\n   \"author\": \"Rachit Vats\",\n   \"description\": \"<p>Cathie Wood-led Ark Investment Management on Friday snapped up another 221,167 shares of the cryptocurrency exchange <strong>Coinbase Global Inc </strong>(NASDAQ: <a class=\\\"ticker\\\" href=\\\"https://www.benzinga.com/stock/coin#NASDAQ\\\">COIN</a>) worth about $64.49 million on the stock&rsquo;s Friday&rsquo;s dip and also its fourth-straight loss.</p>\\n<p>The investment firm&rsquo;s <strong>Ark Innovation ETF</strong> (NYSE: <a class=\\\"ticker\\\" href=\\\"https://www.benzinga.com/stock/arkk#NYSE\\\">ARKK</a>) bought the shares of the company that closed 0.63% lower at $291.60 on Friday, giving the cryptocurrency exchange a market cap of $58.09 billion. Coinbase&rsquo;s market cap has dropped from $85.8 billion on its blockbuster listing earlier this month.</p>\\n<p>The New York-based company also added another 3,873 shares of the mobile gaming company <strong>Skillz Inc</strong> (NYSE: <a class=\\\"ticker\\\" href=\\\"https://www.benzinga.com/stock/sklz#NYSE\\\">SKLZ</a>), <a href=\\\"http://www.benzinga.com/markets/cryptocurrency/21/04/20762794/cathie-woods-ark-loads-up-another-1-2-million-shares-in-skillz-also-adds-coinbase-draftkin\\\">just a day after</a> snapping 1.2 million shares of the stock.</p>\\n<p>ARKK bought the shares of the company which closed ...</p><p><a href=https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square alt=Cathie Wood Adds More Coinbase, Skillz, Trims Square>Full story available on Benzinga.com</a></p>\",\n   \"id\": \"nJsSJJdwViHZcw5367rZi7_qkXLfMzacXBfpv-vD9UA\",\n   \"image_url\": \"https://cdn2.benzinga.com/files/imagecache/og_image_social_share_1200x630/images/story/2012/andre-francois-mckenzie-auhr4gcqcce-unsplash.jpg?width=720\",\n   \"keywords\": [\n    \"Sector ETFs\",\n    \"Penny Stocks\",\n    \"Cryptocurrency\",\n    \"Small Cap\",\n    \"Markets\",\n    \"Trading Ideas\",\n    \"ETFs\"\n   ],\n   \"published_utc\": \"2021-04-26T02:33:17Z\",\n   \"publisher\": {\n    \"favicon_url\": \"https://s3.polygon.io/public/public/assets/news/favicons/benzinga.ico\",\n    \"homepage_url\": \"https://www.benzinga.com/\",\n    \"logo_url\": \"https://s3.polygon.io/public/public/assets/news/logos/benzinga.svg\",\n    \"name\": \"Benzinga\"\n   },\n   \"tickers\": [\n    \"DOCU\",\n    \"DDD\",\n    \"NIU\",\n    \"ARKF\",\n    \"NVDA\",\n    \"SKLZ\",\n    \"PCAR\",\n    \"MASS\",\n    \"PSTI\",\n    \"SPFR\",\n    \"TREE\",\n    \"PHR\",\n    \"IRDM\",\n    \"BEAM\",\n    \"ARKW\",\n    \"ARKK\",\n    \"ARKG\",\n    \"PSTG\",\n    \"SQ\",\n    \"IONS\",\n    \"SYRS\"\n   ],\n   \"title\": \"Cathie Wood Adds More Coinbase, Skillz, Trims Square\"\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "Get the most recent news articles relating to a stock ticker symbol, including a summary of the article and a link to the original source.",
                  "operationId": "ListNews",
                  "parameters": [
                    {
                      "description": "Return results that contain this ticker.",
                      "in": "query",
                      "name": "ticker",
                      "schema": {
                        "description": "The exchange symbol that this item is traded under.",
                        "type": "string"
                      },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "Return results published on, before, or after this date.",
                      "in": "query",
                      "name": "published_utc",
                      "schema": {
                        "oneOf": [
                          { "format": "date-time", "type": "string" },
                          { "format": "date", "type": "string" }
                        ]
                      },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 1000.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "example": 10,
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "published_utc",
                        "enum": ["published_utc"],
                        "example": "published_utc",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "count": 1,
                            "next_url": "https://api.polygon.io:443/v2/reference/news?cursor=eyJsaW1pdCI6MSwic29ydCI6InB1Ymxpc2hlZF91dGMiLCJvcmRlciI6ImFzY2VuZGluZyIsInRpY2tlciI6e30sInB1Ymxpc2hlZF91dGMiOnsiZ3RlIjoiMjAyMS0wNC0yNiJ9LCJzZWFyY2hfYWZ0ZXIiOlsxNjE5NDA0Mzk3MDAwLG51bGxdfQ",
                            "request_id": "831afdb0b8078549fed053476984947a",
                            "results": [
                              {
                                "amp_url": "https://amp.benzinga.com/amp/content/20784086",
                                "article_url": "https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square",
                                "author": "Rachit Vats",
                                "description": "<p>Cathie Wood-led Ark Investment Management on Friday snapped up another 221,167 shares of the cryptocurrency exchange <strong>Coinbase Global Inc </strong>(NASDAQ: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/coin#NASDAQ\">COIN</a>) worth about $64.49 million on the stock&rsquo;s Friday&rsquo;s dip and also its fourth-straight loss.</p>\n<p>The investment firm&rsquo;s <strong>Ark Innovation ETF</strong> (NYSE: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/arkk#NYSE\">ARKK</a>) bought the shares of the company that closed 0.63% lower at $291.60 on Friday, giving the cryptocurrency exchange a market cap of $58.09 billion. Coinbase&rsquo;s market cap has dropped from $85.8 billion on its blockbuster listing earlier this month.</p>\n<p>The New York-based company also added another 3,873 shares of the mobile gaming company <strong>Skillz Inc</strong> (NYSE: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/sklz#NYSE\">SKLZ</a>), <a href=\"http://www.benzinga.com/markets/cryptocurrency/21/04/20762794/cathie-woods-ark-loads-up-another-1-2-million-shares-in-skillz-also-adds-coinbase-draftkin\">just a day after</a> snapping 1.2 million shares of the stock.</p>\n<p>ARKK bought the shares of the company which closed ...</p><p><a href=https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square alt=Cathie Wood Adds More Coinbase, Skillz, Trims Square>Full story available on Benzinga.com</a></p>",
                                "id": "nJsSJJdwViHZcw5367rZi7_qkXLfMzacXBfpv-vD9UA",
                                "image_url": "https://cdn2.benzinga.com/files/imagecache/og_image_social_share_1200x630/images/story/2012/andre-francois-mckenzie-auhr4gcqcce-unsplash.jpg?width=720",
                                "keywords": [
                                  "Sector ETFs",
                                  "Penny Stocks",
                                  "Cryptocurrency",
                                  "Small Cap",
                                  "Markets",
                                  "Trading Ideas",
                                  "ETFs"
                                ],
                                "published_utc": "2021-04-26T02:33:17Z",
                                "publisher": {
                                  "favicon_url": "https://s3.polygon.io/public/public/assets/news/favicons/benzinga.ico",
                                  "homepage_url": "https://www.benzinga.com/",
                                  "logo_url": "https://s3.polygon.io/public/public/assets/news/logos/benzinga.svg",
                                  "name": "Benzinga"
                                },
                                "tickers": [
                                  "DOCU",
                                  "DDD",
                                  "NIU",
                                  "ARKF",
                                  "NVDA",
                                  "SKLZ",
                                  "PCAR",
                                  "MASS",
                                  "PSTI",
                                  "SPFR",
                                  "TREE",
                                  "PHR",
                                  "IRDM",
                                  "BEAM",
                                  "ARKW",
                                  "ARKK",
                                  "ARKG",
                                  "PSTG",
                                  "SQ",
                                  "IONS",
                                  "SYRS"
                                ],
                                "title": "Cathie Wood Adds More Coinbase, Skillz, Trims Square"
                              }
                            ],
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "type": "integer"
                              },
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "items": {
                                  "properties": {
                                    "amp_url": {
                                      "description": "The mobile friendly Accelerated Mobile Page (AMP) URL.",
                                      "type": "string"
                                    },
                                    "article_url": {
                                      "description": "A link to the news article.",
                                      "type": "string"
                                    },
                                    "author": {
                                      "description": "The article's author.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "A description of the article.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Unique identifier for the article.",
                                      "type": "string"
                                    },
                                    "image_url": {
                                      "description": "The article's image URL.",
                                      "type": "string"
                                    },
                                    "keywords": {
                                      "description": "The keywords associated with the article (which will vary depending on\nthe publishing source).",
                                      "items": { "type": "string" },
                                      "type": "array"
                                    },
                                    "published_utc": {
                                      "description": "The date the article was published on.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "publisher": {
                                      "properties": {
                                        "favicon_url": {
                                          "description": "The publisher's homepage favicon URL.",
                                          "type": "string"
                                        },
                                        "homepage_url": {
                                          "description": "The publisher's homepage URL.",
                                          "type": "string"
                                        },
                                        "logo_url": {
                                          "description": "The publisher's logo URL.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The publisher's name.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "logo_url",
                                        "homepage_url"
                                      ],
                                      "type": "object"
                                    },
                                    "tickers": {
                                      "description": "The ticker symbols associated with the article.",
                                      "items": {
                                        "description": "The exchange symbol that this item is traded under.",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "title": {
                                      "description": "The title of the news article.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "publisher",
                                    "title",
                                    "author",
                                    "published_utc",
                                    "article_url",
                                    "tickers"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-type": {
                                    "name": "NewsArticleMetadata",
                                    "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                  }
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "An array of news articles."
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    },
                    "404": {
                      "description": "The specified resource was not found"
                    }
                  },
                  "summary": "Ticker News",
                  "tags": ["reference:news"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "x-polygon-paginate": {
                    "sort": {
                      "default": "published_utc",
                      "enum": ["published_utc"],
                      "limit": { "default": 10, "maximum": 1000, "minimum": 1 }
                    }
                  },
                  "parameterTemplate": "{apiBase}/v2/reference/news?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/reference/tickers/types",
                  "templatedPath": "/v3/reference/tickers/types",
                  "path": "get_v3_reference_tickers_types",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "count": {
                        "description": "The total number of results for this request.",
                        "example": 1,
                        "type": "integer"
                      },
                      "request_id": {
                        "description": "A request ID assigned by the server.",
                        "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "description": "Describes the type of financial instrument represented by a ticker.",
                          "properties": {
                            "asset_class": {
                              "description": "An identifier for a group of similar financial instruments.",
                              "enum": ["stocks", "options", "crypto", "fx"],
                              "example": "stocks",
                              "type": "string"
                            },
                            "code": {
                              "description": "A code used by Polygon.io to refer to this ticker type.",
                              "example": "CS",
                              "type": "string"
                            },
                            "description": {
                              "description": "A short description of this ticker type.",
                              "example": "Common Stock",
                              "type": "string"
                            },
                            "locale": {
                              "description": "An identifier for a geographical location.",
                              "enum": ["us", "global"],
                              "example": "us",
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "description",
                            "asset_class",
                            "locale"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "example": "OK",
                        "type": "string"
                      }
                    },
                    "required": ["status", "request_id"],
                    "type": "object"
                  },
                  "example": "{\n \"count\": 1,\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": [\n  {\n   \"asset_class\": \"stocks\",\n   \"code\": \"CS\",\n   \"description\": \"Common Stock\",\n   \"locale\": \"us\"\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "List all ticker types that Polygon.io has.",
                  "operationId": "ListTickerTypes",
                  "parameters": [
                    {
                      "description": "Filter by asset class.",
                      "in": "query",
                      "name": "asset_class",
                      "schema": {
                        "description": "An identifier for a group of similar financial instruments.",
                        "enum": ["stocks", "options", "crypto", "fx"],
                        "example": "stocks",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Filter by locale.",
                      "in": "query",
                      "name": "locale",
                      "schema": {
                        "description": "An identifier for a geographical location.",
                        "enum": ["us", "global"],
                        "example": "us",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "results": {
                                "items": {
                                  "description": "Describes the type of financial instrument represented by a ticker.",
                                  "properties": {
                                    "asset_class": {
                                      "description": "An identifier for a group of similar financial instruments.",
                                      "enum": [
                                        "stocks",
                                        "options",
                                        "crypto",
                                        "fx"
                                      ],
                                      "example": "stocks",
                                      "type": "string"
                                    },
                                    "code": {
                                      "description": "A code used by Polygon.io to refer to this ticker type.",
                                      "example": "CS",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "A short description of this ticker type.",
                                      "example": "Common Stock",
                                      "type": "string"
                                    },
                                    "locale": {
                                      "description": "An identifier for a geographical location.",
                                      "enum": ["us", "global"],
                                      "example": "us",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "code",
                                    "description",
                                    "asset_class",
                                    "locale"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": ["status", "request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "OK"
                    },
                    "400": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": ["status", "request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "a query parameter was malformed"
                    },
                    "default": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": ["status", "request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "an unknown error occurred"
                    }
                  },
                  "summary": "Ticker Types",
                  "tags": ["reference:tickers:types"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/tickers/types?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v1/marketstatus/upcoming",
                  "templatedPath": "/v1/marketstatus/upcoming",
                  "path": "get_v1_marketstatus_upcoming",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "items": {
                      "properties": {
                        "close": {
                          "description": "The market close time on the holiday (if it's not closed).",
                          "format": "date-time",
                          "type": "string"
                        },
                        "date": {
                          "description": "The date of the holiday.",
                          "format": "date",
                          "type": "string"
                        },
                        "exchange": {
                          "description": "Which market the record is for.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the holiday.",
                          "type": "string"
                        },
                        "open": {
                          "description": "The market open time on the holiday (if it's not closed).",
                          "format": "date-time",
                          "type": "string"
                        },
                        "status": {
                          "description": "The status of the market on the holiday.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "example": "[\n {\n  \"date\": \"2020-11-26T00:00:00.000Z\",\n  \"exchange\": \"NYSE\",\n  \"name\": \"Thanksgiving\",\n  \"status\": \"closed\"\n },\n {\n  \"date\": \"2020-11-26T00:00:00.000Z\",\n  \"exchange\": \"NASDAQ\",\n  \"name\": \"Thanksgiving\",\n  \"status\": \"closed\"\n },\n {\n  \"date\": \"2020-11-26T00:00:00.000Z\",\n  \"exchange\": \"OTC\",\n  \"name\": \"Thanksgiving\",\n  \"status\": \"closed\"\n },\n {\n  \"close\": \"2020-11-27T18:00:00.000Z\",\n  \"date\": \"2020-11-27T00:00:00.000Z\",\n  \"exchange\": \"NASDAQ\",\n  \"name\": \"Thanksgiving\",\n  \"open\": \"2020-11-27T14:30:00.000Z\",\n  \"status\": \"early-close\"\n },\n {\n  \"close\": \"2020-11-27T18:00:00.000Z\",\n  \"date\": \"2020-11-27T00:00:00.000Z\",\n  \"exchange\": \"NYSE\",\n  \"name\": \"Thanksgiving\",\n  \"open\": \"2020-11-27T14:30:00.000Z\",\n  \"status\": \"early-close\"\n }\n]",
                  "description": "Get upcoming market holidays and their open/close times.\n",
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": [
                            {
                              "date": "2020-11-26T00:00:00.000Z",
                              "exchange": "NYSE",
                              "name": "Thanksgiving",
                              "status": "closed"
                            },
                            {
                              "date": "2020-11-26T00:00:00.000Z",
                              "exchange": "NASDAQ",
                              "name": "Thanksgiving",
                              "status": "closed"
                            },
                            {
                              "date": "2020-11-26T00:00:00.000Z",
                              "exchange": "OTC",
                              "name": "Thanksgiving",
                              "status": "closed"
                            },
                            {
                              "close": "2020-11-27T18:00:00.000Z",
                              "date": "2020-11-27T00:00:00.000Z",
                              "exchange": "NASDAQ",
                              "name": "Thanksgiving",
                              "open": "2020-11-27T14:30:00.000Z",
                              "status": "early-close"
                            },
                            {
                              "close": "2020-11-27T18:00:00.000Z",
                              "date": "2020-11-27T00:00:00.000Z",
                              "exchange": "NYSE",
                              "name": "Thanksgiving",
                              "open": "2020-11-27T14:30:00.000Z",
                              "status": "early-close"
                            }
                          ],
                          "schema": {
                            "items": {
                              "properties": {
                                "close": {
                                  "description": "The market close time on the holiday (if it's not closed).",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "date": {
                                  "description": "The date of the holiday.",
                                  "format": "date",
                                  "type": "string"
                                },
                                "exchange": {
                                  "description": "Which market the record is for.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the holiday.",
                                  "type": "string"
                                },
                                "open": {
                                  "description": "The market open time on the holiday (if it's not closed).",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The status of the market on the holiday.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          }
                        }
                      },
                      "description": "Holidays for each market in the near future."
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    },
                    "404": {
                      "description": "The specified resource was not found"
                    },
                    "409": {
                      "description": "Parameter is invalid or incorrect."
                    }
                  },
                  "summary": "Market Holidays",
                  "tags": ["reference:stocks:market"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "parameters": [],
                  "parameterTemplate": "{apiBase}/v1/marketstatus/upcoming?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v1/marketstatus/now",
                  "templatedPath": "/v1/marketstatus/now",
                  "path": "get_v1_marketstatus_now",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "afterHours": {
                        "description": "Whether or not the market is in post-market hours.",
                        "type": "boolean"
                      },
                      "currencies": {
                        "properties": {
                          "crypto": {
                            "description": "The status of the crypto market.",
                            "type": "string"
                          },
                          "fx": {
                            "description": "The status of the forex market.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "earlyHours": {
                        "description": "Whether or not the market is in pre-market hours.",
                        "type": "boolean"
                      },
                      "exchanges": {
                        "properties": {
                          "nasdaq": {
                            "description": "The status of the Nasdaq market.",
                            "type": "string"
                          },
                          "nyse": {
                            "description": "The status of the NYSE market.",
                            "type": "string"
                          },
                          "otc": {
                            "description": "The status of the OTC market.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "market": {
                        "description": "The status of the market as a whole.",
                        "type": "string"
                      },
                      "serverTime": {
                        "description": "The current time of the server.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"afterHours\": true,\n \"currencies\": {\n  \"crypto\": \"open\",\n  \"fx\": \"open\"\n },\n \"earlyHours\": false,\n \"exchanges\": {\n  \"nasdaq\": \"extended-hours\",\n  \"nyse\": \"extended-hours\",\n  \"otc\": \"closed\"\n },\n \"market\": \"extended-hours\",\n \"serverTime\": \"2020-11-10T22:37:37.000Z\"\n}",
                  "description": "Get the current trading status of the exchanges and overall financial markets.\n",
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "afterHours": true,
                            "currencies": { "crypto": "open", "fx": "open" },
                            "earlyHours": false,
                            "exchanges": {
                              "nasdaq": "extended-hours",
                              "nyse": "extended-hours",
                              "otc": "closed"
                            },
                            "market": "extended-hours",
                            "serverTime": "2020-11-10T22:37:37.000Z"
                          },
                          "schema": {
                            "properties": {
                              "afterHours": {
                                "description": "Whether or not the market is in post-market hours.",
                                "type": "boolean"
                              },
                              "currencies": {
                                "properties": {
                                  "crypto": {
                                    "description": "The status of the crypto market.",
                                    "type": "string"
                                  },
                                  "fx": {
                                    "description": "The status of the forex market.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "earlyHours": {
                                "description": "Whether or not the market is in pre-market hours.",
                                "type": "boolean"
                              },
                              "exchanges": {
                                "properties": {
                                  "nasdaq": {
                                    "description": "The status of the Nasdaq market.",
                                    "type": "string"
                                  },
                                  "nyse": {
                                    "description": "The status of the NYSE market.",
                                    "type": "string"
                                  },
                                  "otc": {
                                    "description": "The status of the OTC market.",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "market": {
                                "description": "The status of the market as a whole.",
                                "type": "string"
                              },
                              "serverTime": {
                                "description": "The current time of the server.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "Status of the market and each exchange"
                    },
                    "401": {
                      "description": "Unauthorized - Check our API Key and account status"
                    },
                    "404": {
                      "description": "The specified resource was not found"
                    },
                    "409": {
                      "description": "Parameter is invalid or incorrect."
                    }
                  },
                  "summary": "Market Status",
                  "tags": ["reference:stocks:market"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "parameters": [],
                  "parameterTemplate": "{apiBase}/v1/marketstatus/now?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/reference/splits",
                  "templatedPath": "/v3/reference/splits",
                  "path": "get_v3_reference_splits",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": { "type": "string" },
                      "results": {
                        "items": {
                          "properties": {
                            "execution_date": {
                              "description": "The execution date of the stock split. On this date the stock split was applied.",
                              "type": "string"
                            },
                            "split_from": {
                              "description": "The second number in the split ratio.\n\nFor example: In a 2-for-1 split, split_from would be 1.",
                              "format": "float",
                              "type": "number"
                            },
                            "split_to": {
                              "description": "The first number in the split ratio.\n\nFor example: In a 2-for-1 split, split_to would be 2.",
                              "format": "float",
                              "type": "number"
                            },
                            "ticker": {
                              "description": "The ticker symbol of the stock split.",
                              "type": "string"
                            }
                          },
                          "required": ["split_from", "split_to"],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v3/splits/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"results\": [\n  {\n   \"execution_date\": \"2020-08-31\",\n   \"split_from\": 1,\n   \"split_to\": 4,\n   \"ticker\": \"AAPL\"\n  },\n  {\n   \"execution_date\": \"2005-02-28\",\n   \"split_from\": 1,\n   \"split_to\": 2,\n   \"ticker\": \"AAPL\"\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "Get a list of historical stock splits, including the ticker symbol, the execution date, and the factors of the split ratio.",
                  "operationId": "ListStockSplits",
                  "parameters": [
                    {
                      "description": "Return the stock splits that contain this ticker.",
                      "in": "query",
                      "name": "ticker",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query by execution date with the format YYYY-MM-DD.",
                      "in": "query",
                      "name": "execution_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query for reverse stock splits. A split ratio where split_from is greater than split_to represents a reverse split. By default this filter is not used.",
                      "in": "query",
                      "name": "reverse_split",
                      "schema": { "nullable": true, "type": "boolean" }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 1000.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "example": 10,
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "execution_date",
                        "enum": ["execution_date", "ticker"],
                        "example": "execution_date",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "example": {
                            "next_url": "https://api.polygon.io/v3/splits/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                            "results": [
                              {
                                "execution_date": "2020-08-31",
                                "split_from": 1,
                                "split_to": 4,
                                "ticker": "AAPL"
                              },
                              {
                                "execution_date": "2005-02-28",
                                "split_from": 1,
                                "split_to": 2,
                                "ticker": "AAPL"
                              }
                            ],
                            "status": "OK"
                          },
                          "schema": {
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": { "type": "string" },
                              "results": {
                                "items": {
                                  "properties": {
                                    "execution_date": {
                                      "description": "The execution date of the stock split. On this date the stock split was applied.",
                                      "type": "string"
                                    },
                                    "split_from": {
                                      "description": "The second number in the split ratio.\n\nFor example: In a 2-for-1 split, split_from would be 1.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "split_to": {
                                      "description": "The first number in the split ratio.\n\nFor example: In a 2-for-1 split, split_to would be 2.",
                                      "format": "float",
                                      "type": "number"
                                    },
                                    "ticker": {
                                      "description": "The ticker symbol of the stock split.",
                                      "type": "string"
                                    }
                                  },
                                  "required": ["split_from", "split_to"],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "description": "A list of stock splits."
                    }
                  },
                  "summary": "Stock Splits v3",
                  "tags": ["reference:stocks"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "x-polygon-paginate": {
                    "limit": { "default": 10, "max": 1000 },
                    "sort": {
                      "default": "execution_date",
                      "enum": ["execution_date", "ticker"]
                    }
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/splits?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/reference/dividends",
                  "templatedPath": "/v3/reference/dividends",
                  "path": "get_v3_reference_dividends",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "description": "A list of dividends.",
                    "example": {
                      "next_url": "https://api.polygon.io/v3/reference/dividends/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                      "results": [
                        {
                          "cash_amount": 0.22,
                          "declaration_date": "2021-10-28",
                          "dividend_type": "CD",
                          "ex_dividend_date": "2021-11-05",
                          "frequency": 4,
                          "pay_date": "2021-11-11",
                          "record_date": "2021-11-08",
                          "ticker": "AAPL"
                        },
                        {
                          "cash_amount": 0.22,
                          "declaration_date": "2021-07-27",
                          "dividend_type": "CD",
                          "ex_dividend_date": "2021-08-06",
                          "frequency": 4,
                          "pay_date": "2021-08-12",
                          "record_date": "2021-08-09",
                          "ticker": "AAPL"
                        }
                      ],
                      "status": "OK"
                    },
                    "properties": {
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": { "type": "string" },
                      "results": {
                        "items": {
                          "properties": {
                            "cash_amount": {
                              "description": "The cash amount of the dividend per share owned.",
                              "type": "number",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "currency": {
                              "description": "The currency in which the dividend is paid.",
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "declaration_date": {
                              "description": "The date that the dividend was announced.",
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "dividend_type": {
                              "description": "The type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.\nLong-Term and Short-Term capital gain distributions are denoted as LT and ST, respectively.",
                              "enum": ["CD", "SC", "LT", "ST"],
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "ex_dividend_date": {
                              "description": "The date that the stock first trades without the dividend, determined by the exchange.",
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "frequency": {
                              "description": "The number of times per year the dividend is paid out.  Possible values are 0 (one-time), 1 (annually), 2 (bi-annually), 4 (quarterly), and 12 (monthly).",
                              "type": "integer",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "pay_date": {
                              "description": "The date that the dividend is paid out.",
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "record_date": {
                              "description": "The date that the stock must be held to receive the dividend, set by the company.",
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            },
                            "ticker": {
                              "description": "The ticker symbol of the dividend.",
                              "type": "string",
                              "x-polygon-go-field-tags": {
                                "tags": [
                                  { "key": "binding", "value": "required" }
                                ]
                              }
                            }
                          },
                          "required": [
                            "ticker",
                            "declaration_date",
                            "ex_dividend_date",
                            "record_date",
                            "pay_date",
                            "frequency",
                            "cash_amount",
                            "dividend_type"
                          ],
                          "type": "object",
                          "x-polygon-go-struct-tags": { "tags": ["db"] }
                        },
                        "type": "array"
                      },
                      "status": { "type": "string" }
                    },
                    "required": ["request_id"],
                    "type": "object"
                  },
                  "example": "{\n \"next_url\": \"https://api.polygon.io/v3/reference/dividends/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"results\": [\n  {\n   \"cash_amount\": 0.22,\n   \"declaration_date\": \"2021-10-28\",\n   \"dividend_type\": \"CD\",\n   \"ex_dividend_date\": \"2021-11-05\",\n   \"frequency\": 4,\n   \"pay_date\": \"2021-11-11\",\n   \"record_date\": \"2021-11-08\",\n   \"ticker\": \"AAPL\"\n  },\n  {\n   \"cash_amount\": 0.22,\n   \"declaration_date\": \"2021-07-27\",\n   \"dividend_type\": \"CD\",\n   \"ex_dividend_date\": \"2021-08-06\",\n   \"frequency\": 4,\n   \"pay_date\": \"2021-08-12\",\n   \"record_date\": \"2021-08-09\",\n   \"ticker\": \"AAPL\"\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "Get a list of historical cash dividends, including the ticker symbol,\ndeclaration date, ex-dividend date, record date, pay date, frequency,\nand amount.",
                  "operationId": "ListDividends",
                  "parameters": [
                    {
                      "description": "Return the dividends that contain this ticker.",
                      "in": "query",
                      "name": "ticker",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query by ex-dividend date with the format YYYY-MM-DD.",
                      "in": "query",
                      "name": "ex_dividend_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query by record date with the format YYYY-MM-DD.",
                      "in": "query",
                      "name": "record_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query by declaration date with the format YYYY-MM-DD.",
                      "in": "query",
                      "name": "declaration_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query by pay date with the format YYYY-MM-DD.",
                      "in": "query",
                      "name": "pay_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "string"
                      }
                    },
                    {
                      "description": "Query by the number of times per year the dividend is paid out.  Possible values are 0 (one-time), 1 (annually), 2 (bi-annually), 4 (quarterly), and 12 (monthly).",
                      "in": "query",
                      "name": "frequency",
                      "schema": { "enum": [0, 1, 2, 4, 12], "type": "integer" }
                    },
                    {
                      "description": "Query by the cash amount of the dividend.",
                      "in": "query",
                      "name": "cash_amount",
                      "schema": { "type": "number" },
                      "x-polygon-filter-field": {
                        "range": true,
                        "type": "number"
                      }
                    },
                    {
                      "description": "Query by the type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.",
                      "in": "query",
                      "name": "dividend_type",
                      "schema": {
                        "description": "The type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.\nLong-Term and Short-Term capital gain distributions are denoted as LT and ST, respectively.",
                        "enum": ["CD", "SC", "LT", "ST"],
                        "type": "string",
                        "x-polygon-go-field-tags": {
                          "tags": [{ "key": "binding", "value": "required" }]
                        }
                      }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 1000.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "example": 10,
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "ex_dividend_date",
                        "enum": [
                          "ex_dividend_date",
                          "pay_date",
                          "declaration_date",
                          "record_date",
                          "cash_amount",
                          "ticker"
                        ],
                        "example": "ex_dividend_date",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "description": "A list of dividends.",
                            "example": {
                              "next_url": "https://api.polygon.io/v3/reference/dividends/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                              "results": [
                                {
                                  "cash_amount": 0.22,
                                  "declaration_date": "2021-10-28",
                                  "dividend_type": "CD",
                                  "ex_dividend_date": "2021-11-05",
                                  "frequency": 4,
                                  "pay_date": "2021-11-11",
                                  "record_date": "2021-11-08",
                                  "ticker": "AAPL"
                                },
                                {
                                  "cash_amount": 0.22,
                                  "declaration_date": "2021-07-27",
                                  "dividend_type": "CD",
                                  "ex_dividend_date": "2021-08-06",
                                  "frequency": 4,
                                  "pay_date": "2021-08-12",
                                  "record_date": "2021-08-09",
                                  "ticker": "AAPL"
                                }
                              ],
                              "status": "OK"
                            },
                            "properties": {
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": { "type": "string" },
                              "results": {
                                "items": {
                                  "properties": {
                                    "cash_amount": {
                                      "description": "The cash amount of the dividend per share owned.",
                                      "type": "number",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "currency": {
                                      "description": "The currency in which the dividend is paid.",
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "declaration_date": {
                                      "description": "The date that the dividend was announced.",
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "dividend_type": {
                                      "description": "The type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.\nLong-Term and Short-Term capital gain distributions are denoted as LT and ST, respectively.",
                                      "enum": ["CD", "SC", "LT", "ST"],
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "ex_dividend_date": {
                                      "description": "The date that the stock first trades without the dividend, determined by the exchange.",
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "frequency": {
                                      "description": "The number of times per year the dividend is paid out.  Possible values are 0 (one-time), 1 (annually), 2 (bi-annually), 4 (quarterly), and 12 (monthly).",
                                      "type": "integer",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "pay_date": {
                                      "description": "The date that the dividend is paid out.",
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "record_date": {
                                      "description": "The date that the stock must be held to receive the dividend, set by the company.",
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    },
                                    "ticker": {
                                      "description": "The ticker symbol of the dividend.",
                                      "type": "string",
                                      "x-polygon-go-field-tags": {
                                        "tags": [
                                          {
                                            "key": "binding",
                                            "value": "required"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "ticker",
                                    "declaration_date",
                                    "ex_dividend_date",
                                    "record_date",
                                    "pay_date",
                                    "frequency",
                                    "cash_amount",
                                    "dividend_type"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-struct-tags": { "tags": ["db"] }
                                },
                                "type": "array"
                              },
                              "status": { "type": "string" }
                            },
                            "required": ["request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "OK"
                    }
                  },
                  "summary": "Dividends v3",
                  "tags": ["reference:dividends"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "x-polygon-paginate": {
                    "limit": { "default": 10, "max": 1000 },
                    "sort": {
                      "default": "ex_dividend_date",
                      "enum": [
                        "ex_dividend_date",
                        "pay_date",
                        "declaration_date",
                        "record_date",
                        "cash_amount",
                        "ticker"
                      ]
                    }
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/dividends?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/vX/reference/financials",
                  "templatedPath": "/vX/reference/financials",
                  "path": "get_vx_reference_financials",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": {},
                  "responseSchema": {
                    "properties": {
                      "count": {
                        "description": "The total number of results for this request.",
                        "type": "integer"
                      },
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request id assigned by the server.",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "properties": {
                            "cik": {
                              "description": "The CIK number for the company.",
                              "type": "string"
                            },
                            "company_name": {
                              "description": "The company name.",
                              "type": "string"
                            },
                            "end_date": {
                              "description": "The end date of the period that these financials cover in YYYYMMDD format.",
                              "type": "string"
                            },
                            "filing_date": {
                              "description": "The date that the SEC filing which these financials were derived from was made available. Note that this is not necessarily the date when this information became public, as some companies may publish a press release before filing with the SEC."
                            },
                            "financials": {
                              "properties": {
                                "balance_sheet": {
                                  "description": "Balance sheet.\nNote that the keys in this object can be any of the balance sheet concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.",
                                  "properties": {
                                    "*": {
                                      "description": "An individual financial data point.",
                                      "properties": {
                                        "formula": {
                                          "description": "The name of the formula used to derive this data point from other financial data points.\nInformation about the formulas can be found <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://xbrlsite.azurewebsites.net/2020/reporting-scheme/us-gaap/fac/documentation/ImputeRulesList.html\">here</a>.\nThis value is only returned for data points that are not explicitly expressed within the XBRL source file when the `include_sources` query parameter is `true`."
                                        },
                                        "label": {
                                          "description": "A human readable label for the financial data point.",
                                          "type": "string"
                                        },
                                        "order": {
                                          "description": "An indicator of what order within the statement that you would find this data point.",
                                          "type": "integer"
                                        },
                                        "unit": {
                                          "description": "The unit of the financial data point.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The value of the financial data point.",
                                          "type": "number"
                                        },
                                        "xpath": {
                                          "description": "The <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/XPath\">XPath 1.0</a> query that identifies the fact from within the XBRL source file.\nThis value is only returned for data points taken directly from XBRL when the `include_sources` query parameter is `true`."
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "order",
                                        "value",
                                        "unit"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "cash_flow_statement": {
                                  "description": "Cash flow statement.\nNote that the keys in this object can be any of the cash flow statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                  "type": "object"
                                },
                                "comprehensive_income": {
                                  "description": "Comprehensive income.\nNote that the keys in this object can be any of the comprehensive income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                  "type": "object"
                                },
                                "income_statement": {
                                  "description": "Income statement.\nNote that the keys in this object can be any of the income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "fiscal_period": {
                              "description": "Fiscal period of the report according to the company (Q1, Q2, Q3, Q4, or FY).",
                              "type": "string"
                            },
                            "fiscal_year": {
                              "description": "Fiscal year of the report according to the company.",
                              "type": "string"
                            },
                            "source_filing_file_url": {
                              "description": "The URL of the specific XBRL instance document within the SEC filing that these financials were derived from."
                            },
                            "source_filing_url": {
                              "description": "The URL of the SEC filing that these financials were derived from.",
                              "type": "string"
                            },
                            "start_date": {
                              "description": "The start date of the period that these financials cover in YYYYMMDD format.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "reporting_period",
                            "cik",
                            "company_name",
                            "financials",
                            "fiscal_period",
                            "fiscal_year",
                            "filing_type",
                            "source_filing_url",
                            "source_filing_file_url"
                          ],
                          "type": "object",
                          "x-polygon-go-type": {
                            "name": "ResolvedFinancials",
                            "path": "github.com/polygon-io/go-app-api-financials/extract"
                          }
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "type": "string"
                      }
                    },
                    "required": ["status", "request_id", "count", "results"],
                    "type": "object"
                  },
                  "example": "{\n \"cik\": \"0000789019\",\n \"company_name\": \"MICROSOFT CORPORATION\",\n \"end_date\": \"2020-12-31\",\n \"financials\": {\n  \"balance_sheet\": {\n   \"assets\": {\n    \"label\": \"Assets\",\n    \"order\": 100,\n    \"unit\": \"USD\",\n    \"value\": 304137000000,\n    \"xpath\": \"//*[local-name()='Assets' and @id='F_000165']\"\n   },\n   \"equity\": {\n    \"formula\": \"BS-Impute-07\",\n    \"label\": \"Equity\",\n    \"order\": 1400,\n    \"unit\": \"USD\",\n    \"value\": 130236000000\n   },\n   \"liabilities\": {\n    \"label\": \"Liabilities\",\n    \"order\": 600,\n    \"unit\": \"USD\",\n    \"value\": 173901000000,\n    \"xpath\": \"//*[local-name()='Liabilities' and @id='F_000193']\"\n   }\n  },\n  \"cash_flow_statement\": {\n   \"exchange_gains_losses\": {\n    \"label\": \"Exchange Gains/Losses\",\n    \"order\": 1000,\n    \"unit\": \"USD\",\n    \"value\": 14000000,\n    \"xpath\": \"//*[local-name()='EffectOfExchangeRateOnCashAndCashEquivalents' and @id='F_000327']\"\n   },\n   \"net_cash_flow\": {\n    \"formula\": \"CF-Impute-20\",\n    \"label\": \"Net Cash Flow\",\n    \"order\": 1100,\n    \"unit\": \"USD\",\n    \"value\": -2773000000\n   },\n   \"net_cash_flow_from_financing_activities\": {\n    \"label\": \"Net Cash Flow From Financing Activities\",\n    \"order\": 700,\n    \"unit\": \"USD\",\n    \"value\": -13634000000,\n    \"xpath\": \"//*[local-name()='NetCashProvidedByUsedInFinancingActivities' and @id='F_000295']\"\n   }\n  },\n  \"comprehensive_income\": {\n   \"comprehensive_income_loss\": {\n    \"formula\": \"CI-Impute-04\",\n    \"label\": \"Comprehensive Income/Loss\",\n    \"order\": 100,\n    \"unit\": \"USD\",\n    \"value\": 15720000000\n   },\n   \"comprehensive_income_loss_attributable_to_parent\": {\n    \"label\": \"Comprehensive Income/Loss Attributable To Parent\",\n    \"order\": 300,\n    \"unit\": \"USD\",\n    \"value\": 15720000000,\n    \"xpath\": \"//*[local-name()='ComprehensiveIncomeNetOfTax' and @id='F_000135']\"\n   },\n   \"other_comprehensive_income_loss\": {\n    \"formula\": \"CI-Impute-07\",\n    \"label\": \"Other Comprehensive Income/Loss\",\n    \"order\": 400,\n    \"unit\": \"USD\",\n    \"value\": 15720000000\n   }\n  },\n  \"income_statement\": {\n   \"basic_earnings_per_share\": {\n    \"label\": \"Basic Earnings Per Share\",\n    \"order\": 4200,\n    \"unit\": \"USD / shares\",\n    \"value\": 2.05,\n    \"xpath\": \"//*[local-name()='EarningsPerShareBasic' and @id='F_000099']\"\n   },\n   \"cost_of_revenue\": {\n    \"label\": \"Cost Of Revenue\",\n    \"order\": 300,\n    \"unit\": \"USD\",\n    \"value\": 14194000000,\n    \"xpath\": \"//*[local-name()='CostOfGoodsAndServicesSold' and @id='F_000059']\"\n   },\n   \"gross_profit\": {\n    \"label\": \"Gross Profit\",\n    \"order\": 800,\n    \"unit\": \"USD\",\n    \"value\": 28882000000,\n    \"xpath\": \"//*[local-name()='GrossProfit' and @id='F_000063']\"\n   },\n   \"operating_expenses\": {\n    \"formula\": \"IS-Impute-22\",\n    \"label\": \"Operating Expenses\",\n    \"order\": 1000,\n    \"unit\": \"USD\",\n    \"value\": 10985000000\n   },\n   \"revenues\": {\n    \"label\": \"Revenues\",\n    \"order\": 100,\n    \"unit\": \"USD\",\n    \"value\": 43076000000,\n    \"xpath\": \"//*[local-name()='RevenueFromContractWithCustomerExcludingAssessedTax' and @id='F_000047']\"\n   }\n  }\n },\n \"fiscal_period\": \"Q2\",\n \"fiscal_year\": \"2021\",\n \"source_filing_file_url\": \"https:/api.polygon.io/v1/reference/sec/filings/0001564590-21-002316/files/0001564590-21-002316:12:msft-10q_20201231_htm.xml\",\n \"source_filing_url\": \"https://api.polygon.io/v1/reference/sec/filings/0001564590-21-002316\",\n \"start_date\": \"2020-10-01\"\n}",
                  "description": "Get historical financial data for a stock ticker.\nThe financials data is extracted from XBRL from company SEC filings using the methodology outlined <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://xbrl.squarespace.com/understanding-sec-xbrl-financi/\">here</a>.",
                  "operationId": "ListFinancials",
                  "parameters": [
                    {
                      "description": "Query by company ticker.",
                      "in": "query",
                      "name": "ticker",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Query by central index key (<a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://www.sec.gov/edgar/searchedgar/cik.htm\">CIK</a>) Number",
                      "in": "query",
                      "name": "cik",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Query by company name.",
                      "in": "query",
                      "name": "company_name",
                      "schema": { "type": "string" },
                      "x-polygon-filter-field": { "search": true }
                    },
                    {
                      "description": "Query by standard industrial classification (<a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://www.sec.gov/corpfin/division-of-corporation-finance-standard-industrial-classification-sic-code-list\">SIC</a>)",
                      "in": "query",
                      "name": "sic",
                      "schema": { "type": "string" }
                    },
                    {
                      "description": "Query by the date when the filing with financials data was filed in YYYY-MM-DD format.\n\nBest used when querying over date ranges to find financials based on filings that happen in a time period.\n\nExamples:\n\nTo get financials based on filings that have happened after January 1, 2009 use the query param filing_date.gte=2009-01-01\n\nTo get financials based on filings that happened in the year 2009 use the query params filing_date.gte=2009-01-01&filing_date.lt=2010-01-01",
                      "in": "query",
                      "name": "filing_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "The period of report for the filing with financials data in YYYY-MM-DD format.",
                      "in": "query",
                      "name": "period_of_report_date",
                      "schema": { "format": "date", "type": "string" },
                      "x-polygon-filter-field": { "range": true }
                    },
                    {
                      "description": "Query by timeframe. Annual financials originate from 10-K filings, and quarterly financials originate from 10-Q filings. Note: Most companies do not file quarterly reports for Q4 and instead include those financials in their annual report, so some companies my not return quarterly financials for Q4",
                      "in": "query",
                      "name": "timeframe",
                      "schema": {
                        "enum": ["annual", "quarterly"],
                        "type": "string"
                      }
                    },
                    {
                      "description": "Whether or not to include the `xpath` and `formula` attributes for each financial data point.\nSee the `xpath` and `formula` response attributes for more info. False by default.",
                      "in": "query",
                      "name": "include_sources",
                      "schema": { "default": false, "type": "boolean" }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 1 and max is 100.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 1,
                        "example": 1,
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "period_of_report_date",
                        "enum": ["filing_date", "period_of_report_date"],
                        "example": "filing_date",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "count": 1,
                          "description": "FIXME",
                          "example": {
                            "cik": "0000789019",
                            "company_name": "MICROSOFT CORPORATION",
                            "end_date": "2020-12-31",
                            "financials": {
                              "balance_sheet": {
                                "assets": {
                                  "label": "Assets",
                                  "order": 100,
                                  "unit": "USD",
                                  "value": 304137000000,
                                  "xpath": "//*[local-name()='Assets' and @id='F_000165']"
                                },
                                "equity": {
                                  "formula": "BS-Impute-07",
                                  "label": "Equity",
                                  "order": 1400,
                                  "unit": "USD",
                                  "value": 130236000000
                                },
                                "liabilities": {
                                  "label": "Liabilities",
                                  "order": 600,
                                  "unit": "USD",
                                  "value": 173901000000,
                                  "xpath": "//*[local-name()='Liabilities' and @id='F_000193']"
                                }
                              },
                              "cash_flow_statement": {
                                "exchange_gains_losses": {
                                  "label": "Exchange Gains/Losses",
                                  "order": 1000,
                                  "unit": "USD",
                                  "value": 14000000,
                                  "xpath": "//*[local-name()='EffectOfExchangeRateOnCashAndCashEquivalents' and @id='F_000327']"
                                },
                                "net_cash_flow": {
                                  "formula": "CF-Impute-20",
                                  "label": "Net Cash Flow",
                                  "order": 1100,
                                  "unit": "USD",
                                  "value": -2773000000
                                },
                                "net_cash_flow_from_financing_activities": {
                                  "label": "Net Cash Flow From Financing Activities",
                                  "order": 700,
                                  "unit": "USD",
                                  "value": -13634000000,
                                  "xpath": "//*[local-name()='NetCashProvidedByUsedInFinancingActivities' and @id='F_000295']"
                                }
                              },
                              "comprehensive_income": {
                                "comprehensive_income_loss": {
                                  "formula": "CI-Impute-04",
                                  "label": "Comprehensive Income/Loss",
                                  "order": 100,
                                  "unit": "USD",
                                  "value": 15720000000
                                },
                                "comprehensive_income_loss_attributable_to_parent": {
                                  "label": "Comprehensive Income/Loss Attributable To Parent",
                                  "order": 300,
                                  "unit": "USD",
                                  "value": 15720000000,
                                  "xpath": "//*[local-name()='ComprehensiveIncomeNetOfTax' and @id='F_000135']"
                                },
                                "other_comprehensive_income_loss": {
                                  "formula": "CI-Impute-07",
                                  "label": "Other Comprehensive Income/Loss",
                                  "order": 400,
                                  "unit": "USD",
                                  "value": 15720000000
                                }
                              },
                              "income_statement": {
                                "basic_earnings_per_share": {
                                  "label": "Basic Earnings Per Share",
                                  "order": 4200,
                                  "unit": "USD / shares",
                                  "value": 2.05,
                                  "xpath": "//*[local-name()='EarningsPerShareBasic' and @id='F_000099']"
                                },
                                "cost_of_revenue": {
                                  "label": "Cost Of Revenue",
                                  "order": 300,
                                  "unit": "USD",
                                  "value": 14194000000,
                                  "xpath": "//*[local-name()='CostOfGoodsAndServicesSold' and @id='F_000059']"
                                },
                                "gross_profit": {
                                  "label": "Gross Profit",
                                  "order": 800,
                                  "unit": "USD",
                                  "value": 28882000000,
                                  "xpath": "//*[local-name()='GrossProfit' and @id='F_000063']"
                                },
                                "operating_expenses": {
                                  "formula": "IS-Impute-22",
                                  "label": "Operating Expenses",
                                  "order": 1000,
                                  "unit": "USD",
                                  "value": 10985000000
                                },
                                "revenues": {
                                  "label": "Revenues",
                                  "order": 100,
                                  "unit": "USD",
                                  "value": 43076000000,
                                  "xpath": "//*[local-name()='RevenueFromContractWithCustomerExcludingAssessedTax' and @id='F_000047']"
                                }
                              }
                            },
                            "fiscal_period": "Q2",
                            "fiscal_year": "2021",
                            "source_filing_file_url": "https:/api.polygon.io/v1/reference/sec/filings/0001564590-21-002316/files/0001564590-21-002316:12:msft-10q_20201231_htm.xml",
                            "source_filing_url": "https://api.polygon.io/v1/reference/sec/filings/0001564590-21-002316",
                            "start_date": "2020-10-01"
                          },
                          "next_url": "https:/api.polygon.io/vX/reference/financials?",
                          "request_id": "28173f20a0751f3479afd9e2cc9246ea",
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "type": "integer"
                              },
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request id assigned by the server.",
                                "type": "string"
                              },
                              "results": {
                                "items": {
                                  "properties": {
                                    "cik": {
                                      "description": "The CIK number for the company.",
                                      "type": "string"
                                    },
                                    "company_name": {
                                      "description": "The company name.",
                                      "type": "string"
                                    },
                                    "end_date": {
                                      "description": "The end date of the period that these financials cover in YYYYMMDD format.",
                                      "type": "string"
                                    },
                                    "filing_date": {
                                      "description": "The date that the SEC filing which these financials were derived from was made available. Note that this is not necessarily the date when this information became public, as some companies may publish a press release before filing with the SEC."
                                    },
                                    "financials": {
                                      "properties": {
                                        "balance_sheet": {
                                          "description": "Balance sheet.\nNote that the keys in this object can be any of the balance sheet concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.",
                                          "properties": {
                                            "*": {
                                              "description": "An individual financial data point.",
                                              "properties": {
                                                "formula": {
                                                  "description": "The name of the formula used to derive this data point from other financial data points.\nInformation about the formulas can be found <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://xbrlsite.azurewebsites.net/2020/reporting-scheme/us-gaap/fac/documentation/ImputeRulesList.html\">here</a>.\nThis value is only returned for data points that are not explicitly expressed within the XBRL source file when the `include_sources` query parameter is `true`."
                                                },
                                                "label": {
                                                  "description": "A human readable label for the financial data point.",
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "description": "An indicator of what order within the statement that you would find this data point.",
                                                  "type": "integer"
                                                },
                                                "unit": {
                                                  "description": "The unit of the financial data point.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "The value of the financial data point.",
                                                  "type": "number"
                                                },
                                                "xpath": {
                                                  "description": "The <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/XPath\">XPath 1.0</a> query that identifies the fact from within the XBRL source file.\nThis value is only returned for data points taken directly from XBRL when the `include_sources` query parameter is `true`."
                                                }
                                              },
                                              "required": [
                                                "label",
                                                "order",
                                                "value",
                                                "unit"
                                              ],
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "cash_flow_statement": {
                                          "description": "Cash flow statement.\nNote that the keys in this object can be any of the cash flow statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                          "type": "object"
                                        },
                                        "comprehensive_income": {
                                          "description": "Comprehensive income.\nNote that the keys in this object can be any of the comprehensive income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                          "type": "object"
                                        },
                                        "income_statement": {
                                          "description": "Income statement.\nNote that the keys in this object can be any of the income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "fiscal_period": {
                                      "description": "Fiscal period of the report according to the company (Q1, Q2, Q3, Q4, or FY).",
                                      "type": "string"
                                    },
                                    "fiscal_year": {
                                      "description": "Fiscal year of the report according to the company.",
                                      "type": "string"
                                    },
                                    "source_filing_file_url": {
                                      "description": "The URL of the specific XBRL instance document within the SEC filing that these financials were derived from."
                                    },
                                    "source_filing_url": {
                                      "description": "The URL of the SEC filing that these financials were derived from.",
                                      "type": "string"
                                    },
                                    "start_date": {
                                      "description": "The start date of the period that these financials cover in YYYYMMDD format.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "reporting_period",
                                    "cik",
                                    "company_name",
                                    "financials",
                                    "fiscal_period",
                                    "fiscal_year",
                                    "filing_type",
                                    "source_filing_url",
                                    "source_filing_file_url"
                                  ],
                                  "type": "object",
                                  "x-polygon-go-type": {
                                    "name": "ResolvedFinancials",
                                    "path": "github.com/polygon-io/go-app-api-financials/extract"
                                  }
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "request_id",
                              "count",
                              "results"
                            ],
                            "type": "object"
                          },
                          "status": "OK"
                        }
                      },
                      "description": "FIXME"
                    }
                  },
                  "summary": "Stock Financials vX",
                  "tags": ["reference:stocks"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "x-polygon-experimental": {},
                  "x-polygon-paginate": {
                    "limit": { "default": 1, "max": 100 },
                    "sort": {
                      "default": "period_of_report_date",
                      "enum": ["filing_date", "period_of_report_date"]
                    }
                  },
                  "parameterTemplate": "{apiBase}/vX/reference/financials?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/reference/conditions",
                  "templatedPath": "/v3/reference/conditions",
                  "path": "get_v3_reference_conditions",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "example": {
                      "count": 1,
                      "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "results": [
                        {
                          "asset_class": "stocks",
                          "data_types": ["trade"],
                          "id": 2,
                          "name": "Average Price Trade",
                          "sip_mapping": { "CTA": "B", "UTP": "W" },
                          "type": "condition",
                          "update_rules": {
                            "consolidated": {
                              "updates_high_low": false,
                              "updates_open_close": false,
                              "updates_volume": true
                            },
                            "market_center": {
                              "updates_high_low": false,
                              "updates_open_close": false,
                              "updates_volume": true
                            }
                          }
                        }
                      ],
                      "status": "OK"
                    },
                    "properties": {
                      "count": {
                        "description": "The total number of results for this request.",
                        "example": 1,
                        "type": "integer"
                      },
                      "next_url": {
                        "description": "If present, this value can be used to fetch the next page of data.",
                        "type": "string"
                      },
                      "request_id": {
                        "description": "A request ID assigned by the server.",
                        "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                        "type": "string"
                      },
                      "results": {
                        "description": "An array of conditions that match your query.",
                        "items": {
                          "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                          "properties": {
                            "abbreviation": {
                              "description": "A commonly-used abbreviation for this condition.",
                              "type": "string"
                            },
                            "asset_class": {
                              "description": "An identifier for a group of similar financial instruments.",
                              "enum": ["stocks", "options", "crypto", "fx"],
                              "example": "stocks",
                              "type": "string"
                            },
                            "data_types": {
                              "description": "Data types that this condition applies to.",
                              "items": {
                                "description": "The type of financial data represented by a data model.",
                                "enum": ["trade", "bbo", "nbbo"],
                                "example": "trade",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "description": {
                              "description": "A short description of the semantics of this condition.",
                              "type": "string"
                            },
                            "exchange": {
                              "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                              "type": "integer"
                            },
                            "id": {
                              "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                              "example": 1,
                              "type": "integer"
                            },
                            "legacy": {
                              "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of this condition.",
                              "example": "Acquisition",
                              "type": "string"
                            },
                            "sip_mapping": {
                              "description": "A mapping to a symbol for each SIP that has this condition.",
                              "properties": {
                                "CTA": { "type": "string" },
                                "OPRA": { "type": "string" },
                                "UTP": { "type": "string" }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "An identifier for a collection of related conditions.",
                              "enum": [
                                "sale_condition",
                                "quote_condition",
                                "sip_generated_flag",
                                "financial_status_indicator",
                                "short_sale_restriction_indicator",
                                "settlement_condition",
                                "market_condition",
                                "trade_thru_exempt"
                              ],
                              "type": "string"
                            },
                            "update_rules": {
                              "description": "A list of aggregation rules.",
                              "properties": {
                                "consolidated": {
                                  "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                  "properties": {
                                    "updates_high_low": {
                                      "description": "Whether or not trades with this condition update the high/low.",
                                      "type": "boolean"
                                    },
                                    "updates_open_close": {
                                      "description": "Whether or not trades with this condition update the open/close.",
                                      "type": "boolean"
                                    },
                                    "updates_volume": {
                                      "description": "Whether or not trades with this condition update the volume.",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "updates_high_low",
                                    "updates_open_close",
                                    "updates_volume"
                                  ],
                                  "type": "object"
                                },
                                "market_center": {
                                  "description": "Describes aggregation rules on a per-market-center basis.",
                                  "properties": {
                                    "updates_high_low": {
                                      "description": "Whether or not trades with this condition update the high/low.",
                                      "type": "boolean"
                                    },
                                    "updates_open_close": {
                                      "description": "Whether or not trades with this condition update the open/close.",
                                      "type": "boolean"
                                    },
                                    "updates_volume": {
                                      "description": "Whether or not trades with this condition update the volume.",
                                      "type": "boolean"
                                    }
                                  },
                                  "required": [
                                    "updates_high_low",
                                    "updates_open_close",
                                    "updates_volume"
                                  ],
                                  "type": "object"
                                }
                              },
                              "required": ["consolidated", "market_center"],
                              "type": "object"
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "name",
                            "asset_class",
                            "sip_mapping",
                            "data_types"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "example": "OK",
                        "type": "string"
                      }
                    },
                    "required": ["status", "request_id", "count", "results"],
                    "type": "object"
                  },
                  "example": "{\n \"count\": 1,\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": [\n  {\n   \"asset_class\": \"stocks\",\n   \"data_types\": [\n    \"trade\"\n   ],\n   \"id\": 2,\n   \"name\": \"Average Price Trade\",\n   \"sip_mapping\": {\n    \"CTA\": \"B\",\n    \"UTP\": \"W\"\n   },\n   \"type\": \"condition\",\n   \"update_rules\": {\n    \"consolidated\": {\n     \"updates_high_low\": false,\n     \"updates_open_close\": false,\n     \"updates_volume\": true\n    },\n    \"market_center\": {\n     \"updates_high_low\": false,\n     \"updates_open_close\": false,\n     \"updates_volume\": true\n    }\n   }\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "List all conditions that Polygon.io uses.",
                  "operationId": "ListConditions",
                  "parameters": [
                    {
                      "description": "Filter for conditions within a given asset class.",
                      "in": "query",
                      "name": "asset_class",
                      "schema": {
                        "description": "An identifier for a group of similar financial instruments.",
                        "enum": ["stocks", "options", "crypto", "fx"],
                        "example": "stocks",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Filter by data type.",
                      "in": "query",
                      "name": "data_type",
                      "schema": {
                        "description": "The type of financial data represented by a data model.",
                        "enum": ["trade", "bbo", "nbbo"],
                        "example": "trade",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Filter for conditions with a given ID.",
                      "in": "query",
                      "name": "id",
                      "schema": {
                        "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                        "example": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Filter by SIP. If the condition contains a mapping for that SIP, the condition will be returned.",
                      "in": "query",
                      "name": "sip",
                      "schema": {
                        "description": "One of the SIPs.",
                        "enum": ["CTA", "UTP", "OPRA"],
                        "example": "CTA",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Order results based on the `sort` field.",
                      "in": "query",
                      "name": "order",
                      "schema": {
                        "enum": ["asc", "desc"],
                        "example": "asc",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Limit the number of results returned, default is 10 and max is 1000.",
                      "in": "query",
                      "name": "limit",
                      "schema": {
                        "default": 10,
                        "example": 10,
                        "maximum": 1000,
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    {
                      "description": "Sort field used for ordering.",
                      "in": "query",
                      "name": "sort",
                      "schema": {
                        "default": "asset_class",
                        "enum": [
                          "asset_class",
                          "id",
                          "type",
                          "name",
                          "data_types",
                          "legacy"
                        ],
                        "example": "asset_class",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "example": {
                              "count": 1,
                              "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe",
                              "results": [
                                {
                                  "asset_class": "stocks",
                                  "data_types": ["trade"],
                                  "id": 2,
                                  "name": "Average Price Trade",
                                  "sip_mapping": { "CTA": "B", "UTP": "W" },
                                  "type": "condition",
                                  "update_rules": {
                                    "consolidated": {
                                      "updates_high_low": false,
                                      "updates_open_close": false,
                                      "updates_volume": true
                                    },
                                    "market_center": {
                                      "updates_high_low": false,
                                      "updates_open_close": false,
                                      "updates_volume": true
                                    }
                                  }
                                }
                              ],
                              "status": "OK"
                            },
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "results": {
                                "description": "An array of conditions that match your query.",
                                "items": {
                                  "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                                  "properties": {
                                    "abbreviation": {
                                      "description": "A commonly-used abbreviation for this condition.",
                                      "type": "string"
                                    },
                                    "asset_class": {
                                      "description": "An identifier for a group of similar financial instruments.",
                                      "enum": [
                                        "stocks",
                                        "options",
                                        "crypto",
                                        "fx"
                                      ],
                                      "example": "stocks",
                                      "type": "string"
                                    },
                                    "data_types": {
                                      "description": "Data types that this condition applies to.",
                                      "items": {
                                        "description": "The type of financial data represented by a data model.",
                                        "enum": ["trade", "bbo", "nbbo"],
                                        "example": "trade",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "description": {
                                      "description": "A short description of the semantics of this condition.",
                                      "type": "string"
                                    },
                                    "exchange": {
                                      "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "legacy": {
                                      "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "The name of this condition.",
                                      "example": "Acquisition",
                                      "type": "string"
                                    },
                                    "sip_mapping": {
                                      "description": "A mapping to a symbol for each SIP that has this condition.",
                                      "properties": {
                                        "CTA": { "type": "string" },
                                        "OPRA": { "type": "string" },
                                        "UTP": { "type": "string" }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "An identifier for a collection of related conditions.",
                                      "enum": [
                                        "sale_condition",
                                        "quote_condition",
                                        "sip_generated_flag",
                                        "financial_status_indicator",
                                        "short_sale_restriction_indicator",
                                        "settlement_condition",
                                        "market_condition",
                                        "trade_thru_exempt"
                                      ],
                                      "type": "string"
                                    },
                                    "update_rules": {
                                      "description": "A list of aggregation rules.",
                                      "properties": {
                                        "consolidated": {
                                          "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                          "properties": {
                                            "updates_high_low": {
                                              "description": "Whether or not trades with this condition update the high/low.",
                                              "type": "boolean"
                                            },
                                            "updates_open_close": {
                                              "description": "Whether or not trades with this condition update the open/close.",
                                              "type": "boolean"
                                            },
                                            "updates_volume": {
                                              "description": "Whether or not trades with this condition update the volume.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "updates_high_low",
                                            "updates_open_close",
                                            "updates_volume"
                                          ],
                                          "type": "object"
                                        },
                                        "market_center": {
                                          "description": "Describes aggregation rules on a per-market-center basis.",
                                          "properties": {
                                            "updates_high_low": {
                                              "description": "Whether or not trades with this condition update the high/low.",
                                              "type": "boolean"
                                            },
                                            "updates_open_close": {
                                              "description": "Whether or not trades with this condition update the open/close.",
                                              "type": "boolean"
                                            },
                                            "updates_volume": {
                                              "description": "Whether or not trades with this condition update the volume.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "updates_high_low",
                                            "updates_open_close",
                                            "updates_volume"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "consolidated",
                                        "market_center"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type",
                                    "name",
                                    "asset_class",
                                    "sip_mapping",
                                    "data_types"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "request_id",
                              "count",
                              "results"
                            ],
                            "type": "object"
                          }
                        }
                      },
                      "description": "OK"
                    },
                    "400": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "results": {
                                "description": "An array of conditions that match your query.",
                                "items": {
                                  "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                                  "properties": {
                                    "abbreviation": {
                                      "description": "A commonly-used abbreviation for this condition.",
                                      "type": "string"
                                    },
                                    "asset_class": {
                                      "description": "An identifier for a group of similar financial instruments.",
                                      "enum": [
                                        "stocks",
                                        "options",
                                        "crypto",
                                        "fx"
                                      ],
                                      "example": "stocks",
                                      "type": "string"
                                    },
                                    "data_types": {
                                      "description": "Data types that this condition applies to.",
                                      "items": {
                                        "description": "The type of financial data represented by a data model.",
                                        "enum": ["trade", "bbo", "nbbo"],
                                        "example": "trade",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "description": {
                                      "description": "A short description of the semantics of this condition.",
                                      "type": "string"
                                    },
                                    "exchange": {
                                      "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "legacy": {
                                      "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "The name of this condition.",
                                      "example": "Acquisition",
                                      "type": "string"
                                    },
                                    "sip_mapping": {
                                      "description": "A mapping to a symbol for each SIP that has this condition.",
                                      "properties": {
                                        "CTA": { "type": "string" },
                                        "OPRA": { "type": "string" },
                                        "UTP": { "type": "string" }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "An identifier for a collection of related conditions.",
                                      "enum": [
                                        "sale_condition",
                                        "quote_condition",
                                        "sip_generated_flag",
                                        "financial_status_indicator",
                                        "short_sale_restriction_indicator",
                                        "settlement_condition",
                                        "market_condition",
                                        "trade_thru_exempt"
                                      ],
                                      "type": "string"
                                    },
                                    "update_rules": {
                                      "description": "A list of aggregation rules.",
                                      "properties": {
                                        "consolidated": {
                                          "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                          "properties": {
                                            "updates_high_low": {
                                              "description": "Whether or not trades with this condition update the high/low.",
                                              "type": "boolean"
                                            },
                                            "updates_open_close": {
                                              "description": "Whether or not trades with this condition update the open/close.",
                                              "type": "boolean"
                                            },
                                            "updates_volume": {
                                              "description": "Whether or not trades with this condition update the volume.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "updates_high_low",
                                            "updates_open_close",
                                            "updates_volume"
                                          ],
                                          "type": "object"
                                        },
                                        "market_center": {
                                          "description": "Describes aggregation rules on a per-market-center basis.",
                                          "properties": {
                                            "updates_high_low": {
                                              "description": "Whether or not trades with this condition update the high/low.",
                                              "type": "boolean"
                                            },
                                            "updates_open_close": {
                                              "description": "Whether or not trades with this condition update the open/close.",
                                              "type": "boolean"
                                            },
                                            "updates_volume": {
                                              "description": "Whether or not trades with this condition update the volume.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "updates_high_low",
                                            "updates_open_close",
                                            "updates_volume"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "consolidated",
                                        "market_center"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type",
                                    "name",
                                    "asset_class",
                                    "sip_mapping",
                                    "data_types"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "request_id",
                              "count",
                              "results"
                            ],
                            "type": "object"
                          }
                        }
                      },
                      "description": "a query parameter was malformed"
                    },
                    "default": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "next_url": {
                                "description": "If present, this value can be used to fetch the next page of data.",
                                "type": "string"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "results": {
                                "description": "An array of conditions that match your query.",
                                "items": {
                                  "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                                  "properties": {
                                    "abbreviation": {
                                      "description": "A commonly-used abbreviation for this condition.",
                                      "type": "string"
                                    },
                                    "asset_class": {
                                      "description": "An identifier for a group of similar financial instruments.",
                                      "enum": [
                                        "stocks",
                                        "options",
                                        "crypto",
                                        "fx"
                                      ],
                                      "example": "stocks",
                                      "type": "string"
                                    },
                                    "data_types": {
                                      "description": "Data types that this condition applies to.",
                                      "items": {
                                        "description": "The type of financial data represented by a data model.",
                                        "enum": ["trade", "bbo", "nbbo"],
                                        "example": "trade",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "description": {
                                      "description": "A short description of the semantics of this condition.",
                                      "type": "string"
                                    },
                                    "exchange": {
                                      "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                                      "type": "integer"
                                    },
                                    "id": {
                                      "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "legacy": {
                                      "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "The name of this condition.",
                                      "example": "Acquisition",
                                      "type": "string"
                                    },
                                    "sip_mapping": {
                                      "description": "A mapping to a symbol for each SIP that has this condition.",
                                      "properties": {
                                        "CTA": { "type": "string" },
                                        "OPRA": { "type": "string" },
                                        "UTP": { "type": "string" }
                                      },
                                      "type": "object"
                                    },
                                    "type": {
                                      "description": "An identifier for a collection of related conditions.",
                                      "enum": [
                                        "sale_condition",
                                        "quote_condition",
                                        "sip_generated_flag",
                                        "financial_status_indicator",
                                        "short_sale_restriction_indicator",
                                        "settlement_condition",
                                        "market_condition",
                                        "trade_thru_exempt"
                                      ],
                                      "type": "string"
                                    },
                                    "update_rules": {
                                      "description": "A list of aggregation rules.",
                                      "properties": {
                                        "consolidated": {
                                          "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                          "properties": {
                                            "updates_high_low": {
                                              "description": "Whether or not trades with this condition update the high/low.",
                                              "type": "boolean"
                                            },
                                            "updates_open_close": {
                                              "description": "Whether or not trades with this condition update the open/close.",
                                              "type": "boolean"
                                            },
                                            "updates_volume": {
                                              "description": "Whether or not trades with this condition update the volume.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "updates_high_low",
                                            "updates_open_close",
                                            "updates_volume"
                                          ],
                                          "type": "object"
                                        },
                                        "market_center": {
                                          "description": "Describes aggregation rules on a per-market-center basis.",
                                          "properties": {
                                            "updates_high_low": {
                                              "description": "Whether or not trades with this condition update the high/low.",
                                              "type": "boolean"
                                            },
                                            "updates_open_close": {
                                              "description": "Whether or not trades with this condition update the open/close.",
                                              "type": "boolean"
                                            },
                                            "updates_volume": {
                                              "description": "Whether or not trades with this condition update the volume.",
                                              "type": "boolean"
                                            }
                                          },
                                          "required": [
                                            "updates_high_low",
                                            "updates_open_close",
                                            "updates_volume"
                                          ],
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "consolidated",
                                        "market_center"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type",
                                    "name",
                                    "asset_class",
                                    "sip_mapping",
                                    "data_types"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": [
                              "status",
                              "request_id",
                              "count",
                              "results"
                            ],
                            "type": "object"
                          }
                        }
                      },
                      "description": "an unknown error occurred"
                    }
                  },
                  "summary": "Conditions",
                  "tags": ["reference:conditions"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "x-polygon-paginate": {
                    "limit": { "default": 10, "max": 1000 },
                    "sort": {
                      "default": "asset_class",
                      "enum": [
                        "asset_class",
                        "id",
                        "type",
                        "name",
                        "data_types",
                        "legacy"
                      ]
                    }
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/conditions?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/v3/reference/exchanges",
                  "templatedPath": "/v3/reference/exchanges",
                  "path": "get_v3_reference_exchanges",
                  "entitlements": {
                    "dataType": "reference",
                    "market": null,
                    "timeframes": null
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "properties": {
                      "count": {
                        "description": "The total number of results for this request.",
                        "example": 1,
                        "type": "integer"
                      },
                      "request_id": {
                        "description": "A request ID assigned by the server.",
                        "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                        "type": "string"
                      },
                      "results": {
                        "items": {
                          "description": "An entity that reports trades.",
                          "properties": {
                            "acronym": {
                              "description": "A commonly used abbreviation for this exchange.",
                              "example": "AMEX",
                              "type": "string"
                            },
                            "asset_class": {
                              "description": "An identifier for a group of similar financial instruments.",
                              "enum": ["stocks", "options", "crypto", "fx"],
                              "example": "stocks",
                              "type": "string"
                            },
                            "id": {
                              "description": "A unique identifier used by Polygon.io for this exchange.",
                              "example": 1,
                              "type": "integer"
                            },
                            "locale": {
                              "description": "An identifier for a geographical location.",
                              "enum": ["us", "global"],
                              "example": "us",
                              "type": "string"
                            },
                            "mic": {
                              "description": "The Market Identifer Code of this exchange (see ISO 10383).",
                              "example": "XASE",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of this exchange.",
                              "example": "NYSE American, LLC",
                              "type": "string"
                            },
                            "operating_mic": {
                              "description": "The MIC of the entity that operates this exchange.",
                              "example": "XNYS",
                              "type": "string"
                            },
                            "participant_id": {
                              "description": "The ID used by SIP's to represent this exchange.",
                              "example": "A",
                              "type": "string"
                            },
                            "type": {
                              "description": "Represents the type of exchange.",
                              "enum": ["exchange", "TRF", "SIP"],
                              "example": "exchange",
                              "type": "string"
                            },
                            "url": {
                              "description": "A link to this exchange's website, if one exists.",
                              "example": "https://www.nyse.com/markets/nyse-american",
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "asset_class",
                            "locale",
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of this request's response.",
                        "example": "OK",
                        "type": "string"
                      }
                    },
                    "required": ["status", "request_id"],
                    "type": "object"
                  },
                  "example": "{\n \"count\": 1,\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": [\n  {\n   \"acronym\": \"AMEX\",\n   \"asset_class\": \"stocks\",\n   \"id\": 1,\n   \"locale\": \"us\",\n   \"mic\": \"XASE\",\n   \"name\": \"NYSE American, LLC\",\n   \"operating_mic\": \"XNYS\",\n   \"participant_id\": \"A\",\n   \"type\": \"exchange\",\n   \"url\": \"https://www.nyse.com/markets/nyse-american\"\n  }\n ],\n \"status\": \"OK\"\n}",
                  "description": "List all exchanges that Polygon.io knows about.",
                  "operationId": "ListExchanges",
                  "parameters": [
                    {
                      "description": "Filter by asset class.",
                      "in": "query",
                      "name": "asset_class",
                      "schema": {
                        "description": "An identifier for a group of similar financial instruments.",
                        "enum": ["stocks", "options", "crypto", "fx"],
                        "example": "stocks",
                        "type": "string"
                      }
                    },
                    {
                      "description": "Filter by locale.",
                      "in": "query",
                      "name": "locale",
                      "schema": {
                        "description": "An identifier for a geographical location.",
                        "enum": ["us", "global"],
                        "example": "us",
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "results": {
                                "items": {
                                  "description": "An entity that reports trades.",
                                  "properties": {
                                    "acronym": {
                                      "description": "A commonly used abbreviation for this exchange.",
                                      "example": "AMEX",
                                      "type": "string"
                                    },
                                    "asset_class": {
                                      "description": "An identifier for a group of similar financial instruments.",
                                      "enum": [
                                        "stocks",
                                        "options",
                                        "crypto",
                                        "fx"
                                      ],
                                      "example": "stocks",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "A unique identifier used by Polygon.io for this exchange.",
                                      "example": 1,
                                      "type": "integer"
                                    },
                                    "locale": {
                                      "description": "An identifier for a geographical location.",
                                      "enum": ["us", "global"],
                                      "example": "us",
                                      "type": "string"
                                    },
                                    "mic": {
                                      "description": "The Market Identifer Code of this exchange (see ISO 10383).",
                                      "example": "XASE",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of this exchange.",
                                      "example": "NYSE American, LLC",
                                      "type": "string"
                                    },
                                    "operating_mic": {
                                      "description": "The MIC of the entity that operates this exchange.",
                                      "example": "XNYS",
                                      "type": "string"
                                    },
                                    "participant_id": {
                                      "description": "The ID used by SIP's to represent this exchange.",
                                      "example": "A",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Represents the type of exchange.",
                                      "enum": ["exchange", "TRF", "SIP"],
                                      "example": "exchange",
                                      "type": "string"
                                    },
                                    "url": {
                                      "description": "A link to this exchange's website, if one exists.",
                                      "example": "https://www.nyse.com/markets/nyse-american",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "type",
                                    "asset_class",
                                    "locale",
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": ["status", "request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "OK"
                    },
                    "400": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": ["status", "request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "a query parameter was malformed"
                    },
                    "default": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "properties": {
                              "count": {
                                "description": "The total number of results for this request.",
                                "example": 1,
                                "type": "integer"
                              },
                              "request_id": {
                                "description": "A request ID assigned by the server.",
                                "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of this request's response.",
                                "example": "OK",
                                "type": "string"
                              }
                            },
                            "required": ["status", "request_id"],
                            "type": "object"
                          }
                        }
                      },
                      "description": "an unknown error occurred"
                    }
                  },
                  "summary": "Exchanges",
                  "tags": ["reference:exchanges"],
                  "x-polygon-entitlement-data-type": {
                    "description": "Reference data",
                    "name": "reference"
                  },
                  "parameterTemplate": "{apiBase}/v3/reference/exchanges?{optionalParameters}apiKey={apiKey}",
                  "method": "get"
                }
              ],
              "group": ""
            }
          ]
        }
      ],
      "ws": [
        {
          "market": [
            {
              "paths": [
                {
                  "id": "/stocks/AM",
                  "templatedPath": "/stocks",
                  "path": "ws_stocks_am",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": ["delayed", "realtime"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "type": "object",
                    "properties": {
                      "ev": {
                        "description": "The event type.",
                        "enum": ["AM"]
                      },
                      "sym": {
                        "type": "string",
                        "description": "The ticker symbol for the given stock."
                      },
                      "v": {
                        "type": "integer",
                        "description": "The tick volume."
                      },
                      "av": {
                        "type": "integer",
                        "description": "Today's accumulated volume."
                      },
                      "op": {
                        "type": "number",
                        "format": "double",
                        "description": "Today's official opening price."
                      },
                      "vw": {
                        "type": "number",
                        "format": "float",
                        "description": "The tick's volume weighted average price."
                      },
                      "o": {
                        "type": "number",
                        "format": "double",
                        "description": "The opening tick price for this aggregate window."
                      },
                      "c": {
                        "type": "number",
                        "format": "double",
                        "description": "The closing tick price for this aggregate window."
                      },
                      "h": {
                        "type": "number",
                        "format": "double",
                        "description": "The highest tick price for this aggregate window."
                      },
                      "l": {
                        "type": "number",
                        "format": "double",
                        "description": "The lowest tick price for this aggregate window."
                      },
                      "a": {
                        "type": "number",
                        "format": "float",
                        "description": "Today's volume weighted average price."
                      },
                      "z": {
                        "type": "integer",
                        "description": "The average trade size for this aggregate window."
                      },
                      "s": {
                        "type": "integer",
                        "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
                      },
                      "e": {
                        "type": "integer",
                        "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
                      },
                      "otc": {
                        "type": "boolean",
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
                      }
                    }
                  },
                  "example": "{\n \"ev\": \"AM\",\n \"sym\": \"GTE\",\n \"v\": 4110,\n \"av\": 9470157,\n \"op\": 0.4372,\n \"vw\": 0.4488,\n \"o\": 0.4488,\n \"c\": 0.4486,\n \"h\": 0.4489,\n \"l\": 0.4486,\n \"a\": 0.4352,\n \"z\": 685,\n \"s\": 1610144640000,\n \"e\": 1610144700000\n}",
                  "summary": "Aggregates (Per Minute)",
                  "description": "Stream real-time minute aggregates for a given stock ticker symbol.\n",
                  "parameters": [
                    {
                      "name": "ticker",
                      "in": "query",
                      "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z]+)$/"
                      },
                      "example": "*"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "The WebSocket message for a minute aggregate event.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "ev": { "description": "The event type." },
                                  "sym": {
                                    "type": "string",
                                    "description": "The ticker symbol for the given stock."
                                  },
                                  "v": {
                                    "type": "integer",
                                    "description": "The tick volume."
                                  },
                                  "av": {
                                    "type": "integer",
                                    "description": "Today's accumulated volume."
                                  },
                                  "op": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Today's official opening price."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "The tick's volume weighted average price."
                                  },
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The opening tick price for this aggregate window."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The closing tick price for this aggregate window."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest tick price for this aggregate window."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest tick price for this aggregate window."
                                  },
                                  "a": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "Today's volume weighted average price."
                                  },
                                  "z": {
                                    "type": "integer",
                                    "description": "The average trade size for this aggregate window."
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
                                  },
                                  "e": {
                                    "type": "integer",
                                    "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
                                  },
                                  "otc": {
                                    "type": "boolean",
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "ev": {
                                    "enum": ["AM"],
                                    "description": "The event type."
                                  }
                                }
                              }
                            ]
                          },
                          "example": {
                            "ev": "AM",
                            "sym": "GTE",
                            "v": 4110,
                            "av": 9470157,
                            "op": 0.4372,
                            "vw": 0.4488,
                            "o": 0.4488,
                            "c": 0.4486,
                            "h": 0.4489,
                            "l": 0.4486,
                            "a": 0.4352,
                            "z": 685,
                            "s": 1610144640000,
                            "e": 1610144700000
                          }
                        }
                      }
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "name": "aggregates",
                    "description": "Aggregate data"
                  },
                  "x-polygon-entitlement-market-type": {
                    "name": "stocks",
                    "description": "Stocks data"
                  },
                  "x-polygon-entitlement-allowed-timeframes": [
                    {
                      "name": "delayed",
                      "description": "15 minute delayed data"
                    },
                    { "name": "realtime", "description": "Real Time Data" }
                  ],
                  "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"AM.{ticker}\"}",
                  "method": "ws"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/stocks/A",
                  "templatedPath": "/stocks",
                  "path": "ws_stocks_a",
                  "entitlements": {
                    "dataType": "aggregates",
                    "market": "stocks",
                    "timeframes": ["delayed", "realtime"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "type": "object",
                    "properties": {
                      "ev": { "description": "The event type.", "enum": ["A"] },
                      "sym": {
                        "type": "string",
                        "description": "The ticker symbol for the given stock."
                      },
                      "v": {
                        "type": "integer",
                        "description": "The tick volume."
                      },
                      "av": {
                        "type": "integer",
                        "description": "Today's accumulated volume."
                      },
                      "op": {
                        "type": "number",
                        "format": "double",
                        "description": "Today's official opening price."
                      },
                      "vw": {
                        "type": "number",
                        "format": "float",
                        "description": "The tick's volume weighted average price."
                      },
                      "o": {
                        "type": "number",
                        "format": "double",
                        "description": "The opening tick price for this aggregate window."
                      },
                      "c": {
                        "type": "number",
                        "format": "double",
                        "description": "The closing tick price for this aggregate window."
                      },
                      "h": {
                        "type": "number",
                        "format": "double",
                        "description": "The highest tick price for this aggregate window."
                      },
                      "l": {
                        "type": "number",
                        "format": "double",
                        "description": "The lowest tick price for this aggregate window."
                      },
                      "a": {
                        "type": "number",
                        "format": "float",
                        "description": "Today's volume weighted average price."
                      },
                      "z": {
                        "type": "integer",
                        "description": "The average trade size for this aggregate window."
                      },
                      "s": {
                        "type": "integer",
                        "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
                      },
                      "e": {
                        "type": "integer",
                        "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
                      },
                      "otc": {
                        "type": "boolean",
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
                      }
                    }
                  },
                  "example": "{\n \"ev\": \"A\",\n \"sym\": \"SPCE\",\n \"v\": 200,\n \"av\": 8642007,\n \"op\": 25.66,\n \"vw\": 25.3981,\n \"o\": 25.39,\n \"c\": 25.39,\n \"h\": 25.39,\n \"l\": 25.39,\n \"a\": 25.3714,\n \"z\": 50,\n \"s\": 1610144868000,\n \"e\": 1610144869000\n}",
                  "summary": "Aggregates (Per Second)",
                  "description": "Stream real-time second aggregates for a given stock ticker symbol.\n",
                  "parameters": [
                    {
                      "name": "ticker",
                      "in": "query",
                      "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z]+)$/"
                      },
                      "example": "*"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "The WebSocket message for a second aggregate event.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "ev": { "description": "The event type." },
                                  "sym": {
                                    "type": "string",
                                    "description": "The ticker symbol for the given stock."
                                  },
                                  "v": {
                                    "type": "integer",
                                    "description": "The tick volume."
                                  },
                                  "av": {
                                    "type": "integer",
                                    "description": "Today's accumulated volume."
                                  },
                                  "op": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "Today's official opening price."
                                  },
                                  "vw": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "The tick's volume weighted average price."
                                  },
                                  "o": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The opening tick price for this aggregate window."
                                  },
                                  "c": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The closing tick price for this aggregate window."
                                  },
                                  "h": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The highest tick price for this aggregate window."
                                  },
                                  "l": {
                                    "type": "number",
                                    "format": "double",
                                    "description": "The lowest tick price for this aggregate window."
                                  },
                                  "a": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "Today's volume weighted average price."
                                  },
                                  "z": {
                                    "type": "integer",
                                    "description": "The average trade size for this aggregate window."
                                  },
                                  "s": {
                                    "type": "integer",
                                    "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
                                  },
                                  "e": {
                                    "type": "integer",
                                    "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
                                  },
                                  "otc": {
                                    "type": "boolean",
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "ev": {
                                    "enum": ["A"],
                                    "description": "The event type."
                                  }
                                }
                              }
                            ]
                          },
                          "example": {
                            "ev": "A",
                            "sym": "SPCE",
                            "v": 200,
                            "av": 8642007,
                            "op": 25.66,
                            "vw": 25.3981,
                            "o": 25.39,
                            "c": 25.39,
                            "h": 25.39,
                            "l": 25.39,
                            "a": 25.3714,
                            "z": 50,
                            "s": 1610144868000,
                            "e": 1610144869000
                          }
                        }
                      }
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "name": "aggregates",
                    "description": "Aggregate data"
                  },
                  "x-polygon-entitlement-market-type": {
                    "name": "stocks",
                    "description": "Stocks data"
                  },
                  "x-polygon-entitlement-allowed-timeframes": [
                    {
                      "name": "delayed",
                      "description": "15 minute delayed data"
                    },
                    { "name": "realtime", "description": "Real Time Data" }
                  ],
                  "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"A.{ticker}\"}",
                  "method": "ws"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/stocks/T",
                  "templatedPath": "/stocks",
                  "path": "ws_stocks_t",
                  "entitlements": {
                    "dataType": "trades",
                    "market": "stocks",
                    "timeframes": ["delayed", "realtime"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "type": "object",
                    "properties": {
                      "ev": { "enum": ["T"], "description": "The event type." },
                      "sym": {
                        "type": "string",
                        "description": "The ticker symbol for the given stock."
                      },
                      "x": {
                        "type": "integer",
                        "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                      },
                      "i": { "type": "string", "description": "The trade ID." },
                      "z": {
                        "type": "integer",
                        "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
                      },
                      "p": {
                        "type": "number",
                        "format": "double",
                        "description": "The price."
                      },
                      "s": {
                        "type": "integer",
                        "description": "The trade size."
                      },
                      "c": {
                        "type": "array",
                        "description": "The trade conditions. See <a target=\"_blank\" href=\"https://polygon.io/glossary/us/stocks/conditions-indicators\" \nalt=\"Conditions and Indicators\">Conditions and Indicators\"</a> for Polygon.io's trade conditions glossary.\n",
                        "items": {
                          "type": "integer",
                          "description": "The ID of the condition."
                        }
                      },
                      "t": {
                        "type": "integer",
                        "description": "The Timestamp in Unix MS."
                      },
                      "q": {
                        "type": "integer",
                        "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                      }
                    }
                  },
                  "example": "{\n \"ev\": \"T\",\n \"sym\": \"MSFT\",\n \"x\": 4,\n \"i\": \"12345\",\n \"z\": 3,\n \"p\": 114.125,\n \"s\": 100,\n \"c\": [\n  0,\n  12\n ],\n \"t\": 1536036818784,\n \"q\": 3681328\n}",
                  "summary": "Trades",
                  "description": "Stream real-time trades for a given stock ticker symbol.\n",
                  "parameters": [
                    {
                      "name": "ticker",
                      "in": "query",
                      "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z]+)$/"
                      },
                      "example": "*"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "The WebSocket message for a trade event.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "ev": {
                                "enum": ["T"],
                                "description": "The event type."
                              },
                              "sym": {
                                "type": "string",
                                "description": "The ticker symbol for the given stock."
                              },
                              "x": {
                                "type": "integer",
                                "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                              },
                              "i": {
                                "type": "string",
                                "description": "The trade ID."
                              },
                              "z": {
                                "type": "integer",
                                "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
                              },
                              "p": {
                                "type": "number",
                                "format": "double",
                                "description": "The price."
                              },
                              "s": {
                                "type": "integer",
                                "description": "The trade size."
                              },
                              "c": {
                                "type": "array",
                                "description": "The trade conditions. See <a target=\"_blank\" href=\"https://polygon.io/glossary/us/stocks/conditions-indicators\" \nalt=\"Conditions and Indicators\">Conditions and Indicators\"</a> for Polygon.io's trade conditions glossary.\n",
                                "items": {
                                  "type": "integer",
                                  "description": "The ID of the condition."
                                }
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Timestamp in Unix MS."
                              },
                              "q": {
                                "type": "integer",
                                "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                              }
                            }
                          },
                          "example": {
                            "ev": "T",
                            "sym": "MSFT",
                            "x": 4,
                            "i": "12345",
                            "z": 3,
                            "p": 114.125,
                            "s": 100,
                            "c": [0, 12],
                            "t": 1536036818784,
                            "q": 3681328
                          }
                        }
                      }
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "name": "trades",
                    "description": "Trade data"
                  },
                  "x-polygon-entitlement-market-type": {
                    "name": "stocks",
                    "description": "Stocks data"
                  },
                  "x-polygon-entitlement-allowed-timeframes": [
                    {
                      "name": "delayed",
                      "description": "15 minute delayed data"
                    },
                    { "name": "realtime", "description": "Real Time Data" }
                  ],
                  "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"T.{ticker}\"}",
                  "method": "ws"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/stocks/Q",
                  "templatedPath": "/stocks",
                  "path": "ws_stocks_q",
                  "entitlements": {
                    "dataType": "nbbo",
                    "market": "stocks",
                    "timeframes": ["realtime"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "type": "object",
                    "properties": {
                      "ev": { "enum": ["Q"], "description": "The event type." },
                      "sym": {
                        "type": "string",
                        "description": "The ticker symbol for the given stock."
                      },
                      "bx": {
                        "type": "integer",
                        "description": "The bid exchange ID."
                      },
                      "bp": {
                        "type": "number",
                        "format": "double",
                        "description": "The bid price."
                      },
                      "bs": {
                        "type": "integer",
                        "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
                      },
                      "ax": {
                        "type": "integer",
                        "description": "The ask exchange ID."
                      },
                      "ap": {
                        "type": "number",
                        "format": "double",
                        "description": "The ask price."
                      },
                      "as": {
                        "type": "integer",
                        "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
                      },
                      "c": {
                        "type": "integer",
                        "description": "The condition."
                      },
                      "i": {
                        "type": "array",
                        "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                        "items": {
                          "type": "integer",
                          "description": "The indicator code.\n"
                        }
                      },
                      "t": {
                        "type": "integer",
                        "description": "The Timestamp in Unix MS."
                      },
                      "z": {
                        "type": "integer",
                        "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq)."
                      }
                    }
                  },
                  "example": "{\n \"ev\": \"Q\",\n \"sym\": \"MSFT\",\n \"bx\": 4,\n \"bp\": 114.125,\n \"bs\": 100,\n \"ax\": 7,\n \"ap\": 114.128,\n \"as\": 160,\n \"c\": 0,\n \"i\": [\n  604\n ],\n \"t\": 1536036818784,\n \"z\": 3\n}",
                  "summary": "Quotes",
                  "description": "Stream real-time quotes for a given stock ticker symbol.\n",
                  "parameters": [
                    {
                      "name": "ticker",
                      "in": "query",
                      "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z]+)$/"
                      },
                      "example": "*"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "The WebSocket message for a quote event.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "ev": {
                                "enum": ["Q"],
                                "description": "The event type."
                              },
                              "sym": {
                                "type": "string",
                                "description": "The ticker symbol for the given stock."
                              },
                              "bx": {
                                "type": "integer",
                                "description": "The bid exchange ID."
                              },
                              "bp": {
                                "type": "number",
                                "format": "double",
                                "description": "The bid price."
                              },
                              "bs": {
                                "type": "integer",
                                "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
                              },
                              "ax": {
                                "type": "integer",
                                "description": "The ask exchange ID."
                              },
                              "ap": {
                                "type": "number",
                                "format": "double",
                                "description": "The ask price."
                              },
                              "as": {
                                "type": "integer",
                                "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
                              },
                              "c": {
                                "type": "integer",
                                "description": "The condition."
                              },
                              "i": {
                                "type": "array",
                                "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                                "items": {
                                  "type": "integer",
                                  "description": "The indicator code.\n"
                                }
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Timestamp in Unix MS."
                              },
                              "z": {
                                "type": "integer",
                                "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq)."
                              }
                            }
                          },
                          "example": {
                            "ev": "Q",
                            "sym": "MSFT",
                            "bx": 4,
                            "bp": 114.125,
                            "bs": 100,
                            "ax": 7,
                            "ap": 114.128,
                            "as": 160,
                            "c": 0,
                            "i": [604],
                            "t": 1536036818784,
                            "z": 3
                          }
                        }
                      }
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "name": "nbbo",
                    "description": "NBBO data"
                  },
                  "x-polygon-entitlement-market-type": {
                    "name": "stocks",
                    "description": "Stocks data"
                  },
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "name": "realtime", "description": "Real Time Data" }
                  ],
                  "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"Q.{ticker}\"}",
                  "method": "ws"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/stocks/NOI",
                  "templatedPath": "/stocks",
                  "path": "ws_stocks_noi",
                  "entitlements": {
                    "dataType": "imbalances",
                    "market": "stocks",
                    "timeframes": ["realtime"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "type": "object",
                    "properties": {
                      "ev": {
                        "enum": ["NOI"],
                        "description": "The event type."
                      },
                      "T": {
                        "type": "string",
                        "description": "The ticker symbol for the given stock."
                      },
                      "t": {
                        "type": "integer",
                        "description": "The Timestamp in Unix MS."
                      },
                      "at": {
                        "type": "integer",
                        "description": "The time that the auction is planned to take place in the format (hour x 100) + minutes in Eastern Standard Time, \nfor example 930 would be 9:30 am EST, and 1600 would be 4:00 pm EST.\n"
                      },
                      "a": {
                        "type": "string",
                        "description": "The auction type.\n`O` - Early Opening Auction (non-NYSE only)\n`M` - Core Opening Auction\n`H` - Reopening Auction (Halt Resume)\n`C` - Closing Auction\n`P` - Extreme Closing Imbalance (NYSE only)\n`R` - Regulatory Closing Imbalance (NYSE only)\n"
                      },
                      "i": {
                        "type": "integer",
                        "description": "The symbol sequence."
                      },
                      "x": {
                        "type": "integer",
                        "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                      },
                      "o": {
                        "type": "integer",
                        "description": "The imbalance quantity."
                      },
                      "p": {
                        "type": "integer",
                        "description": "The paired quantity."
                      },
                      "b": {
                        "type": "number",
                        "format": "double",
                        "description": "The book clearing price."
                      }
                    }
                  },
                  "example": "{\n \"ev\": \"NOI\",\n \"T\": \"NTEST.Q\",\n \"t\": 1601318039223013600,\n \"at\": 930,\n \"a\": \"M\",\n \"i\": 44,\n \"x\": 10,\n \"o\": 480,\n \"p\": 440,\n \"b\": 25.03\n}",
                  "summary": "Imbalances",
                  "description": "Stream real-time imbalance events for a given stock ticker symbol.\n",
                  "parameters": [
                    {
                      "name": "ticker",
                      "in": "query",
                      "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z]+)$/"
                      },
                      "example": "*"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "The WebSocket message for an imbalance event.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "ev": {
                                "enum": ["NOI"],
                                "description": "The event type."
                              },
                              "T": {
                                "type": "string",
                                "description": "The ticker symbol for the given stock."
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Timestamp in Unix MS."
                              },
                              "at": {
                                "type": "integer",
                                "description": "The time that the auction is planned to take place in the format (hour x 100) + minutes in Eastern Standard Time, \nfor example 930 would be 9:30 am EST, and 1600 would be 4:00 pm EST.\n"
                              },
                              "a": {
                                "type": "string",
                                "description": "The auction type.\n`O` - Early Opening Auction (non-NYSE only)\n`M` - Core Opening Auction\n`H` - Reopening Auction (Halt Resume)\n`C` - Closing Auction\n`P` - Extreme Closing Imbalance (NYSE only)\n`R` - Regulatory Closing Imbalance (NYSE only)\n"
                              },
                              "i": {
                                "type": "integer",
                                "description": "The symbol sequence."
                              },
                              "x": {
                                "type": "integer",
                                "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                              },
                              "o": {
                                "type": "integer",
                                "description": "The imbalance quantity."
                              },
                              "p": {
                                "type": "integer",
                                "description": "The paired quantity."
                              },
                              "b": {
                                "type": "number",
                                "format": "double",
                                "description": "The book clearing price."
                              }
                            }
                          },
                          "example": {
                            "ev": "NOI",
                            "T": "NTEST.Q",
                            "t": 1601318039223013600,
                            "at": 930,
                            "a": "M",
                            "i": 44,
                            "x": 10,
                            "o": 480,
                            "p": 440,
                            "b": 25.03
                          }
                        }
                      }
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "name": "imbalances",
                    "description": "Imbalances data"
                  },
                  "x-polygon-entitlement-market-type": {
                    "name": "stocks",
                    "description": "Stocks data"
                  },
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "name": "realtime", "description": "Real Time Data" }
                  ],
                  "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"NOI.{ticker}\"}",
                  "method": "ws"
                }
              ],
              "group": ""
            },
            {
              "paths": [
                {
                  "id": "/stocks/LULD",
                  "templatedPath": "/stocks",
                  "path": "ws_stocks_luld",
                  "entitlements": {
                    "dataType": "limit-up-limit-down",
                    "market": "stocks",
                    "timeframes": ["realtime"]
                  },
                  "deprecation": null,
                  "replaces": null,
                  "experimental": null,
                  "responseSchema": {
                    "type": "object",
                    "properties": {
                      "ev": {
                        "enum": ["LULD"],
                        "description": "The event type."
                      },
                      "T": {
                        "type": "string",
                        "description": "The ticker symbol for the given stock."
                      },
                      "h": {
                        "type": "number",
                        "format": "double",
                        "description": "The high price."
                      },
                      "l": {
                        "type": "number",
                        "format": "double",
                        "description": "The low price."
                      },
                      "i": {
                        "type": "array",
                        "description": "The Indicators.",
                        "items": { "type": "integer" }
                      },
                      "z": {
                        "type": "integer",
                        "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
                      },
                      "t": {
                        "type": "integer",
                        "description": "The Timestamp in Unix MS."
                      },
                      "q": {
                        "type": "integer",
                        "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                      }
                    }
                  },
                  "example": "{\n \"ev\": \"LULD\",\n \"T\": \"MSFT\",\n \"h\": 218.96,\n \"l\": 198.11,\n \"i\": [\n  21\n ],\n \"z\": 3,\n \"t\": 1601316752683746,\n \"q\": 290317\n}",
                  "summary": "Limit-Up Limit-Down (LULD)",
                  "description": "Stream real-time LULD events for a given stock ticker symbol.\n",
                  "parameters": [
                    {
                      "name": "ticker",
                      "in": "query",
                      "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
                      "required": true,
                      "schema": {
                        "type": "string",
                        "pattern": "/^([a-zA-Z]+)$/"
                      },
                      "example": "*"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "The WebSocket message for a LULD event.",
                      "content": {
                        "application/json": {
                          "schema": {
                            "type": "object",
                            "properties": {
                              "ev": {
                                "enum": ["LULD"],
                                "description": "The event type."
                              },
                              "T": {
                                "type": "string",
                                "description": "The ticker symbol for the given stock."
                              },
                              "h": {
                                "type": "number",
                                "format": "double",
                                "description": "The high price."
                              },
                              "l": {
                                "type": "number",
                                "format": "double",
                                "description": "The low price."
                              },
                              "i": {
                                "type": "array",
                                "description": "The Indicators.",
                                "items": { "type": "integer" }
                              },
                              "z": {
                                "type": "integer",
                                "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
                              },
                              "t": {
                                "type": "integer",
                                "description": "The Timestamp in Unix MS."
                              },
                              "q": {
                                "type": "integer",
                                "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                              }
                            }
                          },
                          "example": {
                            "ev": "LULD",
                            "T": "MSFT",
                            "h": 218.96,
                            "l": 198.11,
                            "i": [21],
                            "z": 3,
                            "t": 1601316752683746,
                            "q": 290317
                          }
                        }
                      }
                    }
                  },
                  "x-polygon-entitlement-data-type": {
                    "name": "limit-up-limit-down",
                    "description": "Limit-Up Limit-Down data"
                  },
                  "x-polygon-entitlement-market-type": {
                    "name": "stocks",
                    "description": "Stocks data"
                  },
                  "x-polygon-entitlement-allowed-timeframes": [
                    { "name": "realtime", "description": "Real Time Data" }
                  ],
                  "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"LULD.{ticker}\"}",
                  "method": "ws"
                }
              ],
              "group": ""
            }
          ]
        }
      ]
    },
    "navigation": [
      {
        "path": "getting-started",
        "summary": "Getting Started",
        "description": "The Polygon.io Stocks API provides REST endpoints that let you\nquery the latest market data from all US stock exchanges. You\ncan also find data on company financials, stock market\nholidays, corporate actions, and more."
      },
      {
        "id": "/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}",
        "templatedPath": "/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}",
        "path": "get_v2_aggs_ticker__stocksticker__range__multiplier___timespan___from___to",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "ticker": {
              "description": "The exchange symbol that this item is traded under.",
              "type": "string"
            },
            "adjusted": {
              "description": "Whether or not this response was adjusted for splits.",
              "type": "boolean"
            },
            "queryCount": {
              "description": "The number of aggregates (minute or day) used to generate the response.",
              "type": "integer"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "resultsCount": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "c": {
                    "description": "The close price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "h": {
                    "description": "The highest price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "l": {
                    "description": "The lowest price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "n": {
                    "description": "The number of transactions in the aggregate window.",
                    "type": "integer"
                  },
                  "o": {
                    "description": "The open price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "otc": {
                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                    "type": "boolean"
                  },
                  "t": {
                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                    "type": "integer"
                  },
                  "v": {
                    "description": "The trading volume of the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "vw": {
                    "description": "The volume weighted average price.",
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"adjusted\": true,\n \"queryCount\": 2,\n \"request_id\": \"6a7e466379af0a71039d60cc78e72282\",\n \"results\": [\n  {\n   \"c\": 75.0875,\n   \"h\": 75.15,\n   \"l\": 73.7975,\n   \"n\": 1,\n   \"o\": 74.06,\n   \"t\": 1577941200000,\n   \"v\": 135647456,\n   \"vw\": 74.6099\n  },\n  {\n   \"c\": 74.3575,\n   \"h\": 75.145,\n   \"l\": 74.125,\n   \"n\": 1,\n   \"o\": 74.2875,\n   \"t\": 1578027600000,\n   \"v\": 146535512,\n   \"vw\": 74.7026\n  }\n ],\n \"resultsCount\": 2,\n \"status\": \"OK\",\n \"ticker\": \"AAPL\"\n}",
        "description": "Get aggregate bars for a stock over a given date range in custom time window sizes.\n<br />\n<br />\nFor example, if timespan = ‘minute’ and multiplier = ‘5’ then 5-minute bars will be returned.\n",
        "parameters": [
          {
            "description": "The ticker symbol of the stock/equity.",
            "example": "AAPL",
            "in": "path",
            "name": "stocksTicker",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The size of the timespan multiplier.",
            "example": 1,
            "in": "path",
            "name": "multiplier",
            "required": true,
            "schema": { "type": "integer" }
          },
          {
            "description": "The size of the time window.",
            "example": "day",
            "in": "path",
            "name": "timespan",
            "required": true,
            "schema": {
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "The start of the aggregate time window. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
            "example": "2021-07-22",
            "in": "path",
            "name": "from",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The end of the aggregate time window. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
            "example": "2021-07-22",
            "in": "path",
            "name": "to",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "type": "boolean" }
          },
          {
            "description": "Sort the results by timestamp.\n`asc` will return results in ascending order (oldest at the top),\n`desc` will return results in descending order (newest at the top).\n",
            "example": "asc",
            "in": "query",
            "name": "sort",
            "schema": { "enum": ["asc", "desc"] }
          },
          {
            "description": "Limits the number of base aggregates queried to create the aggregate results. Max 50000 and Default 5000.\nRead more about how limit is used to calculate aggregate results in our article on \n<a href=\"https://polygon.io/blog/aggs-api-updates/\" target=\"_blank\" alt=\"Aggregate Data API Improvements\">Aggregate Data API Improvements</a>.\n",
            "example": 120,
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "adjusted": true,
                  "queryCount": 2,
                  "request_id": "6a7e466379af0a71039d60cc78e72282",
                  "results": [
                    {
                      "c": 75.0875,
                      "h": 75.15,
                      "l": 73.7975,
                      "n": 1,
                      "o": 74.06,
                      "t": 1577941200000,
                      "v": 135647456,
                      "vw": 74.6099
                    },
                    {
                      "c": 74.3575,
                      "h": 75.145,
                      "l": 74.125,
                      "n": 1,
                      "o": 74.2875,
                      "t": 1578027600000,
                      "v": 146535512,
                      "vw": 74.7026
                    }
                  ],
                  "resultsCount": 2,
                  "status": "OK",
                  "ticker": "AAPL"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "ticker": {
                          "description": "The exchange symbol that this item is traded under.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "adjusted": {
                          "description": "Whether or not this response was adjusted for splits.",
                          "type": "boolean"
                        },
                        "queryCount": {
                          "description": "The number of aggregates (minute or day) used to generate the response.",
                          "type": "integer"
                        },
                        "request_id": {
                          "description": "A request id assigned by the server.",
                          "type": "string"
                        },
                        "resultsCount": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "results": {
                          "items": {
                            "properties": {
                              "c": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "h": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "l": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "n": {
                                "description": "The number of transactions in the aggregate window.",
                                "type": "integer"
                              },
                              "o": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "otc": {
                                "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                "type": "boolean"
                              },
                              "t": {
                                "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                "type": "integer"
                              },
                              "v": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "vw": {
                                "description": "The volume weighted average price.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Stock Aggregates."
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Aggregates (Bars)",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/aggs/ticker/{stocksTicker}/range/{multiplier}/{timespan}/{from}/{to}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/aggs/grouped/locale/us/market/stocks/{date}",
        "templatedPath": "/v2/aggs/grouped/locale/us/market/stocks/{date}",
        "path": "get_v2_aggs_grouped_locale_us_market_stocks__date",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "adjusted": {
              "description": "Whether or not this response was adjusted for splits.",
              "type": "boolean"
            },
            "queryCount": {
              "description": "The number of aggregates (minute or day) used to generate the response.",
              "type": "integer"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "resultsCount": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "T": {
                    "description": "The exchange symbol that this item is traded under.",
                    "type": "string"
                  },
                  "c": {
                    "description": "The close price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "h": {
                    "description": "The highest price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "l": {
                    "description": "The lowest price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "n": {
                    "description": "The number of transactions in the aggregate window.",
                    "type": "integer"
                  },
                  "o": {
                    "description": "The open price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "otc": {
                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                    "type": "boolean"
                  },
                  "t": {
                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                    "type": "integer"
                  },
                  "v": {
                    "description": "The trading volume of the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "vw": {
                    "description": "The volume weighted average price.",
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"adjusted\": true,\n \"queryCount\": 3,\n \"results\": [\n  {\n   \"T\": \"KIMpL\",\n   \"c\": 25.9102,\n   \"h\": 26.25,\n   \"l\": 25.91,\n   \"n\": 74,\n   \"o\": 26.07,\n   \"t\": 1602705600000,\n   \"v\": 4369,\n   \"vw\": 26.0407\n  },\n  {\n   \"T\": \"TANH\",\n   \"c\": 23.4,\n   \"h\": 24.763,\n   \"l\": 22.65,\n   \"n\": 1096,\n   \"o\": 24.5,\n   \"t\": 1602705600000,\n   \"v\": 25933.6,\n   \"vw\": 23.493\n  },\n  {\n   \"T\": \"VSAT\",\n   \"c\": 34.24,\n   \"h\": 35.47,\n   \"l\": 34.21,\n   \"n\": 4966,\n   \"o\": 34.9,\n   \"t\": 1602705600000,\n   \"v\": 312583,\n   \"vw\": 34.4736\n  }\n ],\n \"resultsCount\": 3,\n \"status\": \"OK\"\n}",
        "description": "Get the daily open, high, low, and close (OHLC) for the entire stocks/equities markets.\n",
        "parameters": [
          {
            "description": "The beginning date for the aggregate window.",
            "example": "2020-10-14",
            "in": "path",
            "name": "date",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "type": "boolean" }
          },
          {
            "description": "Include OTC securities in the response. Default is false (don't include OTC securities).\n",
            "in": "query",
            "name": "include_otc",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "adjusted": true,
                  "queryCount": 3,
                  "results": [
                    {
                      "T": "KIMpL",
                      "c": 25.9102,
                      "h": 26.25,
                      "l": 25.91,
                      "n": 74,
                      "o": 26.07,
                      "t": 1602705600000,
                      "v": 4369,
                      "vw": 26.0407
                    },
                    {
                      "T": "TANH",
                      "c": 23.4,
                      "h": 24.763,
                      "l": 22.65,
                      "n": 1096,
                      "o": 24.5,
                      "t": 1602705600000,
                      "v": 25933.6,
                      "vw": 23.493
                    },
                    {
                      "T": "VSAT",
                      "c": 34.24,
                      "h": 35.47,
                      "l": 34.21,
                      "n": 4966,
                      "o": 34.9,
                      "t": 1602705600000,
                      "v": 312583,
                      "vw": 34.4736
                    }
                  ],
                  "resultsCount": 3,
                  "status": "OK"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "adjusted": {
                          "description": "Whether or not this response was adjusted for splits.",
                          "type": "boolean"
                        },
                        "queryCount": {
                          "description": "The number of aggregates (minute or day) used to generate the response.",
                          "type": "integer"
                        },
                        "request_id": {
                          "description": "A request id assigned by the server.",
                          "type": "string"
                        },
                        "resultsCount": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "results": {
                          "items": {
                            "properties": {
                              "T": {
                                "description": "The exchange symbol that this item is traded under.",
                                "type": "string"
                              },
                              "c": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "h": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "l": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "n": {
                                "description": "The number of transactions in the aggregate window.",
                                "type": "integer"
                              },
                              "o": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "otc": {
                                "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                "type": "boolean"
                              },
                              "t": {
                                "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                "type": "integer"
                              },
                              "v": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "vw": {
                                "description": "The volume weighted average price.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Previous day OHLC for ticker"
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Grouped Daily (Bars)",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/aggs/grouped/locale/us/market/stocks/{date}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/open-close/{stocksTicker}/{date}",
        "templatedPath": "/v1/open-close/{stocksTicker}/{date}",
        "path": "get_v1_open-close__stocksticker___date",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "afterHours": {
              "description": "The close price of the ticker symbol in after hours trading.",
              "format": "double",
              "type": "number"
            },
            "close": {
              "description": "The close price for the symbol in the given time period.",
              "format": "double",
              "type": "number"
            },
            "from": {
              "description": "The requested date.",
              "format": "date",
              "type": "string"
            },
            "high": {
              "description": "The highest price for the symbol in the given time period.",
              "format": "double",
              "type": "number"
            },
            "low": {
              "description": "The lowest price for the symbol in the given time period.",
              "format": "double",
              "type": "number"
            },
            "open": {
              "description": "The open price for the symbol in the given time period.",
              "format": "double",
              "type": "number"
            },
            "otc": {
              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
              "type": "boolean"
            },
            "preMarket": {
              "description": "The open price of the ticker symbol in pre-market trading.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "symbol": {
              "description": "The exchange symbol that this item is traded under.",
              "type": "string"
            },
            "volume": {
              "description": "The trading volume of the symbol in the given time period.",
              "format": "double",
              "type": "number"
            }
          },
          "type": "object"
        },
        "example": "{\n \"afterHours\": 322.1,\n \"close\": 325.12,\n \"from\": \"2020-10-14T00:00:00.000Z\",\n \"high\": 326.2,\n \"low\": 322.3,\n \"open\": 324.66,\n \"preMarket\": 324.5,\n \"status\": \"OK\",\n \"symbol\": \"AAPL\",\n \"volume\": 26122646\n}",
        "description": "Get the open, close and afterhours prices of a stock symbol on a certain date.\n",
        "parameters": [
          {
            "description": "The ticker symbol of the stock/equity.",
            "example": "AAPL",
            "in": "path",
            "name": "stocksTicker",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The date of the requested open/close in the format YYYY-MM-DD.",
            "example": "2020-10-14",
            "in": "path",
            "name": "date",
            "required": true,
            "schema": { "format": "date", "type": "string" }
          },
          {
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "afterHours": 322.1,
                  "close": 325.12,
                  "from": "2020-10-14T00:00:00.000Z",
                  "high": 326.2,
                  "low": 322.3,
                  "open": 324.66,
                  "preMarket": 324.5,
                  "status": "OK",
                  "symbol": "AAPL",
                  "volume": 26122646
                },
                "schema": {
                  "properties": {
                    "afterHours": {
                      "description": "The close price of the ticker symbol in after hours trading.",
                      "format": "double",
                      "type": "number"
                    },
                    "close": {
                      "description": "The close price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "from": {
                      "description": "The requested date.",
                      "format": "date",
                      "type": "string"
                    },
                    "high": {
                      "description": "The highest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "low": {
                      "description": "The lowest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "open": {
                      "description": "The open price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "otc": {
                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                      "type": "boolean"
                    },
                    "preMarket": {
                      "description": "The open price of the ticker symbol in pre-market trading.",
                      "type": "integer"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    },
                    "symbol": {
                      "description": "The exchange symbol that this item is traded under.",
                      "type": "string"
                    },
                    "volume": {
                      "description": "The trading volume of the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The open/close of this stock symbol."
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Daily Open/Close",
        "tags": ["stocks:open-close"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v1/open-close/{stocksTicker}/{date}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/aggs/ticker/{stocksTicker}/prev",
        "templatedPath": "/v2/aggs/ticker/{stocksTicker}/prev",
        "path": "get_v2_aggs_ticker__stocksticker__prev",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "ticker": {
              "description": "The exchange symbol that this item is traded under.",
              "type": "string"
            },
            "adjusted": {
              "description": "Whether or not this response was adjusted for splits.",
              "type": "boolean"
            },
            "queryCount": {
              "description": "The number of aggregates (minute or day) used to generate the response.",
              "type": "integer"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "resultsCount": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "c": {
                    "description": "The close price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "h": {
                    "description": "The highest price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "l": {
                    "description": "The lowest price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "n": {
                    "description": "The number of transactions in the aggregate window.",
                    "type": "integer"
                  },
                  "o": {
                    "description": "The open price for the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "t": {
                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                    "type": "integer"
                  },
                  "v": {
                    "description": "The trading volume of the symbol in the given time period.",
                    "format": "double",
                    "type": "number"
                  },
                  "vw": {
                    "description": "The volume weighted average price.",
                    "format": "double",
                    "type": "number"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"adjusted\": true,\n \"queryCount\": 1,\n \"request_id\": \"6a7e466379af0a71039d60cc78e72282\",\n \"results\": [\n  {\n   \"T\": \"AAPL\",\n   \"c\": 115.97,\n   \"h\": 117.59,\n   \"l\": 114.13,\n   \"o\": 115.55,\n   \"t\": 1605042000000,\n   \"v\": 131704427,\n   \"vw\": 116.3058\n  }\n ],\n \"resultsCount\": 1,\n \"status\": \"OK\",\n \"ticker\": \"AAPL\"\n}",
        "description": "Get the previous day's open, high, low, and close (OHLC) for the specified stock ticker.\n",
        "parameters": [
          {
            "description": "The ticker symbol of the stock/equity.",
            "example": "AAPL",
            "in": "path",
            "name": "stocksTicker",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Whether or not the results are adjusted for splits.  By default, results are adjusted.\nSet this to false to get results that are NOT adjusted for splits.\n",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "adjusted": true,
                  "queryCount": 1,
                  "request_id": "6a7e466379af0a71039d60cc78e72282",
                  "results": [
                    {
                      "T": "AAPL",
                      "c": 115.97,
                      "h": 117.59,
                      "l": 114.13,
                      "o": 115.55,
                      "t": 1605042000000,
                      "v": 131704427,
                      "vw": 116.3058
                    }
                  ],
                  "resultsCount": 1,
                  "status": "OK",
                  "ticker": "AAPL"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "ticker": {
                          "description": "The exchange symbol that this item is traded under.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "adjusted": {
                          "description": "Whether or not this response was adjusted for splits.",
                          "type": "boolean"
                        },
                        "queryCount": {
                          "description": "The number of aggregates (minute or day) used to generate the response.",
                          "type": "integer"
                        },
                        "request_id": {
                          "description": "A request id assigned by the server.",
                          "type": "string"
                        },
                        "resultsCount": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "results": {
                          "items": {
                            "properties": {
                              "c": {
                                "description": "The close price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "h": {
                                "description": "The highest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "l": {
                                "description": "The lowest price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "n": {
                                "description": "The number of transactions in the aggregate window.",
                                "type": "integer"
                              },
                              "o": {
                                "description": "The open price for the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "t": {
                                "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                "type": "integer"
                              },
                              "v": {
                                "description": "The trading volume of the symbol in the given time period.",
                                "format": "double",
                                "type": "number"
                              },
                              "vw": {
                                "description": "The volume weighted average price.",
                                "format": "double",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "The previous day OHLC for the ticker."
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Previous Close",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/aggs/ticker/{stocksTicker}/prev?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/trades/{stockTicker}",
        "templatedPath": "/v3/trades/{stockTicker}",
        "path": "get_v3_trades__stockticker",
        "entitlements": {
          "dataType": "trades",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": {
          "date": 1654056060000,
          "replaces": {
            "name": "Trades",
            "path": "get_v2_ticks_stocks_trades__ticker___date"
          }
        },
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "conditions": {
                    "description": "A list of condition codes.",
                    "items": {
                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "correction": {
                    "description": "The trade correction indicator.",
                    "type": "integer"
                  },
                  "exchange": {
                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                    "type": "integer"
                  },
                  "id": {
                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                    "type": "string"
                  },
                  "participant_timestamp": {
                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the trade was actually generated at the exchange.",
                    "format": "int64",
                    "type": "integer",
                    "x-polygon-go-type": {
                      "name": "INanoseconds",
                      "path": "github.com/polygon-io/ptime"
                    }
                  },
                  "price": {
                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                    "format": "double",
                    "type": "number"
                  },
                  "sequence_number": {
                    "description": "The sequence number represents the sequence in which trade events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "sip_timestamp": {
                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this trade from the exchange which produced it.",
                    "format": "int64",
                    "type": "integer",
                    "x-polygon-go-type": {
                      "name": "INanoseconds",
                      "path": "github.com/polygon-io/ptime"
                    }
                  },
                  "size": {
                    "description": "The size of a trade (also known as volume).",
                    "format": "double",
                    "type": "number"
                  },
                  "tape": {
                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                    "format": "int32",
                    "type": "integer"
                  },
                  "trf_id": {
                    "description": "The ID for the Trade Reporting Facility where the trade took place.",
                    "type": "integer"
                  },
                  "trf_timestamp": {
                    "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this trade.",
                    "format": "int64",
                    "type": "integer",
                    "x-polygon-go-type": {
                      "name": "INanoseconds",
                      "path": "github.com/polygon-io/ptime"
                    }
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v3/trades/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": [\n  {\n   \"conditions\": [\n    12,\n    41\n   ],\n   \"exchange\": 11,\n   \"id\": \"1\",\n   \"participant_timestamp\": 1517562000015577000,\n   \"price\": 171.55,\n   \"sequence_number\": 1063,\n   \"sip_timestamp\": 1517562000016036600,\n   \"size\": 100,\n   \"tape\": 3\n  },\n  {\n   \"conditions\": [\n    12,\n    41\n   ],\n   \"exchange\": 11,\n   \"id\": \"2\",\n   \"participant_timestamp\": 1517562000015577600,\n   \"price\": 171.55,\n   \"sequence_number\": 1064,\n   \"sip_timestamp\": 1517562000016038100,\n   \"size\": 100,\n   \"tape\": 3\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "Get trades for a ticker symbol in a given time range.",
        "operationId": "Trades",
        "parameters": [
          {
            "description": "The ticker symbol to get trades for.",
            "example": "AAPL",
            "in": "path",
            "name": "stockTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          },
          {
            "description": "Query by trade timestamp. Either a date with the format YYYY-MM-DD or a nanosecond timestamp.",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 50000.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "example": 10,
              "maximum": 50000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "timestamp",
              "enum": ["timestamp"],
              "example": "timestamp",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v3/trades/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                  "results": [
                    {
                      "conditions": [12, 41],
                      "exchange": 11,
                      "id": "1",
                      "participant_timestamp": 1517562000015577000,
                      "price": 171.55,
                      "sequence_number": 1063,
                      "sip_timestamp": 1517562000016036600,
                      "size": 100,
                      "tape": 3
                    },
                    {
                      "conditions": [12, 41],
                      "exchange": 11,
                      "id": "2",
                      "participant_timestamp": 1517562000015577600,
                      "price": 171.55,
                      "sequence_number": 1064,
                      "sip_timestamp": 1517562000016038100,
                      "size": 100,
                      "tape": 3
                    }
                  ],
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "results": {
                      "items": {
                        "properties": {
                          "conditions": {
                            "description": "A list of condition codes.",
                            "items": {
                              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "correction": {
                            "description": "The trade correction indicator.",
                            "type": "integer"
                          },
                          "exchange": {
                            "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                            "type": "string"
                          },
                          "participant_timestamp": {
                            "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the trade was actually generated at the exchange.",
                            "format": "int64",
                            "type": "integer",
                            "x-polygon-go-type": {
                              "name": "INanoseconds",
                              "path": "github.com/polygon-io/ptime"
                            }
                          },
                          "price": {
                            "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                            "format": "double",
                            "type": "number"
                          },
                          "sequence_number": {
                            "description": "The sequence number represents the sequence in which trade events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                            "format": "int64",
                            "type": "integer"
                          },
                          "sip_timestamp": {
                            "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this trade from the exchange which produced it.",
                            "format": "int64",
                            "type": "integer",
                            "x-polygon-go-type": {
                              "name": "INanoseconds",
                              "path": "github.com/polygon-io/ptime"
                            }
                          },
                          "size": {
                            "description": "The size of a trade (also known as volume).",
                            "format": "double",
                            "type": "number"
                          },
                          "tape": {
                            "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                            "format": "int32",
                            "type": "integer"
                          },
                          "trf_id": {
                            "description": "The ID for the Trade Reporting Facility where the trade took place.",
                            "type": "integer"
                          },
                          "trf_timestamp": {
                            "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this trade.",
                            "format": "int64",
                            "type": "integer",
                            "x-polygon-go-type": {
                              "name": "INanoseconds",
                              "path": "github.com/polygon-io/ptime"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A list of trades."
          }
        },
        "summary": "Trades",
        "tags": ["stocks:trades"],
        "x-polygon-entitlement-data-type": {
          "description": "Trade data",
          "name": "trades"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "x-polygon-paginate": {
          "limit": { "max": 50000 },
          "order": { "default": "desc" },
          "sort": { "default": "timestamp", "enum": ["timestamp"] }
        },
        "x-polygon-replaces": {
          "date": 1654056060000,
          "replaces": {
            "name": "Trades",
            "path": "get_v2_ticks_stocks_trades__ticker___date"
          }
        },
        "parameterTemplate": "{apiBase}/v3/trades/{stockTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/ticks/stocks/trades/{ticker}/{date}",
        "templatedPath": "/v2/ticks/stocks/trades/{ticker}/{date}",
        "path": "get_v2_ticks_stocks_trades__ticker___date",
        "entitlements": {
          "dataType": "trades",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": {
          "date": 1654056060000,
          "replaces": {
            "name": "Trades v3",
            "path": "get_v3_trades__stockticker"
          }
        },
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "db_latency": {
              "description": "Latency in milliseconds for the query results from the database.",
              "type": "integer"
            },
            "results_count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "success": {
              "description": "Whether or not this query was executed successfully.",
              "type": "boolean"
            },
            "ticker": {
              "description": "The exchange symbol that this item is traded under.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "T": {
                    "description": "The exchange symbol that this item is traded under.",
                    "type": "string"
                  },
                  "f": {
                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                    "type": "integer"
                  },
                  "q": {
                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                    "format": "int64",
                    "type": "integer"
                  },
                  "t": {
                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                    "type": "integer"
                  },
                  "y": {
                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                    "type": "integer"
                  },
                  "c": {
                    "description": "A list of condition codes.\n",
                    "items": {
                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "e": {
                    "description": "The trade correction indicator.\n",
                    "type": "integer"
                  },
                  "i": {
                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                    "type": "string"
                  },
                  "p": {
                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                    "format": "double",
                    "type": "number"
                  },
                  "r": {
                    "description": "The ID for the Trade Reporting Facility where the trade took place.\n",
                    "type": "integer"
                  },
                  "s": {
                    "description": "The size of a trade (also known as volume).\n",
                    "format": "double",
                    "type": "number"
                  },
                  "x": {
                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                    "type": "integer"
                  },
                  "z": {
                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"db_latency\": 11,\n \"map\": {\n  \"I\": {\n   \"name\": \"orig_id\",\n   \"type\": \"string\"\n  },\n  \"c\": {\n   \"name\": \"conditions\",\n   \"type\": \"int\"\n  },\n  \"e\": {\n   \"name\": \"correction\",\n   \"type\": \"int\"\n  },\n  \"f\": {\n   \"name\": \"trf_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"i\": {\n   \"name\": \"id\",\n   \"type\": \"string\"\n  },\n  \"p\": {\n   \"name\": \"price\",\n   \"type\": \"float64\"\n  },\n  \"q\": {\n   \"name\": \"sequence_number\",\n   \"type\": \"int64\"\n  },\n  \"r\": {\n   \"name\": \"trf_id\",\n   \"type\": \"int\"\n  },\n  \"s\": {\n   \"name\": \"size\",\n   \"type\": \"int\"\n  },\n  \"t\": {\n   \"name\": \"sip_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"x\": {\n   \"name\": \"exchange\",\n   \"type\": \"int\"\n  },\n  \"y\": {\n   \"name\": \"participant_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"z\": {\n   \"name\": \"tape\",\n   \"type\": \"int\"\n  }\n },\n \"results\": [\n  {\n   \"c\": [\n    12,\n    41\n   ],\n   \"i\": \"1\",\n   \"p\": 171.55,\n   \"q\": 1063,\n   \"s\": 100,\n   \"t\": 1517562000016036600,\n   \"x\": 11,\n   \"y\": 1517562000015577000,\n   \"z\": 3\n  },\n  {\n   \"c\": [\n    12,\n    41\n   ],\n   \"i\": \"2\",\n   \"p\": 171.55,\n   \"q\": 1064,\n   \"s\": 100,\n   \"t\": 1517562000016038100,\n   \"x\": 11,\n   \"y\": 1517562000015577600,\n   \"z\": 3\n  }\n ],\n \"results_count\": 2,\n \"success\": true,\n \"ticker\": \"AAPL\"\n}",
        "description": "Get trades for a given ticker symbol on a specified date.\n",
        "parameters": [
          {
            "description": "The ticker symbol we want trades for.",
            "example": "AAPL",
            "in": "path",
            "name": "ticker",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The date/day of the trades to retrieve in the format YYYY-MM-DD.",
            "example": "2020-10-14",
            "in": "path",
            "name": "date",
            "required": true,
            "schema": { "format": "date", "type": "string" }
          },
          {
            "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "integer" }
          },
          {
            "description": "The maximum timestamp allowed in the results.\n",
            "in": "query",
            "name": "timestampLimit",
            "schema": { "type": "integer" }
          },
          {
            "description": "Reverse the order of the results.\n",
            "example": true,
            "in": "query",
            "name": "reverse",
            "schema": { "type": "boolean" }
          },
          {
            "description": "Limit the size of the response, max 50000 and default 5000.",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "db_latency": 11,
                  "map": {
                    "I": { "name": "orig_id", "type": "string" },
                    "c": { "name": "conditions", "type": "int" },
                    "e": { "name": "correction", "type": "int" },
                    "f": { "name": "trf_timestamp", "type": "int64" },
                    "i": { "name": "id", "type": "string" },
                    "p": { "name": "price", "type": "float64" },
                    "q": { "name": "sequence_number", "type": "int64" },
                    "r": { "name": "trf_id", "type": "int" },
                    "s": { "name": "size", "type": "int" },
                    "t": { "name": "sip_timestamp", "type": "int64" },
                    "x": { "name": "exchange", "type": "int" },
                    "y": { "name": "participant_timestamp", "type": "int64" },
                    "z": { "name": "tape", "type": "int" }
                  },
                  "results": [
                    {
                      "c": [12, 41],
                      "i": "1",
                      "p": 171.55,
                      "q": 1063,
                      "s": 100,
                      "t": 1517562000016036600,
                      "x": 11,
                      "y": 1517562000015577000,
                      "z": 3
                    },
                    {
                      "c": [12, 41],
                      "i": "2",
                      "p": 171.55,
                      "q": 1064,
                      "s": 100,
                      "t": 1517562000016038100,
                      "x": 11,
                      "y": 1517562000015577600,
                      "z": 3
                    }
                  ],
                  "results_count": 2,
                  "success": true,
                  "ticker": "AAPL"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "db_latency": {
                          "description": "Latency in milliseconds for the query results from the database.",
                          "type": "integer"
                        },
                        "results_count": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "success": {
                          "description": "Whether or not this query was executed successfully.",
                          "type": "boolean"
                        },
                        "ticker": {
                          "description": "The exchange symbol that this item is traded under.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "results": {
                          "items": {
                            "allOf": [
                              {
                                "properties": {
                                  "T": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  },
                                  "f": {
                                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                                    "type": "integer"
                                  },
                                  "q": {
                                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                                    "type": "integer"
                                  },
                                  "y": {
                                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "c": {
                                    "description": "A list of condition codes.\n",
                                    "items": {
                                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "e": {
                                    "description": "The trade correction indicator.\n",
                                    "type": "integer"
                                  },
                                  "i": {
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                    "type": "string"
                                  },
                                  "p": {
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "r": {
                                    "description": "The ID for the Trade Reporting Facility where the trade took place.\n",
                                    "type": "integer"
                                  },
                                  "s": {
                                    "description": "The size of a trade (also known as volume).\n",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "x": {
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                    "type": "integer"
                                  },
                                  "z": {
                                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "A list of trades."
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Trades",
        "tags": ["stocks:trades"],
        "x-polygon-deprecation": {
          "date": 1654056060000,
          "replaces": {
            "name": "Trades v3",
            "path": "get_v3_trades__stockticker"
          }
        },
        "x-polygon-entitlement-data-type": {
          "description": "Trade data",
          "name": "trades"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/ticks/stocks/trades/{ticker}/{date}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/last/trade/{stocksTicker}",
        "templatedPath": "/v2/last/trade/{stocksTicker}",
        "path": "get_v2_last_trade__stocksticker",
        "entitlements": {
          "dataType": "trades",
          "market": "stocks",
          "timeframes": ["realtime", "delayed"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "properties": {
                "T": {
                  "description": "The exchange symbol that this item is traded under.",
                  "type": "string"
                },
                "c": {
                  "description": "A list of condition codes.",
                  "items": {
                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                    "type": "integer"
                  },
                  "type": "array",
                  "x-polygon-go-type": { "name": "[]*int32" }
                },
                "e": {
                  "description": "The trade correction indicator.",
                  "type": "integer"
                },
                "f": {
                  "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                  "type": "integer"
                },
                "i": {
                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                  "type": "string"
                },
                "p": {
                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                  "format": "double",
                  "type": "number"
                },
                "q": {
                  "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                  "format": "int64",
                  "type": "integer"
                },
                "r": {
                  "description": "The ID for the Trade Reporting Facility where the trade took place.",
                  "type": "integer"
                },
                "s": {
                  "description": "The size of a trade (also known as volume).",
                  "format": "double",
                  "type": "number"
                },
                "t": {
                  "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                  "type": "integer"
                },
                "x": {
                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                  "type": "integer"
                },
                "y": {
                  "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                  "type": "integer"
                },
                "z": {
                  "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-polygon-go-type": { "name": "LastTradeResult" }
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"request_id\": \"f05562305bd26ced64b98ed68b3c5d96\",\n \"results\": {\n  \"T\": \"AAPL\",\n  \"c\": [\n   37\n  ],\n  \"f\": 1617901342969796400,\n  \"i\": \"118749\",\n  \"p\": 129.8473,\n  \"q\": 3135876,\n  \"r\": 202,\n  \"s\": 25,\n  \"t\": 1617901342969834000,\n  \"x\": 4,\n  \"y\": 1617901342968000000,\n  \"z\": 3\n },\n \"status\": \"OK\"\n}",
        "description": "Get the most recent trade for a given stock.",
        "operationId": "LastTrade",
        "parameters": [
          {
            "description": "The ticker symbol of the stock/equity.",
            "example": "AAPL",
            "in": "path",
            "name": "stocksTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "request_id": "f05562305bd26ced64b98ed68b3c5d96",
                  "results": {
                    "T": "AAPL",
                    "c": [37],
                    "f": 1617901342969796400,
                    "i": "118749",
                    "p": 129.8473,
                    "q": 3135876,
                    "r": 202,
                    "s": 25,
                    "t": 1617901342969834000,
                    "x": 4,
                    "y": 1617901342968000000,
                    "z": 3
                  },
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "T": {
                          "description": "The exchange symbol that this item is traded under.",
                          "type": "string"
                        },
                        "c": {
                          "description": "A list of condition codes.",
                          "items": {
                            "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                            "type": "integer"
                          },
                          "type": "array",
                          "x-polygon-go-type": { "name": "[]*int32" }
                        },
                        "e": {
                          "description": "The trade correction indicator.",
                          "type": "integer"
                        },
                        "f": {
                          "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                          "type": "integer"
                        },
                        "i": {
                          "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.",
                          "type": "string"
                        },
                        "p": {
                          "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.",
                          "format": "double",
                          "type": "number"
                        },
                        "q": {
                          "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                          "format": "int64",
                          "type": "integer"
                        },
                        "r": {
                          "description": "The ID for the Trade Reporting Facility where the trade took place.",
                          "type": "integer"
                        },
                        "s": {
                          "description": "The size of a trade (also known as volume).",
                          "format": "double",
                          "type": "number"
                        },
                        "t": {
                          "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                          "type": "integer"
                        },
                        "x": {
                          "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                          "type": "integer"
                        },
                        "y": {
                          "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                          "type": "integer"
                        },
                        "z": {
                          "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-polygon-go-type": { "name": "LastTradeResult" }
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The last trade for this stock."
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": { "description": "The specified resource was not found" }
        },
        "summary": "Last Trade",
        "tags": ["stocks:last:trade"],
        "x-polygon-entitlement-allowed-timeframes": [
          { "description": "Real Time Data", "name": "realtime" },
          { "description": "15 minute delayed data", "name": "delayed" }
        ],
        "x-polygon-entitlement-data-type": {
          "description": "Trade data",
          "name": "trades"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/last/trade/{stocksTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/quotes/{stockTicker}",
        "templatedPath": "/v3/quotes/{stockTicker}",
        "path": "get_v3_quotes__stockticker",
        "entitlements": {
          "dataType": "nbbo",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": {
          "date": 1654056060000,
          "replaces": {
            "name": "Quotes (NBBO)",
            "path": "get_v2_ticks_stocks_nbbo__ticker___date"
          }
        },
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "ask_exchange": {
                    "description": "The ask exchange ID",
                    "type": "integer"
                  },
                  "ask_price": {
                    "description": "The ask price.",
                    "format": "double",
                    "type": "number"
                  },
                  "ask_size": {
                    "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                    "format": "double",
                    "type": "number"
                  },
                  "bid_exchange": {
                    "description": "The bid exchange ID",
                    "type": "integer"
                  },
                  "bid_price": {
                    "description": "The bid price.",
                    "format": "double",
                    "type": "number"
                  },
                  "bid_size": {
                    "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                    "format": "double",
                    "type": "number"
                  },
                  "conditions": {
                    "description": "A list of condition codes.",
                    "items": {
                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "indicators": {
                    "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                    "items": {
                      "description": "The indicator code.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "participant_timestamp": {
                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                    "format": "int64",
                    "type": "integer",
                    "x-polygon-go-type": {
                      "name": "INanoseconds",
                      "path": "github.com/polygon-io/ptime"
                    }
                  },
                  "sequence_number": {
                    "description": "The sequence number represents the sequence in which quote events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "sip_timestamp": {
                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this quote from the exchange which produced it.",
                    "format": "int64",
                    "type": "integer",
                    "x-polygon-go-type": {
                      "name": "INanoseconds",
                      "path": "github.com/polygon-io/ptime"
                    }
                  },
                  "tape": {
                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                    "format": "int32",
                    "type": "integer"
                  },
                  "trf_timestamp": {
                    "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this quote.",
                    "format": "int64",
                    "type": "integer",
                    "x-polygon-go-type": {
                      "name": "INanoseconds",
                      "path": "github.com/polygon-io/ptime"
                    }
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v3/quotes/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": [\n  {\n   \"ask_exchange\": 0,\n   \"ask_price\": 0,\n   \"ask_size\": 0,\n   \"bid_exchange\": 11,\n   \"bid_price\": 102.7,\n   \"bid_size\": 60,\n   \"conditions\": [\n    1\n   ],\n   \"participant_timestamp\": 1517562000065321200,\n   \"sequence_number\": 2060,\n   \"sip_timestamp\": 1517562000065700400,\n   \"tape\": 3\n  },\n  {\n   \"ask_exchange\": 0,\n   \"ask_price\": 0,\n   \"ask_size\": 0,\n   \"bid_exchange\": 11,\n   \"bid_price\": 170,\n   \"bid_size\": 2,\n   \"conditions\": [\n    1\n   ],\n   \"participant_timestamp\": 1517562000065408300,\n   \"sequence_number\": 2061,\n   \"sip_timestamp\": 1517562000065791500,\n   \"tape\": 3\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "Get NBBO quotes for a ticker symbol in a given time range.",
        "operationId": "Quotes",
        "parameters": [
          {
            "description": "The ticker symbol to get quotes for.",
            "example": "AAPL",
            "in": "path",
            "name": "stockTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          },
          {
            "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a nanosecond timestamp.",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 50000.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "example": 10,
              "maximum": 50000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "timestamp",
              "enum": ["timestamp"],
              "example": "timestamp",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v3/quotes/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                  "results": [
                    {
                      "ask_exchange": 0,
                      "ask_price": 0,
                      "ask_size": 0,
                      "bid_exchange": 11,
                      "bid_price": 102.7,
                      "bid_size": 60,
                      "conditions": [1],
                      "participant_timestamp": 1517562000065321200,
                      "sequence_number": 2060,
                      "sip_timestamp": 1517562000065700400,
                      "tape": 3
                    },
                    {
                      "ask_exchange": 0,
                      "ask_price": 0,
                      "ask_size": 0,
                      "bid_exchange": 11,
                      "bid_price": 170,
                      "bid_size": 2,
                      "conditions": [1],
                      "participant_timestamp": 1517562000065408300,
                      "sequence_number": 2061,
                      "sip_timestamp": 1517562000065791500,
                      "tape": 3
                    }
                  ],
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "results": {
                      "items": {
                        "properties": {
                          "ask_exchange": {
                            "description": "The ask exchange ID",
                            "type": "integer"
                          },
                          "ask_price": {
                            "description": "The ask price.",
                            "format": "double",
                            "type": "number"
                          },
                          "ask_size": {
                            "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                            "format": "double",
                            "type": "number"
                          },
                          "bid_exchange": {
                            "description": "The bid exchange ID",
                            "type": "integer"
                          },
                          "bid_price": {
                            "description": "The bid price.",
                            "format": "double",
                            "type": "number"
                          },
                          "bid_size": {
                            "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                            "format": "double",
                            "type": "number"
                          },
                          "conditions": {
                            "description": "A list of condition codes.",
                            "items": {
                              "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/stocks/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "indicators": {
                            "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                            "items": {
                              "description": "The indicator code.",
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": "array"
                          },
                          "participant_timestamp": {
                            "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                            "format": "int64",
                            "type": "integer",
                            "x-polygon-go-type": {
                              "name": "INanoseconds",
                              "path": "github.com/polygon-io/ptime"
                            }
                          },
                          "sequence_number": {
                            "description": "The sequence number represents the sequence in which quote events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11). Values reset after each trading session/day.",
                            "format": "int64",
                            "type": "integer"
                          },
                          "sip_timestamp": {
                            "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this quote from the exchange which produced it.",
                            "format": "int64",
                            "type": "integer",
                            "x-polygon-go-type": {
                              "name": "INanoseconds",
                              "path": "github.com/polygon-io/ptime"
                            }
                          },
                          "tape": {
                            "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                            "format": "int32",
                            "type": "integer"
                          },
                          "trf_timestamp": {
                            "description": "The nanosecond accuracy TRF (Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this quote.",
                            "format": "int64",
                            "type": "integer",
                            "x-polygon-go-type": {
                              "name": "INanoseconds",
                              "path": "github.com/polygon-io/ptime"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A list of quotes."
          }
        },
        "summary": "Quotes (NBBO)",
        "tags": ["stocks:quotes"],
        "x-polygon-entitlement-data-type": {
          "description": "NBBO data",
          "name": "nbbo"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "x-polygon-paginate": {
          "limit": { "max": 50000 },
          "order": { "default": "desc" },
          "sort": { "default": "timestamp", "enum": ["timestamp"] }
        },
        "x-polygon-replaces": {
          "date": 1654056060000,
          "replaces": {
            "name": "Quotes (NBBO)",
            "path": "get_v2_ticks_stocks_nbbo__ticker___date"
          }
        },
        "parameterTemplate": "{apiBase}/v3/quotes/{stockTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/ticks/stocks/nbbo/{ticker}/{date}",
        "templatedPath": "/v2/ticks/stocks/nbbo/{ticker}/{date}",
        "path": "get_v2_ticks_stocks_nbbo__ticker___date",
        "entitlements": {
          "dataType": "nbbo",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": {
          "date": 1654056060000,
          "replaces": {
            "name": "Quotes (NBBO) v3",
            "path": "get_v3_quotes__stockticker"
          }
        },
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "db_latency": {
              "description": "Latency in milliseconds for the query results from the database.",
              "type": "integer"
            },
            "results_count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "success": {
              "description": "Whether or not this query was executed successfully.",
              "type": "boolean"
            },
            "ticker": {
              "description": "The exchange symbol that this item is traded under.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "T": {
                    "description": "The exchange symbol that this item is traded under.",
                    "type": "string"
                  },
                  "f": {
                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                    "type": "integer"
                  },
                  "q": {
                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                    "format": "int64",
                    "type": "integer"
                  },
                  "t": {
                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                    "type": "integer"
                  },
                  "y": {
                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                    "type": "integer"
                  },
                  "P": {
                    "description": "The ask price.",
                    "format": "double",
                    "type": "number"
                  },
                  "S": {
                    "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                    "type": "integer"
                  },
                  "X": { "description": "Ask Exchange Id", "type": "integer" },
                  "c": {
                    "description": "A list of condition codes.\n",
                    "items": {
                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "i": {
                    "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                    "items": {
                      "description": "The indicator code.\n",
                      "type": "integer"
                    },
                    "type": "array"
                  },
                  "p": {
                    "description": "The bid price.",
                    "format": "double",
                    "type": "number"
                  },
                  "s": {
                    "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                    "type": "integer"
                  },
                  "x": { "description": "Bid Exchange Id", "type": "integer" },
                  "z": {
                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"db_latency\": 43,\n \"map\": {\n  \"P\": {\n   \"name\": \"ask_price\",\n   \"type\": \"float64\"\n  },\n  \"S\": {\n   \"name\": \"ask_size\",\n   \"type\": \"int\"\n  },\n  \"X\": {\n   \"name\": \"ask_exchange\",\n   \"type\": \"int\"\n  },\n  \"c\": {\n   \"name\": \"conditions\",\n   \"type\": \"int\"\n  },\n  \"f\": {\n   \"name\": \"trf_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"i\": {\n   \"name\": \"indicators\",\n   \"type\": \"int\"\n  },\n  \"p\": {\n   \"name\": \"bid_price\",\n   \"type\": \"float64\"\n  },\n  \"q\": {\n   \"name\": \"sequence_number\",\n   \"type\": \"int\"\n  },\n  \"s\": {\n   \"name\": \"bid_size\",\n   \"type\": \"int\"\n  },\n  \"t\": {\n   \"name\": \"sip_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"x\": {\n   \"name\": \"bid_exchange\",\n   \"type\": \"int\"\n  },\n  \"y\": {\n   \"name\": \"participant_timestamp\",\n   \"type\": \"int64\"\n  },\n  \"z\": {\n   \"name\": \"tape\",\n   \"type\": \"int\"\n  }\n },\n \"results\": [\n  {\n   \"P\": 0,\n   \"S\": 0,\n   \"X\": 0,\n   \"c\": [\n    1\n   ],\n   \"p\": 102.7,\n   \"q\": 2060,\n   \"s\": 60,\n   \"t\": 1517562000065700400,\n   \"x\": 11,\n   \"y\": 1517562000065321200,\n   \"z\": 3\n  },\n  {\n   \"P\": 0,\n   \"S\": 0,\n   \"X\": 0,\n   \"c\": [\n    1\n   ],\n   \"p\": 170,\n   \"q\": 2061,\n   \"s\": 2,\n   \"t\": 1517562000065791500,\n   \"x\": 11,\n   \"y\": 1517562000065408300,\n   \"z\": 3\n  }\n ],\n \"results_count\": 2,\n \"success\": true,\n \"ticker\": \"AAPL\"\n}",
        "description": "Get NBBO quotes for a given ticker symbol on a specified date.\n",
        "parameters": [
          {
            "description": "The ticker symbol we want quotes for.",
            "example": "AAPL",
            "in": "path",
            "name": "ticker",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "The date/day of the quotes to retrieve in the format YYYY-MM-DD.",
            "example": "2020-10-14",
            "in": "path",
            "name": "date",
            "required": true,
            "schema": { "format": "date", "type": "string" }
          },
          {
            "description": "The timestamp offset, used for pagination. This is the offset at which to start the results. Using the `timestamp` of the last result as the offset will give you the next page of results.\n",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "integer" }
          },
          {
            "description": "The maximum timestamp allowed in the results.\n",
            "in": "query",
            "name": "timestampLimit",
            "schema": { "type": "integer" }
          },
          {
            "description": "Reverse the order of the results.\n",
            "example": true,
            "in": "query",
            "name": "reverse",
            "schema": { "type": "boolean" }
          },
          {
            "description": "Limit the size of the response, max 50000 and default 5000.",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "db_latency": 43,
                  "map": {
                    "P": { "name": "ask_price", "type": "float64" },
                    "S": { "name": "ask_size", "type": "int" },
                    "X": { "name": "ask_exchange", "type": "int" },
                    "c": { "name": "conditions", "type": "int" },
                    "f": { "name": "trf_timestamp", "type": "int64" },
                    "i": { "name": "indicators", "type": "int" },
                    "p": { "name": "bid_price", "type": "float64" },
                    "q": { "name": "sequence_number", "type": "int" },
                    "s": { "name": "bid_size", "type": "int" },
                    "t": { "name": "sip_timestamp", "type": "int64" },
                    "x": { "name": "bid_exchange", "type": "int" },
                    "y": { "name": "participant_timestamp", "type": "int64" },
                    "z": { "name": "tape", "type": "int" }
                  },
                  "results": [
                    {
                      "P": 0,
                      "S": 0,
                      "X": 0,
                      "c": [1],
                      "p": 102.7,
                      "q": 2060,
                      "s": 60,
                      "t": 1517562000065700400,
                      "x": 11,
                      "y": 1517562000065321200,
                      "z": 3
                    },
                    {
                      "P": 0,
                      "S": 0,
                      "X": 0,
                      "c": [1],
                      "p": 170,
                      "q": 2061,
                      "s": 2,
                      "t": 1517562000065791500,
                      "x": 11,
                      "y": 1517562000065408300,
                      "z": 3
                    }
                  ],
                  "results_count": 2,
                  "success": true,
                  "ticker": "AAPL"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "db_latency": {
                          "description": "Latency in milliseconds for the query results from the database.",
                          "type": "integer"
                        },
                        "results_count": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "success": {
                          "description": "Whether or not this query was executed successfully.",
                          "type": "boolean"
                        },
                        "ticker": {
                          "description": "The exchange symbol that this item is traded under.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "results": {
                          "items": {
                            "allOf": [
                              {
                                "properties": {
                                  "T": {
                                    "description": "The exchange symbol that this item is traded under.",
                                    "type": "string"
                                  },
                                  "f": {
                                    "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                                    "type": "integer"
                                  },
                                  "q": {
                                    "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n",
                                    "format": "int64",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                                    "type": "integer"
                                  },
                                  "y": {
                                    "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "P": {
                                    "description": "The ask price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "S": {
                                    "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                                    "type": "integer"
                                  },
                                  "X": {
                                    "allOf": [
                                      {
                                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                        "type": "integer"
                                      },
                                      { "description": "Ask Exchange Id" }
                                    ]
                                  },
                                  "c": {
                                    "description": "A list of condition codes.\n",
                                    "items": {
                                      "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.\n",
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "i": {
                                    "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                                    "items": {
                                      "description": "The indicator code.\n",
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "p": {
                                    "description": "The bid price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "s": {
                                    "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                                    "type": "integer"
                                  },
                                  "x": {
                                    "allOf": [
                                      {
                                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                        "type": "integer"
                                      },
                                      { "description": "Bid Exchange Id" }
                                    ]
                                  },
                                  "z": {
                                    "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ\n",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "A list of quotes."
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Quotes (NBBO)",
        "tags": ["stocks:quotes"],
        "x-polygon-deprecation": {
          "date": 1654056060000,
          "replaces": {
            "name": "Quotes (NBBO) v3",
            "path": "get_v3_quotes__stockticker"
          }
        },
        "x-polygon-entitlement-data-type": {
          "description": "NBBO data",
          "name": "nbbo"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/ticks/stocks/nbbo/{ticker}/{date}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/last/nbbo/{stocksTicker}",
        "templatedPath": "/v2/last/nbbo/{stocksTicker}",
        "path": "get_v2_last_nbbo__stocksticker",
        "entitlements": {
          "dataType": "nbbo",
          "market": "stocks",
          "timeframes": ["realtime", "delayed"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "properties": {
                "P": {
                  "description": "The ask price.",
                  "format": "double",
                  "type": "number"
                },
                "S": {
                  "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                  "type": "integer"
                },
                "T": {
                  "description": "The exchange symbol that this item is traded under.",
                  "type": "string"
                },
                "X": {
                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                  "type": "integer"
                },
                "c": {
                  "description": "A list of condition codes.",
                  "items": {
                    "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                    "type": "integer"
                  },
                  "type": "array",
                  "x-polygon-go-type": { "name": "[]*int32" }
                },
                "f": {
                  "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                  "type": "integer"
                },
                "i": {
                  "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                  "items": {
                    "description": "The indicator code.",
                    "type": "integer"
                  },
                  "type": "array"
                },
                "p": {
                  "description": "The bid price.",
                  "format": "double",
                  "type": "number"
                },
                "q": {
                  "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                  "format": "int64",
                  "type": "integer"
                },
                "s": {
                  "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                  "type": "integer"
                },
                "t": {
                  "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                  "type": "integer"
                },
                "x": {
                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                  "type": "integer"
                },
                "y": {
                  "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                  "type": "integer"
                },
                "z": {
                  "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-polygon-go-type": { "name": "LastQuoteResult" }
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"request_id\": \"b84e24636301f19f88e0dfbf9a45ed5c\",\n \"results\": {\n  \"P\": 127.98,\n  \"S\": 7,\n  \"T\": \"AAPL\",\n  \"X\": 19,\n  \"p\": 127.96,\n  \"q\": 83480742,\n  \"s\": 1,\n  \"t\": 1617827221349730300,\n  \"x\": 11,\n  \"y\": 1617827221349366000,\n  \"z\": 3\n },\n \"status\": \"OK\"\n}",
        "description": "Get the most recent NBBO (Quote) tick for a given stock.",
        "operationId": "LastQuote",
        "parameters": [
          {
            "description": "The ticker symbol of the stock/equity.",
            "example": "AAPL",
            "in": "path",
            "name": "stocksTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "request_id": "b84e24636301f19f88e0dfbf9a45ed5c",
                  "results": {
                    "P": 127.98,
                    "S": 7,
                    "T": "AAPL",
                    "X": 19,
                    "p": 127.96,
                    "q": 83480742,
                    "s": 1,
                    "t": 1617827221349730300,
                    "x": 11,
                    "y": 1617827221349366000,
                    "z": 3
                  },
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "P": {
                          "description": "The ask price.",
                          "format": "double",
                          "type": "number"
                        },
                        "S": {
                          "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.",
                          "type": "integer"
                        },
                        "T": {
                          "description": "The exchange symbol that this item is traded under.",
                          "type": "string"
                        },
                        "X": {
                          "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                          "type": "integer"
                        },
                        "c": {
                          "description": "A list of condition codes.",
                          "items": {
                            "description": "The condition code. These are the conditions of this message. See\n[Condition Mappings](https://polygon.io/docs/get_v3_reference_conditions)\nfor a mapping to exchange conditions.",
                            "type": "integer"
                          },
                          "type": "array",
                          "x-polygon-go-type": { "name": "[]*int32" }
                        },
                        "f": {
                          "description": "The nanosecond accuracy TRF(Trade Reporting Facility) Unix Timestamp. This is the timestamp of when the trade reporting facility received this message.",
                          "type": "integer"
                        },
                        "i": {
                          "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).",
                          "items": {
                            "description": "The indicator code.",
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "p": {
                          "description": "The bid price.",
                          "format": "double",
                          "type": "number"
                        },
                        "q": {
                          "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).",
                          "format": "int64",
                          "type": "integer"
                        },
                        "s": {
                          "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.",
                          "type": "integer"
                        },
                        "t": {
                          "description": "The nanosecond accuracy SIP Unix Timestamp. This is the timestamp of when the SIP received this message from the exchange which produced it.",
                          "type": "integer"
                        },
                        "x": {
                          "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                          "type": "integer"
                        },
                        "y": {
                          "description": "The nanosecond accuracy Participant/Exchange Unix Timestamp. This is the timestamp of when the quote was actually generated at the exchange.",
                          "type": "integer"
                        },
                        "z": {
                          "description": "There are 3 tapes which define which exchange the ticker is listed on. These are integers in our objects which represent the letter of the alphabet. Eg: 1 = A, 2 = B, 3 = C.\n* Tape A is NYSE listed securities\n* Tape B is NYSE ARCA / NYSE American\n* Tape C is NASDAQ",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-polygon-go-type": { "name": "LastQuoteResult" }
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "The last NBBO tick for this stock."
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": { "description": "The specified resource was not found" }
        },
        "summary": "Last Quote",
        "tags": ["stocks:last:quote"],
        "x-polygon-entitlement-allowed-timeframes": [
          { "description": "Real Time Data", "name": "realtime" },
          { "description": "15 minute delayed data", "name": "delayed" }
        ],
        "x-polygon-entitlement-data-type": {
          "description": "NBBO data",
          "name": "nbbo"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/last/nbbo/{stocksTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/snapshot/locale/us/markets/stocks/tickers",
        "templatedPath": "/v2/snapshot/locale/us/markets/stocks/tickers",
        "path": "get_v2_snapshot_locale_us_markets_stocks_tickers",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": ["realtime", "delayed"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "tickers": {
              "items": {
                "properties": {
                  "day": {
                    "description": "The most recent daily bar for this ticker.",
                    "properties": {
                      "c": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "h": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "l": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "o": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "v": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "vw": {
                        "description": "The volume weighted average price.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "lastQuote": {
                    "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                    "properties": {
                      "P": {
                        "description": "The ask price.",
                        "format": "double",
                        "type": "number"
                      },
                      "S": {
                        "description": "The ask size in lots.",
                        "type": "integer"
                      },
                      "p": {
                        "description": "The bid price.",
                        "format": "double",
                        "type": "number"
                      },
                      "s": {
                        "description": "The bid size in lots.",
                        "type": "integer"
                      },
                      "t": {
                        "description": "The Unix Msec timestamp for the start of the aggregate window.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "lastTrade": {
                    "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                    "properties": {
                      "c": {
                        "description": "The trade conditions.",
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "i": {
                        "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                        "type": "string"
                      },
                      "p": {
                        "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                        "format": "double",
                        "type": "number"
                      },
                      "s": {
                        "description": "The size (volume) of the trade.",
                        "type": "integer"
                      },
                      "t": {
                        "description": "The Unix Msec timestamp for the start of the aggregate window.",
                        "type": "integer"
                      },
                      "x": {
                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "min": {
                    "description": "The most recent minute bar for this ticker.",
                    "properties": {
                      "av": {
                        "description": "The accumulated volume.",
                        "type": "integer"
                      },
                      "c": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "h": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "l": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "o": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "v": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "vw": {
                        "description": "The volume weighted average price.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "prevDay": {
                    "description": "The previous day's bar for this ticker.",
                    "properties": {
                      "c": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "h": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "l": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "o": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "v": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "vw": {
                        "description": "The volume weighted average price.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "ticker": {
                    "description": "The exchange symbol that this item is traded under.",
                    "type": "string"
                  },
                  "todaysChange": {
                    "description": "The value of the change the from previous day.",
                    "format": "double",
                    "type": "number"
                  },
                  "todaysChangePerc": {
                    "description": "The percentage change since the previous day.",
                    "format": "double",
                    "type": "number"
                  },
                  "updated": {
                    "description": "The last updated timestamp.",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"count\": 1,\n \"status\": \"OK\",\n \"tickers\": [\n  {\n   \"day\": {\n    \"c\": 20.506,\n    \"h\": 20.64,\n    \"l\": 20.506,\n    \"o\": 20.64,\n    \"v\": 37216,\n    \"vw\": 20.616\n   },\n   \"lastQuote\": {\n    \"P\": 20.6,\n    \"S\": 22,\n    \"p\": 20.5,\n    \"s\": 13,\n    \"t\": 1605192959994246100\n   },\n   \"lastTrade\": {\n    \"c\": [\n     14,\n     41\n    ],\n    \"i\": \"71675577320245\",\n    \"p\": 20.506,\n    \"s\": 2416,\n    \"t\": 1605192894630916600,\n    \"x\": 4\n   },\n   \"min\": {\n    \"av\": 37216,\n    \"c\": 20.506,\n    \"h\": 20.506,\n    \"l\": 20.506,\n    \"o\": 20.506,\n    \"v\": 5000,\n    \"vw\": 20.5105\n   },\n   \"prevDay\": {\n    \"c\": 20.63,\n    \"h\": 21,\n    \"l\": 20.5,\n    \"o\": 20.79,\n    \"v\": 292738,\n    \"vw\": 20.6939\n   },\n   \"ticker\": \"BCAT\",\n   \"todaysChange\": -0.124,\n   \"todaysChangePerc\": -0.601,\n   \"updated\": 1605192894630916600\n  }\n ]\n}",
        "description": "Get the most up-to-date market data for all traded stock symbols.\n<br />\n<br />\nNote: Snapshot data is cleared at 3:30am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
        "parameters": [
          {
            "description": "A comma separated list of tickers to get snapshots for.",
            "in": "query",
            "name": "tickers",
            "schema": { "items": { "type": "string" }, "type": "array" }
          },
          {
            "description": "Include OTC securities in the response. Default is false (don't include OTC securities).\n",
            "in": "query",
            "name": "include_otc",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "count": 1,
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 20.506,
                        "h": 20.64,
                        "l": 20.506,
                        "o": 20.64,
                        "v": 37216,
                        "vw": 20.616
                      },
                      "lastQuote": {
                        "P": 20.6,
                        "S": 22,
                        "p": 20.5,
                        "s": 13,
                        "t": 1605192959994246100
                      },
                      "lastTrade": {
                        "c": [14, 41],
                        "i": "71675577320245",
                        "p": 20.506,
                        "s": 2416,
                        "t": 1605192894630916600,
                        "x": 4
                      },
                      "min": {
                        "av": 37216,
                        "c": 20.506,
                        "h": 20.506,
                        "l": 20.506,
                        "o": 20.506,
                        "v": 5000,
                        "vw": 20.5105
                      },
                      "prevDay": {
                        "c": 20.63,
                        "h": 21,
                        "l": 20.5,
                        "o": 20.79,
                        "v": 292738,
                        "vw": 20.6939
                      },
                      "ticker": "BCAT",
                      "todaysChange": -0.124,
                      "todaysChangePerc": -0.601,
                      "updated": 1605192894630916600
                    }
                  ]
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "count": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "tickers": {
                          "items": {
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "double",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "lastQuote": {
                                "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                "properties": {
                                  "P": {
                                    "description": "The ask price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "S": {
                                    "description": "The ask size in lots.",
                                    "type": "integer"
                                  },
                                  "p": {
                                    "description": "The bid price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "s": {
                                    "description": "The bid size in lots.",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "lastTrade": {
                                "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                "properties": {
                                  "c": {
                                    "description": "The trade conditions.",
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "i": {
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                    "type": "string"
                                  },
                                  "p": {
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "s": {
                                    "description": "The size (volume) of the trade.",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "type": "integer"
                                  },
                                  "x": {
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "properties": {
                                  "av": {
                                    "description": "The accumulated volume.",
                                    "type": "integer"
                                  },
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "double",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "double",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "ticker": {
                                "description": "The exchange symbol that this item is traded under.",
                                "type": "string"
                              },
                              "todaysChange": {
                                "description": "The value of the change the from previous day.",
                                "format": "double",
                                "type": "number"
                              },
                              "todaysChangePerc": {
                                "description": "The percentage change since the previous day.",
                                "format": "double",
                                "type": "number"
                              },
                              "updated": {
                                "description": "The last updated timestamp.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Get current state for all tickers"
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "All Tickers",
        "tags": ["stocks:snapshot"],
        "x-polygon-entitlement-allowed-timeframes": [
          { "description": "Real Time Data", "name": "realtime" },
          { "description": "15 minute delayed data", "name": "delayed" }
        ],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/snapshot/locale/us/markets/stocks/tickers?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/snapshot/locale/us/markets/stocks/{direction}",
        "templatedPath": "/v2/snapshot/locale/us/markets/stocks/{direction}",
        "path": "get_v2_snapshot_locale_us_markets_stocks__direction",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": ["realtime", "delayed"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "tickers": {
              "items": {
                "properties": {
                  "day": {
                    "description": "The most recent daily bar for this ticker.",
                    "properties": {
                      "c": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "h": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "l": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "o": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "v": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "vw": {
                        "description": "The volume weighted average price.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "lastQuote": {
                    "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                    "properties": {
                      "P": {
                        "description": "The ask price.",
                        "format": "double",
                        "type": "number"
                      },
                      "S": {
                        "description": "The ask size in lots.",
                        "type": "integer"
                      },
                      "p": {
                        "description": "The bid price.",
                        "format": "double",
                        "type": "number"
                      },
                      "s": {
                        "description": "The bid size in lots.",
                        "type": "integer"
                      },
                      "t": {
                        "description": "The Unix Msec timestamp for the start of the aggregate window.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "lastTrade": {
                    "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                    "properties": {
                      "c": {
                        "description": "The trade conditions.",
                        "items": { "type": "string" },
                        "type": "array"
                      },
                      "i": {
                        "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                        "type": "string"
                      },
                      "p": {
                        "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                        "format": "double",
                        "type": "number"
                      },
                      "s": {
                        "description": "The size (volume) of the trade.",
                        "type": "integer"
                      },
                      "t": {
                        "description": "The Unix Msec timestamp for the start of the aggregate window.",
                        "type": "integer"
                      },
                      "x": {
                        "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "min": {
                    "description": "The most recent minute bar for this ticker.",
                    "properties": {
                      "av": {
                        "description": "The accumulated volume.",
                        "type": "integer"
                      },
                      "c": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "h": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "l": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "o": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "v": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "vw": {
                        "description": "The volume weighted average price.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "prevDay": {
                    "description": "The previous day's bar for this ticker.",
                    "properties": {
                      "c": {
                        "description": "The close price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "h": {
                        "description": "The highest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "l": {
                        "description": "The lowest price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "o": {
                        "description": "The open price for the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "otc": {
                        "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                        "type": "boolean"
                      },
                      "v": {
                        "description": "The trading volume of the symbol in the given time period.",
                        "format": "double",
                        "type": "number"
                      },
                      "vw": {
                        "description": "The volume weighted average price.",
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "ticker": {
                    "description": "The exchange symbol that this item is traded under.",
                    "type": "string"
                  },
                  "todaysChange": {
                    "description": "The value of the change the from previous day.",
                    "format": "double",
                    "type": "number"
                  },
                  "todaysChangePerc": {
                    "description": "The percentage change since the previous day.",
                    "format": "double",
                    "type": "number"
                  },
                  "updated": {
                    "description": "The last updated timestamp.",
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "example": "{\n \"status\": \"OK\",\n \"tickers\": [\n  {\n   \"day\": {\n    \"c\": 14.2284,\n    \"h\": 15.09,\n    \"l\": 14.2,\n    \"o\": 14.33,\n    \"v\": 133963,\n    \"vw\": 14.5311\n   },\n   \"lastQuote\": {\n    \"P\": 14.44,\n    \"S\": 11,\n    \"p\": 14.2,\n    \"s\": 25,\n    \"t\": 1605195929997325600\n   },\n   \"lastTrade\": {\n    \"c\": [\n     63\n    ],\n    \"i\": \"79372124707124\",\n    \"p\": 14.2284,\n    \"s\": 536,\n    \"t\": 1605195848258266000,\n    \"x\": 4\n   },\n   \"min\": {\n    \"av\": 133963,\n    \"c\": 14.2284,\n    \"h\": 14.325,\n    \"l\": 14.2,\n    \"o\": 14.28,\n    \"v\": 6108,\n    \"vw\": 14.2426\n   },\n   \"prevDay\": {\n    \"c\": 0.73,\n    \"h\": 0.799,\n    \"l\": 0.73,\n    \"o\": 0.75,\n    \"v\": 1568097,\n    \"vw\": 0.7721\n   },\n   \"ticker\": \"PDS\",\n   \"todaysChange\": 13.498,\n   \"todaysChangePerc\": 1849.096,\n   \"updated\": 1605195848258266000\n  }\n ]\n}",
        "description": "Get the most up-to-date market data for the current top 20 gainers or losers of the day in the stocks/equities markets.\n<br />\n<br />\nTop gainers are those tickers whose price has increased by the highest percentage since the previous day's close.\nTop losers are those tickers whose price has decreased by the highest percentage since the previous day's close.\n<br />\n<br />\nNote: Snapshot data is cleared at 3:30am EST and gets populated as data is received from the exchanges.\n",
        "parameters": [
          {
            "description": "The direction of the snapshot results to return.\n",
            "example": "gainers",
            "in": "path",
            "name": "direction",
            "required": true,
            "schema": { "enum": ["gainers", "losers"], "type": "string" }
          },
          {
            "description": "Include OTC securities in the response. Default is false (don't include OTC securities).\n",
            "in": "query",
            "name": "include_otc",
            "schema": { "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "status": "OK",
                  "tickers": [
                    {
                      "day": {
                        "c": 14.2284,
                        "h": 15.09,
                        "l": 14.2,
                        "o": 14.33,
                        "v": 133963,
                        "vw": 14.5311
                      },
                      "lastQuote": {
                        "P": 14.44,
                        "S": 11,
                        "p": 14.2,
                        "s": 25,
                        "t": 1605195929997325600
                      },
                      "lastTrade": {
                        "c": [63],
                        "i": "79372124707124",
                        "p": 14.2284,
                        "s": 536,
                        "t": 1605195848258266000,
                        "x": 4
                      },
                      "min": {
                        "av": 133963,
                        "c": 14.2284,
                        "h": 14.325,
                        "l": 14.2,
                        "o": 14.28,
                        "v": 6108,
                        "vw": 14.2426
                      },
                      "prevDay": {
                        "c": 0.73,
                        "h": 0.799,
                        "l": 0.73,
                        "o": 0.75,
                        "v": 1568097,
                        "vw": 0.7721
                      },
                      "ticker": "PDS",
                      "todaysChange": 13.498,
                      "todaysChangePerc": 1849.096,
                      "updated": 1605195848258266000
                    }
                  ]
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "tickers": {
                          "items": {
                            "properties": {
                              "day": {
                                "description": "The most recent daily bar for this ticker.",
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "double",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "lastQuote": {
                                "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                                "properties": {
                                  "P": {
                                    "description": "The ask price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "S": {
                                    "description": "The ask size in lots.",
                                    "type": "integer"
                                  },
                                  "p": {
                                    "description": "The bid price.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "s": {
                                    "description": "The bid size in lots.",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "lastTrade": {
                                "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                                "properties": {
                                  "c": {
                                    "description": "The trade conditions.",
                                    "items": { "type": "string" },
                                    "type": "array"
                                  },
                                  "i": {
                                    "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                    "type": "string"
                                  },
                                  "p": {
                                    "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "s": {
                                    "description": "The size (volume) of the trade.",
                                    "type": "integer"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "type": "integer"
                                  },
                                  "x": {
                                    "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "min": {
                                "description": "The most recent minute bar for this ticker.",
                                "properties": {
                                  "av": {
                                    "description": "The accumulated volume.",
                                    "type": "integer"
                                  },
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "double",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "prevDay": {
                                "description": "The previous day's bar for this ticker.",
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "double",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "double",
                                    "type": "number"
                                  }
                                },
                                "type": "object"
                              },
                              "ticker": {
                                "description": "The exchange symbol that this item is traded under.",
                                "type": "string"
                              },
                              "todaysChange": {
                                "description": "The value of the change the from previous day.",
                                "format": "double",
                                "type": "number"
                              },
                              "todaysChangePerc": {
                                "description": "The percentage change since the previous day.",
                                "format": "double",
                                "type": "number"
                              },
                              "updated": {
                                "description": "The last updated timestamp.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Get the current tickers of the day"
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Gainers/Losers",
        "tags": ["stocks:snapshot"],
        "x-polygon-entitlement-allowed-timeframes": [
          { "description": "Real Time Data", "name": "realtime" },
          { "description": "15 minute delayed data", "name": "delayed" }
        ],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/snapshot/locale/us/markets/stocks/{direction}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}",
        "templatedPath": "/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}",
        "path": "get_v2_snapshot_locale_us_markets_stocks_tickers__stocksticker",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": ["realtime", "delayed"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "ticker": {
              "properties": {
                "day": {
                  "description": "The most recent daily bar for this ticker.",
                  "properties": {
                    "c": {
                      "description": "The close price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "h": {
                      "description": "The highest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "l": {
                      "description": "The lowest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "o": {
                      "description": "The open price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "otc": {
                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                      "type": "boolean"
                    },
                    "v": {
                      "description": "The trading volume of the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "vw": {
                      "description": "The volume weighted average price.",
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "lastQuote": {
                  "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                  "properties": {
                    "P": {
                      "description": "The ask price.",
                      "format": "double",
                      "type": "number"
                    },
                    "S": {
                      "description": "The ask size in lots.",
                      "type": "integer"
                    },
                    "p": {
                      "description": "The bid price.",
                      "format": "double",
                      "type": "number"
                    },
                    "s": {
                      "description": "The bid size in lots.",
                      "type": "integer"
                    },
                    "t": {
                      "description": "The Unix Msec timestamp for the start of the aggregate window.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "lastTrade": {
                  "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                  "properties": {
                    "c": {
                      "description": "The trade conditions.",
                      "items": { "type": "string" },
                      "type": "array"
                    },
                    "i": {
                      "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                      "type": "string"
                    },
                    "p": {
                      "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                      "format": "double",
                      "type": "number"
                    },
                    "s": {
                      "description": "The size (volume) of the trade.",
                      "type": "integer"
                    },
                    "t": {
                      "description": "The Unix Msec timestamp for the start of the aggregate window.",
                      "type": "integer"
                    },
                    "x": {
                      "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "min": {
                  "description": "The most recent minute bar for this ticker.",
                  "properties": {
                    "av": {
                      "description": "The accumulated volume.",
                      "type": "integer"
                    },
                    "c": {
                      "description": "The close price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "h": {
                      "description": "The highest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "l": {
                      "description": "The lowest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "o": {
                      "description": "The open price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "otc": {
                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                      "type": "boolean"
                    },
                    "v": {
                      "description": "The trading volume of the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "vw": {
                      "description": "The volume weighted average price.",
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "prevDay": {
                  "description": "The previous day's bar for this ticker.",
                  "properties": {
                    "c": {
                      "description": "The close price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "h": {
                      "description": "The highest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "l": {
                      "description": "The lowest price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "o": {
                      "description": "The open price for the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "otc": {
                      "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                      "type": "boolean"
                    },
                    "v": {
                      "description": "The trading volume of the symbol in the given time period.",
                      "format": "double",
                      "type": "number"
                    },
                    "vw": {
                      "description": "The volume weighted average price.",
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "ticker": {
                  "description": "The exchange symbol that this item is traded under.",
                  "type": "string"
                },
                "todaysChange": {
                  "description": "The value of the change the from previous day.",
                  "format": "double",
                  "type": "number"
                },
                "todaysChangePerc": {
                  "description": "The percentage change since the previous day.",
                  "format": "double",
                  "type": "number"
                },
                "updated": {
                  "description": "The last updated timestamp.",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "example": "{\n \"request_id\": \"657e430f1ae768891f018e08e03598d8\",\n \"status\": \"OK\",\n \"ticker\": {\n  \"day\": {\n   \"c\": 120.4229,\n   \"h\": 120.53,\n   \"l\": 118.81,\n   \"o\": 119.62,\n   \"v\": 28727868,\n   \"vw\": 119.725\n  },\n  \"lastQuote\": {\n   \"P\": 120.47,\n   \"S\": 4,\n   \"p\": 120.46,\n   \"s\": 8,\n   \"t\": 1605195918507251700\n  },\n  \"lastTrade\": {\n   \"c\": [\n    14,\n    41\n   ],\n   \"i\": \"4046\",\n   \"p\": 120.47,\n   \"s\": 236,\n   \"t\": 1605195918306274000,\n   \"x\": 10\n  },\n  \"min\": {\n   \"av\": 28724441,\n   \"c\": 120.4201,\n   \"h\": 120.468,\n   \"l\": 120.37,\n   \"o\": 120.435,\n   \"v\": 270796,\n   \"vw\": 120.4129\n  },\n  \"prevDay\": {\n   \"c\": 119.49,\n   \"h\": 119.63,\n   \"l\": 116.44,\n   \"o\": 117.19,\n   \"v\": 110597265,\n   \"vw\": 118.4998\n  },\n  \"ticker\": \"AAPL\",\n  \"todaysChange\": 0.98,\n  \"todaysChangePerc\": 0.82,\n  \"updated\": 1605195918306274000\n }\n}",
        "description": "Get the most up-to-date market data for a single traded stock ticker.\n<br />\n<br />\nNote: Snapshot data is cleared at 3:30am EST and gets populated as data is received from the exchanges. This can happen as early as 4am EST.\n",
        "parameters": [
          {
            "description": "The ticker symbol of the stock/equity.",
            "example": "AAPL",
            "in": "path",
            "name": "stocksTicker",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "request_id": "657e430f1ae768891f018e08e03598d8",
                  "status": "OK",
                  "ticker": {
                    "day": {
                      "c": 120.4229,
                      "h": 120.53,
                      "l": 118.81,
                      "o": 119.62,
                      "v": 28727868,
                      "vw": 119.725
                    },
                    "lastQuote": {
                      "P": 120.47,
                      "S": 4,
                      "p": 120.46,
                      "s": 8,
                      "t": 1605195918507251700
                    },
                    "lastTrade": {
                      "c": [14, 41],
                      "i": "4046",
                      "p": 120.47,
                      "s": 236,
                      "t": 1605195918306274000,
                      "x": 10
                    },
                    "min": {
                      "av": 28724441,
                      "c": 120.4201,
                      "h": 120.468,
                      "l": 120.37,
                      "o": 120.435,
                      "v": 270796,
                      "vw": 120.4129
                    },
                    "prevDay": {
                      "c": 119.49,
                      "h": 119.63,
                      "l": 116.44,
                      "o": 117.19,
                      "v": 110597265,
                      "vw": 118.4998
                    },
                    "ticker": "AAPL",
                    "todaysChange": 0.98,
                    "todaysChangePerc": 0.82,
                    "updated": 1605195918306274000
                  }
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "request_id": {
                          "description": "A request id assigned by the server.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "ticker": {
                          "properties": {
                            "day": {
                              "description": "The most recent daily bar for this ticker.",
                              "properties": {
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "lastQuote": {
                              "description": "The most recent quote for this ticker.  This is only returned if your current plan includes quotes.",
                              "properties": {
                                "P": {
                                  "description": "The ask price.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "S": {
                                  "description": "The ask size in lots.",
                                  "type": "integer"
                                },
                                "p": {
                                  "description": "The bid price.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "s": {
                                  "description": "The bid size in lots.",
                                  "type": "integer"
                                },
                                "t": {
                                  "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "lastTrade": {
                              "description": "The most recent trade for this ticker.  This is only returned if your current plan includes trades.",
                              "properties": {
                                "c": {
                                  "description": "The trade conditions.",
                                  "items": { "type": "string" },
                                  "type": "array"
                                },
                                "i": {
                                  "description": "The Trade ID which uniquely identifies a trade. These are unique per\ncombination of ticker, exchange, and TRF. For example: A trade for AAPL\nexecuted on NYSE and a trade for AAPL executed on NASDAQ could potentially\nhave the same Trade ID.\n",
                                  "type": "string"
                                },
                                "p": {
                                  "description": "The price of the trade. This is the actual dollar value per whole share of\nthis trade. A trade of 100 shares with a price of $2.00 would be worth a\ntotal dollar value of $200.00.\n",
                                  "format": "double",
                                  "type": "number"
                                },
                                "s": {
                                  "description": "The size (volume) of the trade.",
                                  "type": "integer"
                                },
                                "t": {
                                  "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                  "type": "integer"
                                },
                                "x": {
                                  "description": "The exchange ID. See <a href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.",
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "min": {
                              "description": "The most recent minute bar for this ticker.",
                              "properties": {
                                "av": {
                                  "description": "The accumulated volume.",
                                  "type": "integer"
                                },
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "prevDay": {
                              "description": "The previous day's bar for this ticker.",
                              "properties": {
                                "c": {
                                  "description": "The close price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "h": {
                                  "description": "The highest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "l": {
                                  "description": "The lowest price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "o": {
                                  "description": "The open price for the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "otc": {
                                  "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                  "type": "boolean"
                                },
                                "v": {
                                  "description": "The trading volume of the symbol in the given time period.",
                                  "format": "double",
                                  "type": "number"
                                },
                                "vw": {
                                  "description": "The volume weighted average price.",
                                  "format": "double",
                                  "type": "number"
                                }
                              },
                              "type": "object"
                            },
                            "ticker": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "todaysChange": {
                              "description": "The value of the change the from previous day.",
                              "format": "double",
                              "type": "number"
                            },
                            "todaysChangePerc": {
                              "description": "The percentage change since the previous day.",
                              "format": "double",
                              "type": "number"
                            },
                            "updated": {
                              "description": "The last updated timestamp.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Get current state for a ticker"
          },
          "default": { "description": "Unexpected error" }
        },
        "summary": "Ticker",
        "tags": ["stocks:snapshot"],
        "x-polygon-entitlement-allowed-timeframes": [
          { "description": "Real Time Data", "name": "realtime" },
          { "description": "15 minute delayed data", "name": "delayed" }
        ],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v2/snapshot/locale/us/markets/stocks/tickers/{stocksTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/indicators/sma/{stockTicker}",
        "templatedPath": "/v1/indicators/sma/{stockTicker}",
        "path": "get_v1_indicators_sma__stockticker",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "properties": {
                "underlying": {
                  "properties": {
                    "aggregates": {
                      "items": {
                        "properties": {
                          "c": {
                            "description": "The close price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "h": {
                            "description": "The highest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "l": {
                            "description": "The lowest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "n": {
                            "description": "The number of transactions in the aggregate window.",
                            "type": "integer"
                          },
                          "o": {
                            "description": "The open price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "otc": {
                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                            "type": "boolean"
                          },
                          "t": {
                            "description": "The Unix Msec timestamp for the start of the aggregate window.",
                            "format": "float",
                            "type": "number"
                          },
                          "v": {
                            "description": "The trading volume of the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "vw": {
                            "description": "The volume weighted average price.",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "required": ["v", "vw", "o", "c", "h", "l", "t", "n"],
                        "type": "object",
                        "x-polygon-go-type": {
                          "name": "Aggregate",
                          "path": "github.com/polygon-io/go-lib-models/v2/globals"
                        }
                      },
                      "type": "array"
                    },
                    "url": {
                      "description": "The URL which can be used to request the underlying aggregates used in this request.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "values": {
                  "items": {
                    "properties": {
                      "timestamp": {
                        "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                        "format": "int64",
                        "type": "integer",
                        "x-polygon-go-type": {
                          "name": "IMicroseconds",
                          "path": "github.com/polygon-io/ptime"
                        }
                      },
                      "value": {
                        "description": "The indicator value for this period.",
                        "format": "float",
                        "type": "number",
                        "x-polygon-go-type": { "name": "*float64" }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "x-polygon-go-type": { "name": "SMAResults" }
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/sma/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"aggregates\": [\n    {\n     \"c\": 75.0875,\n     \"h\": 75.15,\n     \"l\": 73.7975,\n     \"n\": 1,\n     \"o\": 74.06,\n     \"t\": 1577941200000,\n     \"v\": 135647456,\n     \"vw\": 74.6099\n    },\n    {\n     \"c\": 74.3575,\n     \"h\": 75.145,\n     \"l\": 74.125,\n     \"n\": 1,\n     \"o\": 74.2875,\n     \"t\": 1578027600000,\n     \"v\": 146535512,\n     \"vw\": 74.7026\n    }\n   ],\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"timestamp\": 1517562000016,\n    \"value\": 140.139\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
        "description": "Get the simple moving average (SMA) for a ticker symbol over a given time range.",
        "operationId": "SMA",
        "parameters": [
          {
            "description": "The ticker symbol for which to get simple moving average (SMA) data.",
            "example": "AAPL",
            "in": "path",
            "name": "stockTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          },
          {
            "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "The size of the aggregate time window.",
            "example": "day",
            "in": "query",
            "name": "timespan",
            "schema": {
              "default": "day",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether or not the aggregates used to calculate the simple moving average are adjusted for splits. By default, aggregates are adjusted.\nSet this to false to get results that are NOT adjusted for splits.",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "default": true, "type": "boolean" }
          },
          {
            "description": "The window size used to calculate the simple moving average (SMA). i.e. a window size of 10 with daily aggregates would result in a 10 day moving average.",
            "example": 50,
            "in": "query",
            "name": "window",
            "schema": { "default": 50, "type": "integer" }
          },
          {
            "description": "The price in the aggregate which will be used to calculate the simple moving average. i.e. 'close' will result in using close prices to \ncalculate the simple moving average (SMA).",
            "example": "close",
            "in": "query",
            "name": "series_type",
            "schema": {
              "default": "close",
              "enum": ["open", "high", "low", "close"],
              "type": "string"
            }
          },
          {
            "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
            "in": "query",
            "name": "expand_underlying",
            "schema": { "default": false, "type": "boolean" }
          },
          {
            "description": "The order in which to return the results, ordered by timestamp.",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 5000",
            "in": "query",
            "name": "limit",
            "schema": { "default": 10, "maximum": 5000, "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v1/indicators/sma/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                  "results": {
                    "underlying": {
                      "aggregates": [
                        {
                          "c": 75.0875,
                          "h": 75.15,
                          "l": 73.7975,
                          "n": 1,
                          "o": 74.06,
                          "t": 1577941200000,
                          "v": 135647456,
                          "vw": 74.6099
                        },
                        {
                          "c": 74.3575,
                          "h": 75.145,
                          "l": 74.125,
                          "n": 1,
                          "o": 74.2875,
                          "t": 1578027600000,
                          "v": 146535512,
                          "vw": 74.7026
                        }
                      ],
                      "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                    },
                    "values": [{ "timestamp": 1517562000016, "value": 140.139 }]
                  },
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "underlying": {
                          "properties": {
                            "aggregates": {
                              "items": {
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "n": {
                                    "description": "The number of transactions in the aggregate window.",
                                    "type": "integer"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "float",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "v",
                                  "vw",
                                  "o",
                                  "c",
                                  "h",
                                  "l",
                                  "t",
                                  "n"
                                ],
                                "type": "object",
                                "x-polygon-go-type": {
                                  "name": "Aggregate",
                                  "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                }
                              },
                              "type": "array"
                            },
                            "url": {
                              "description": "The URL which can be used to request the underlying aggregates used in this request.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "values": {
                          "items": {
                            "properties": {
                              "timestamp": {
                                "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                "format": "int64",
                                "type": "integer",
                                "x-polygon-go-type": {
                                  "name": "IMicroseconds",
                                  "path": "github.com/polygon-io/ptime"
                                }
                              },
                              "value": {
                                "description": "The indicator value for this period.",
                                "format": "float",
                                "type": "number",
                                "x-polygon-go-type": { "name": "*float64" }
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "x-polygon-go-type": { "name": "SMAResults" }
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Simple Moving Average (SMA) data for each period."
          }
        },
        "summary": "Simple Moving Average (SMA)",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v1/indicators/sma/{stockTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/indicators/ema/{stockTicker}",
        "templatedPath": "/v1/indicators/ema/{stockTicker}",
        "path": "get_v1_indicators_ema__stockticker",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "properties": {
                "underlying": {
                  "properties": {
                    "aggregates": {
                      "items": {
                        "properties": {
                          "c": {
                            "description": "The close price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "h": {
                            "description": "The highest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "l": {
                            "description": "The lowest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "n": {
                            "description": "The number of transactions in the aggregate window.",
                            "type": "integer"
                          },
                          "o": {
                            "description": "The open price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "otc": {
                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                            "type": "boolean"
                          },
                          "t": {
                            "description": "The Unix Msec timestamp for the start of the aggregate window.",
                            "format": "float",
                            "type": "number"
                          },
                          "v": {
                            "description": "The trading volume of the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "vw": {
                            "description": "The volume weighted average price.",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "required": ["v", "vw", "o", "c", "h", "l", "t", "n"],
                        "type": "object",
                        "x-polygon-go-type": {
                          "name": "Aggregate",
                          "path": "github.com/polygon-io/go-lib-models/v2/globals"
                        }
                      },
                      "type": "array"
                    },
                    "url": {
                      "description": "The URL which can be used to request the underlying aggregates used in this request.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "values": {
                  "items": {
                    "properties": {
                      "timestamp": {
                        "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                        "format": "int64",
                        "type": "integer",
                        "x-polygon-go-type": {
                          "name": "IMicroseconds",
                          "path": "github.com/polygon-io/ptime"
                        }
                      },
                      "value": {
                        "description": "The indicator value for this period.",
                        "format": "float",
                        "type": "number",
                        "x-polygon-go-type": { "name": "*float64" }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "x-polygon-go-type": { "name": "EMAResults" }
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/ema/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"timestamp\": 1517562000016,\n    \"value\": 140.139\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
        "description": "Get the exponential moving average (EMA) for a ticker symbol over a given time range.",
        "operationId": "EMA",
        "parameters": [
          {
            "description": "The ticker symbol for which to get exponential moving average (EMA) data.",
            "example": "AAPL",
            "in": "path",
            "name": "stockTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          },
          {
            "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "The size of the aggregate time window.",
            "example": "day",
            "in": "query",
            "name": "timespan",
            "schema": {
              "default": "day",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether or not the aggregates used to calculate the exponential moving average are adjusted for splits. By default, aggregates are adjusted. Set this to false to get results that are NOT adjusted for splits.",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "default": true, "type": "boolean" }
          },
          {
            "description": "The window size used to calculate the exponential moving average (EMA). i.e. a window size of 10 with daily aggregates would result in a 10 day moving average.",
            "example": 50,
            "in": "query",
            "name": "window",
            "schema": { "default": 50, "type": "integer" }
          },
          {
            "description": "The price in the aggregate which will be used to calculate the exponential moving average. i.e. 'close' will result in using close prices to \ncalculate the exponential moving average (EMA).",
            "example": "close",
            "in": "query",
            "name": "series_type",
            "schema": {
              "default": "close",
              "enum": ["open", "high", "low", "close"],
              "type": "string"
            }
          },
          {
            "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
            "in": "query",
            "name": "expand_underlying",
            "schema": { "default": false, "type": "boolean" }
          },
          {
            "description": "The order in which to return the results, ordered by timestamp.",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 5000",
            "in": "query",
            "name": "limit",
            "schema": { "default": 10, "maximum": 5000, "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v1/indicators/ema/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                  "results": {
                    "underlying": {
                      "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                    },
                    "values": [{ "timestamp": 1517562000016, "value": 140.139 }]
                  },
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "underlying": {
                          "properties": {
                            "aggregates": {
                              "items": {
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "n": {
                                    "description": "The number of transactions in the aggregate window.",
                                    "type": "integer"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "float",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "v",
                                  "vw",
                                  "o",
                                  "c",
                                  "h",
                                  "l",
                                  "t",
                                  "n"
                                ],
                                "type": "object",
                                "x-polygon-go-type": {
                                  "name": "Aggregate",
                                  "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                }
                              },
                              "type": "array"
                            },
                            "url": {
                              "description": "The URL which can be used to request the underlying aggregates used in this request.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "values": {
                          "items": {
                            "properties": {
                              "timestamp": {
                                "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                "format": "int64",
                                "type": "integer",
                                "x-polygon-go-type": {
                                  "name": "IMicroseconds",
                                  "path": "github.com/polygon-io/ptime"
                                }
                              },
                              "value": {
                                "description": "The indicator value for this period.",
                                "format": "float",
                                "type": "number",
                                "x-polygon-go-type": { "name": "*float64" }
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "x-polygon-go-type": { "name": "EMAResults" }
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Exponential Moving Average (EMA) data for each period."
          }
        },
        "summary": "Exponential Moving Average (EMA)",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v1/indicators/ema/{stockTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/indicators/macd/{stockTicker}",
        "templatedPath": "/v1/indicators/macd/{stockTicker}",
        "path": "get_v1_indicators_macd__stockticker",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "properties": {
                "underlying": {
                  "properties": {
                    "aggregates": {
                      "items": {
                        "properties": {
                          "c": {
                            "description": "The close price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "h": {
                            "description": "The highest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "l": {
                            "description": "The lowest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "n": {
                            "description": "The number of transactions in the aggregate window.",
                            "type": "integer"
                          },
                          "o": {
                            "description": "The open price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "otc": {
                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                            "type": "boolean"
                          },
                          "t": {
                            "description": "The Unix Msec timestamp for the start of the aggregate window.",
                            "format": "float",
                            "type": "number"
                          },
                          "v": {
                            "description": "The trading volume of the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "vw": {
                            "description": "The volume weighted average price.",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "required": ["v", "vw", "o", "c", "h", "l", "t", "n"],
                        "type": "object",
                        "x-polygon-go-type": {
                          "name": "Aggregate",
                          "path": "github.com/polygon-io/go-lib-models/v2/globals"
                        }
                      },
                      "type": "array"
                    },
                    "url": {
                      "description": "The URL which can be used to request the underlying aggregates used in this request.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "values": {
                  "items": {
                    "properties": {
                      "histogram": {
                        "description": "The indicator value for this period.",
                        "format": "float",
                        "type": "number",
                        "x-polygon-go-type": { "name": "*float64" }
                      },
                      "signal": {
                        "description": "The indicator value for this period.",
                        "format": "float",
                        "type": "number",
                        "x-polygon-go-type": { "name": "*float64" }
                      },
                      "timestamp": {
                        "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                        "format": "int64",
                        "type": "integer",
                        "x-polygon-go-type": {
                          "name": "IMicroseconds",
                          "path": "github.com/polygon-io/ptime"
                        }
                      },
                      "value": {
                        "description": "The indicator value for this period.",
                        "format": "float",
                        "type": "number",
                        "x-polygon-go-type": { "name": "*float64" }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "x-polygon-go-type": { "name": "MACDResults" }
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/macd/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"histogram\": 38.3801666667,\n    \"signal\": 106.9811666667,\n    \"timestamp\": 1517562000016,\n    \"value\": 145.3613333333\n   },\n   {\n    \"histogram\": 41.098859136,\n    \"signal\": 102.7386283473,\n    \"timestamp\": 1517562001016,\n    \"value\": 143.8374874833\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
        "description": "Get moving average convergence/divergence (MACD) data for a ticker symbol over a given time range.",
        "operationId": "MACD",
        "parameters": [
          {
            "description": "The ticker symbol for which to get MACD data.",
            "example": "AAPL",
            "in": "path",
            "name": "stockTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          },
          {
            "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "The size of the aggregate time window.",
            "example": "day",
            "in": "query",
            "name": "timespan",
            "schema": {
              "default": "day",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether or not the aggregates used to calculate the MACD are adjusted for splits. By default, aggregates are adjusted. Set this to false to get results that are NOT adjusted for splits.",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "default": true, "type": "boolean" }
          },
          {
            "description": "The short window size used to calculate MACD data.",
            "example": 12,
            "in": "query",
            "name": "short_window",
            "schema": { "default": 12, "type": "integer" }
          },
          {
            "description": "The long window size used to calculate MACD data.",
            "example": 26,
            "in": "query",
            "name": "long_window",
            "schema": { "default": 26, "type": "integer" }
          },
          {
            "description": "The window size used to calculate the MACD signal line.",
            "example": 9,
            "in": "query",
            "name": "signal_window",
            "schema": { "default": 9, "type": "integer" }
          },
          {
            "description": "The price in the aggregate which will be used to calculate the MACD. i.e. 'close' will result in using close prices to \ncalculate the MACD.",
            "example": "close",
            "in": "query",
            "name": "series_type",
            "schema": {
              "default": "close",
              "enum": ["open", "high", "low", "close"],
              "type": "string"
            }
          },
          {
            "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
            "in": "query",
            "name": "expand_underlying",
            "schema": { "default": false, "type": "boolean" }
          },
          {
            "description": "The order in which to return the results, ordered by timestamp.",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 5000",
            "in": "query",
            "name": "limit",
            "schema": { "default": 10, "maximum": 5000, "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v1/indicators/macd/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                  "results": {
                    "underlying": {
                      "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                    },
                    "values": [
                      {
                        "histogram": 38.3801666667,
                        "signal": 106.9811666667,
                        "timestamp": 1517562000016,
                        "value": 145.3613333333
                      },
                      {
                        "histogram": 41.098859136,
                        "signal": 102.7386283473,
                        "timestamp": 1517562001016,
                        "value": 143.8374874833
                      }
                    ]
                  },
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "underlying": {
                          "properties": {
                            "aggregates": {
                              "items": {
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "n": {
                                    "description": "The number of transactions in the aggregate window.",
                                    "type": "integer"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "float",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "v",
                                  "vw",
                                  "o",
                                  "c",
                                  "h",
                                  "l",
                                  "t",
                                  "n"
                                ],
                                "type": "object",
                                "x-polygon-go-type": {
                                  "name": "Aggregate",
                                  "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                }
                              },
                              "type": "array"
                            },
                            "url": {
                              "description": "The URL which can be used to request the underlying aggregates used in this request.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "values": {
                          "items": {
                            "properties": {
                              "histogram": {
                                "description": "The indicator value for this period.",
                                "format": "float",
                                "type": "number",
                                "x-polygon-go-type": { "name": "*float64" }
                              },
                              "signal": {
                                "description": "The indicator value for this period.",
                                "format": "float",
                                "type": "number",
                                "x-polygon-go-type": { "name": "*float64" }
                              },
                              "timestamp": {
                                "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                "format": "int64",
                                "type": "integer",
                                "x-polygon-go-type": {
                                  "name": "IMicroseconds",
                                  "path": "github.com/polygon-io/ptime"
                                }
                              },
                              "value": {
                                "description": "The indicator value for this period.",
                                "format": "float",
                                "type": "number",
                                "x-polygon-go-type": { "name": "*float64" }
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "x-polygon-go-type": { "name": "MACDResults" }
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Moving Average Convergence/Divergence (MACD) data for each period."
          }
        },
        "summary": "Moving Average Convergence/Divergence (MACD)",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v1/indicators/macd/{stockTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/indicators/rsi/{stockTicker}",
        "templatedPath": "/v1/indicators/rsi/{stockTicker}",
        "path": "get_v1_indicators_rsi__stockticker",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "properties": {
                "underlying": {
                  "properties": {
                    "aggregates": {
                      "items": {
                        "properties": {
                          "c": {
                            "description": "The close price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "h": {
                            "description": "The highest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "l": {
                            "description": "The lowest price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "n": {
                            "description": "The number of transactions in the aggregate window.",
                            "type": "integer"
                          },
                          "o": {
                            "description": "The open price for the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "otc": {
                            "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                            "type": "boolean"
                          },
                          "t": {
                            "description": "The Unix Msec timestamp for the start of the aggregate window.",
                            "format": "float",
                            "type": "number"
                          },
                          "v": {
                            "description": "The trading volume of the symbol in the given time period.",
                            "format": "float",
                            "type": "number"
                          },
                          "vw": {
                            "description": "The volume weighted average price.",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "required": ["v", "vw", "o", "c", "h", "l", "t", "n"],
                        "type": "object",
                        "x-polygon-go-type": {
                          "name": "Aggregate",
                          "path": "github.com/polygon-io/go-lib-models/v2/globals"
                        }
                      },
                      "type": "array"
                    },
                    "url": {
                      "description": "The URL which can be used to request the underlying aggregates used in this request.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "values": {
                  "items": {
                    "properties": {
                      "timestamp": {
                        "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                        "format": "int64",
                        "type": "integer",
                        "x-polygon-go-type": {
                          "name": "IMicroseconds",
                          "path": "github.com/polygon-io/ptime"
                        }
                      },
                      "value": {
                        "description": "The indicator value for this period.",
                        "format": "float",
                        "type": "number",
                        "x-polygon-go-type": { "name": "*float64" }
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "x-polygon-go-type": { "name": "RSIResults" }
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v1/indicators/rsi/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"a47d1beb8c11b6ae897ab76cdbbf35a3\",\n \"results\": {\n  \"underlying\": {\n   \"url\": \"https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25\"\n  },\n  \"values\": [\n   {\n    \"timestamp\": 1517562000016,\n    \"value\": 140.139\n   }\n  ]\n },\n \"status\": \"OK\"\n}",
        "description": "Get the relative strength index (RSI) for a ticker symbol over a given time range.",
        "operationId": "RSI",
        "parameters": [
          {
            "description": "The ticker symbol for which to get relative strength index (RSI) data.",
            "example": "AAPL",
            "in": "path",
            "name": "stockTicker",
            "required": true,
            "schema": { "type": "string" },
            "x-polygon-go-id": "Ticker"
          },
          {
            "description": "Query by timestamp. Either a date with the format YYYY-MM-DD or a millisecond timestamp.",
            "in": "query",
            "name": "timestamp",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "The size of the aggregate time window.",
            "example": "day",
            "in": "query",
            "name": "timespan",
            "schema": {
              "default": "day",
              "enum": [
                "minute",
                "hour",
                "day",
                "week",
                "month",
                "quarter",
                "year"
              ],
              "type": "string"
            }
          },
          {
            "description": "Whether or not the aggregates used to calculate the relative strength index are adjusted for splits. By default, aggregates are adjusted. Set this to false to get results that are NOT adjusted for splits.",
            "example": true,
            "in": "query",
            "name": "adjusted",
            "schema": { "default": true, "type": "boolean" }
          },
          {
            "description": "The window size used to calculate the relative strength index (RSI).",
            "example": 14,
            "in": "query",
            "name": "window",
            "schema": { "default": 14, "type": "integer" }
          },
          {
            "description": "The price in the aggregate which will be used to calculate the relative strength index. i.e. 'close' will result in using close prices to \ncalculate the relative strength index (RSI).",
            "example": "close",
            "in": "query",
            "name": "series_type",
            "schema": {
              "default": "close",
              "enum": ["open", "high", "low", "close"],
              "type": "string"
            }
          },
          {
            "description": "Whether or not to include the aggregates used to calculate this indicator in the response.",
            "in": "query",
            "name": "expand_underlying",
            "schema": { "default": false, "type": "boolean" }
          },
          {
            "description": "The order in which to return the results, ordered by timestamp.",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "desc",
              "enum": ["asc", "desc"],
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 5000",
            "in": "query",
            "name": "limit",
            "schema": { "default": 10, "maximum": 5000, "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v1/indicators/rsi/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "a47d1beb8c11b6ae897ab76cdbbf35a3",
                  "results": {
                    "underlying": {
                      "url": "https://api.polygon.io/v2/aggs/ticker/AAPL/range/1/day/2003-01-01/2022-07-25"
                    },
                    "values": [{ "timestamp": 1517562000016, "value": 140.139 }]
                  },
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "properties": {
                        "underlying": {
                          "properties": {
                            "aggregates": {
                              "items": {
                                "properties": {
                                  "c": {
                                    "description": "The close price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "h": {
                                    "description": "The highest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "l": {
                                    "description": "The lowest price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "n": {
                                    "description": "The number of transactions in the aggregate window.",
                                    "type": "integer"
                                  },
                                  "o": {
                                    "description": "The open price for the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "otc": {
                                    "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false.",
                                    "type": "boolean"
                                  },
                                  "t": {
                                    "description": "The Unix Msec timestamp for the start of the aggregate window.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "v": {
                                    "description": "The trading volume of the symbol in the given time period.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "vw": {
                                    "description": "The volume weighted average price.",
                                    "format": "float",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "v",
                                  "vw",
                                  "o",
                                  "c",
                                  "h",
                                  "l",
                                  "t",
                                  "n"
                                ],
                                "type": "object",
                                "x-polygon-go-type": {
                                  "name": "Aggregate",
                                  "path": "github.com/polygon-io/go-lib-models/v2/globals"
                                }
                              },
                              "type": "array"
                            },
                            "url": {
                              "description": "The URL which can be used to request the underlying aggregates used in this request.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "values": {
                          "items": {
                            "properties": {
                              "timestamp": {
                                "description": "The Unix Msec timestamp from the last aggregate used in this calculation.",
                                "format": "int64",
                                "type": "integer",
                                "x-polygon-go-type": {
                                  "name": "IMicroseconds",
                                  "path": "github.com/polygon-io/ptime"
                                }
                              },
                              "value": {
                                "description": "The indicator value for this period.",
                                "format": "float",
                                "type": "number",
                                "x-polygon-go-type": { "name": "*float64" }
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "x-polygon-go-type": { "name": "RSIResults" }
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Relative strength Index data for each period."
          }
        },
        "summary": "Relative Strength Index (RSI)",
        "tags": ["stocks:aggregates"],
        "x-polygon-entitlement-data-type": {
          "description": "Aggregate data",
          "name": "aggregates"
        },
        "x-polygon-entitlement-market-type": {
          "description": "Stocks data",
          "name": "stocks"
        },
        "parameterTemplate": "{apiBase}/v1/indicators/rsi/{stockTicker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/tickers",
        "templatedPath": "/v3/reference/tickers",
        "path": "get_v3_reference_tickers",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "results": {
              "description": "An array of tickers that match your query.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
              "items": {
                "properties": {
                  "active": {
                    "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                    "type": "boolean"
                  },
                  "cik": {
                    "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                    "type": "string"
                  },
                  "composite_figi": {
                    "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                    "type": "string"
                  },
                  "currency_name": {
                    "description": "The name of the currency that this asset is traded with.",
                    "type": "string"
                  },
                  "delisted_utc": {
                    "description": "The last date that the asset was traded.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_updated_utc": {
                    "description": "The information is accurate up to this time.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "locale": {
                    "description": "The locale of the asset.",
                    "enum": ["us", "global"],
                    "type": "string"
                  },
                  "market": {
                    "description": "The market type of the asset.",
                    "enum": ["stocks", "crypto", "fx", "otc"],
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                    "type": "string"
                  },
                  "primary_exchange": {
                    "description": "The ISO code of the primary listing exchange for this asset.",
                    "type": "string"
                  },
                  "share_class_figi": {
                    "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                    "type": "string"
                  },
                  "ticker": {
                    "description": "The exchange symbol that this item is traded under.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                    "type": "string"
                  }
                },
                "required": ["ticker", "name", "market", "locale"],
                "type": "object"
              },
              "type": "array"
            },
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"count\": 1,\n \"next_url\": \"https://api.polygon.io/v3/reference/tickers?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"request_id\": \"e70013d92930de90e089dc8fa098888e\",\n \"results\": [\n  {\n   \"active\": true,\n   \"cik\": \"0001090872\",\n   \"composite_figi\": \"BBG000BWQYZ5\",\n   \"currency_name\": \"usd\",\n   \"last_updated_utc\": \"2021-04-25T00:00:00Z\",\n   \"locale\": \"us\",\n   \"market\": \"stocks\",\n   \"name\": \"Agilent Technologies Inc.\",\n   \"primary_exchange\": \"XNYS\",\n   \"share_class_figi\": \"BBG001SCTQY4\",\n   \"ticker\": \"A\",\n   \"type\": \"CS\"\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "Query all ticker symbols which are supported by Polygon.io. This API currently includes Stocks/Equities, Crypto, and Forex.\n",
        "parameters": [
          {
            "description": "Specify a ticker symbol.\nDefaults to empty string which queries all tickers.\n",
            "in": "query",
            "name": "ticker",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "Specify the type of the tickers. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).\nDefaults to empty string which queries all types.\n",
            "in": "query",
            "name": "type",
            "schema": {
              "enum": [
                "CS",
                "ADRC",
                "ADRP",
                "ADRR",
                "UNIT",
                "RIGHT",
                "PFD",
                "FUND",
                "SP",
                "WARRANT",
                "INDEX",
                "ETF",
                "ETN",
                "OS",
                "GDR",
                "OTHER",
                "NYRS",
                "AGEN",
                "EQLK",
                "BOND",
                "ADRW",
                "BASKET",
                "LT"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filter by market type. By default all markets are included.\n",
            "in": "query",
            "name": "market",
            "schema": {
              "enum": ["stocks", "crypto", "fx", "otc"],
              "type": "string"
            }
          },
          {
            "description": "Specify the primary exchange of the asset in the ISO code format. Find more information about the ISO codes [at the ISO org website](https://www.iso20022.org/market-identifier-codes).\nDefaults to empty string which queries all exchanges.\n",
            "in": "query",
            "name": "exchange",
            "schema": { "type": "string" }
          },
          {
            "description": "Specify the CUSIP code of the asset you want to search for. Find more information about CUSIP codes [at their website](https://www.cusip.com/identifiers.html#/CUSIP).\nDefaults to empty string which queries all CUSIPs.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
            "in": "query",
            "name": "cusip",
            "schema": { "type": "string" }
          },
          {
            "description": "Specify the CIK of the asset you want to search for. Find more information about CIK codes [at their website](https://www.sec.gov/edgar/searchedgar/cik.htm).\nDefaults to empty string which queries all CIKs.\n",
            "in": "query",
            "name": "cik",
            "schema": { "type": "string" }
          },
          {
            "description": "Specify a point in time to retrieve tickers available on that date.\nDefaults to the most recent available date.\n",
            "in": "query",
            "name": "date",
            "schema": {
              "oneOf": [
                { "format": "date-time", "type": "string" },
                { "format": "date", "type": "string" }
              ]
            }
          },
          {
            "description": "Search for terms within the ticker and/or company name.\n",
            "in": "query",
            "name": "search",
            "schema": { "type": "string" }
          },
          {
            "description": "Specify if the tickers returned should be actively traded on the queried date. Default is true.\n",
            "example": true,
            "in": "query",
            "name": "active",
            "schema": { "type": "boolean" }
          },
          {
            "description": "The field to sort the results on. Default is ticker.\nIf the `search` query parameter is present, `sort` is ignored and results are ordered by relevance.\n",
            "example": "ticker",
            "in": "query",
            "name": "sort",
            "schema": {
              "enum": [
                "ticker",
                "name",
                "market",
                "locale",
                "primary_exchange",
                "type",
                "currency_symbol",
                "currency_name",
                "base_currency_symbol",
                "base_currency_name",
                "cik",
                "composite_figi",
                "share_class_figi",
                "last_updated_utc",
                "delisted_utc"
              ],
              "type": "string"
            }
          },
          {
            "description": "The order to sort the results on. Default is asc (ascending).\n",
            "example": "asc",
            "in": "query",
            "name": "order",
            "schema": { "enum": ["asc", "desc"], "type": "string" }
          },
          {
            "description": "Limit the size of the response, default is 100 and max is 1000.\n\nIf your query returns more than the max limit and you want to retrieve the next page of results,\nsee the `next_url` response attribute.\n",
            "example": 10,
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 100,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "count": 1,
                  "next_url": "https://api.polygon.io/v3/reference/tickers?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "request_id": "e70013d92930de90e089dc8fa098888e",
                  "results": [
                    {
                      "active": true,
                      "cik": "0001090872",
                      "composite_figi": "BBG000BWQYZ5",
                      "currency_name": "usd",
                      "last_updated_utc": "2021-04-25T00:00:00Z",
                      "locale": "us",
                      "market": "stocks",
                      "name": "Agilent Technologies Inc.",
                      "primary_exchange": "XNYS",
                      "share_class_figi": "BBG001SCTQY4",
                      "ticker": "A",
                      "type": "CS"
                    }
                  ],
                  "status": "OK"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "results": {
                          "description": "An array of tickers that match your query.\n\nNote: Although you can query by CUSIP, due to legal reasons we do not return the CUSIP in the response.\n",
                          "items": {
                            "properties": {
                              "active": {
                                "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                                "type": "boolean"
                              },
                              "cik": {
                                "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                                "type": "string"
                              },
                              "composite_figi": {
                                "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                                "type": "string"
                              },
                              "currency_name": {
                                "description": "The name of the currency that this asset is traded with.",
                                "type": "string"
                              },
                              "delisted_utc": {
                                "description": "The last date that the asset was traded.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "last_updated_utc": {
                                "description": "The information is accurate up to this time.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "locale": {
                                "description": "The locale of the asset.",
                                "enum": ["us", "global"],
                                "type": "string"
                              },
                              "market": {
                                "description": "The market type of the asset.",
                                "enum": ["stocks", "crypto", "fx", "otc"],
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                                "type": "string"
                              },
                              "primary_exchange": {
                                "description": "The ISO code of the primary listing exchange for this asset.",
                                "type": "string"
                              },
                              "share_class_figi": {
                                "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                                "type": "string"
                              },
                              "ticker": {
                                "description": "The exchange symbol that this item is traded under.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                                "type": "string"
                              }
                            },
                            "required": ["ticker", "name", "market", "locale"],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "next_url": {
                          "description": "If present, this value can be used to fetch the next page of data.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "request_id": {
                          "description": "A request id assigned by the server.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "count": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Reference Tickers."
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          }
        },
        "summary": "Tickers",
        "tags": ["reference:tickers:list"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "parameterTemplate": "{apiBase}/v3/reference/tickers?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/tickers/{ticker}",
        "templatedPath": "/v3/reference/tickers/{ticker}",
        "path": "get_v3_reference_tickers__ticker",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "results": {
              "description": "Ticker with details.\n",
              "properties": {
                "active": {
                  "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                  "type": "boolean"
                },
                "address": {
                  "properties": {
                    "address1": {
                      "description": "The first line of the company's headquarters address.",
                      "type": "string"
                    },
                    "city": {
                      "description": "The city of the company's headquarters address.",
                      "type": "string"
                    },
                    "postal_code": {
                      "description": "The postal code of the company's headquarters address.",
                      "type": "string"
                    },
                    "state": {
                      "description": "The state of the company's headquarters address.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "branding": {
                  "properties": {
                    "icon_url": {
                      "description": "A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                      "type": "string"
                    },
                    "logo_url": {
                      "description": "A link to this ticker's company's logo.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "cik": {
                  "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                  "type": "string"
                },
                "composite_figi": {
                  "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                  "type": "string"
                },
                "currency_name": {
                  "description": "The name of the currency that this asset is traded with.",
                  "type": "string"
                },
                "delisted_utc": {
                  "description": "The last date that the asset was traded.",
                  "format": "date-time",
                  "type": "string"
                },
                "description": {
                  "description": "A description of the company and what they do/offer.",
                  "type": "string"
                },
                "homepage_url": {
                  "description": "The URL of the company's website homepage.",
                  "type": "string"
                },
                "list_date": {
                  "description": "The date that the symbol was first publicly listed in the format YYYY-MM-DD.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale of the asset.",
                  "enum": ["us", "global"],
                  "type": "string"
                },
                "market": {
                  "description": "The market type of the asset.",
                  "enum": ["stocks", "crypto", "fx", "otc"],
                  "type": "string"
                },
                "market_cap": {
                  "description": "The most recent close price of the ticker multiplied by weighted outstanding shares.",
                  "format": "double",
                  "type": "number"
                },
                "name": {
                  "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                  "type": "string"
                },
                "phone_number": {
                  "description": "The phone number for the company behind this ticker.",
                  "type": "string"
                },
                "primary_exchange": {
                  "description": "The ISO code of the primary listing exchange for this asset.",
                  "type": "string"
                },
                "share_class_figi": {
                  "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                  "type": "string"
                },
                "share_class_shares_outstanding": {
                  "description": "The recorded number of outstanding shares for this particular share class.",
                  "format": "double",
                  "type": "number"
                },
                "sic_code": {
                  "description": "The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.\n",
                  "type": "string"
                },
                "sic_description": {
                  "description": "A description of this ticker's SIC code.",
                  "type": "string"
                },
                "ticker": {
                  "description": "The exchange symbol that this item is traded under.",
                  "type": "string"
                },
                "ticker_root": {
                  "description": "The root of a specified ticker. For example, the root of BRK.A is BRK.",
                  "type": "string"
                },
                "ticker_suffix": {
                  "description": "The suffix of a specified ticker. For example, the suffix of BRK.A is A.",
                  "type": "string"
                },
                "total_employees": {
                  "description": "The approximate number of employees for the company.",
                  "type": "number"
                },
                "type": {
                  "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                  "type": "string"
                },
                "weighted_shares_outstanding": {
                  "description": "The shares outstanding calculated assuming all shares of other share classes are converted to this share class.\n",
                  "format": "double",
                  "type": "number"
                }
              },
              "required": [
                "ticker",
                "name",
                "market",
                "locale",
                "active",
                "currency_name"
              ],
              "type": "object"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": {\n  \"active\": true,\n  \"address\": {\n   \"address1\": \"One Apple Park Way\",\n   \"city\": \"Cupertino\",\n   \"postal_code\": \"95014\",\n   \"state\": \"CA\"\n  },\n  \"branding\": {\n   \"icon_url\": \"https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_icon.png\",\n   \"logo_url\": \"https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_logo.svg\"\n  },\n  \"cik\": \"0000320193\",\n  \"composite_figi\": \"BBG000B9XRY4\",\n  \"currency_name\": \"usd\",\n  \"description\": \"Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), AirPods, and TV boxes (Apple TV), among others. The iPhone makes up the majority of Apple's total revenue. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Card, and Apple Pay, among others. Apple's products run internally developed software and semiconductors, and the firm is well known for its integration of hardware, software and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers. The company generates roughly 40% of its revenue from the Americas, with the remainder earned internationally.\",\n  \"homepage_url\": \"https://www.apple.com\",\n  \"list_date\": \"1980-12-12\",\n  \"locale\": \"us\",\n  \"market\": \"stocks\",\n  \"market_cap\": 2771126040150,\n  \"name\": \"Apple Inc.\",\n  \"phone_number\": \"(408) 996-1010\",\n  \"primary_exchange\": \"XNAS\",\n  \"share_class_figi\": \"BBG001S5N8V8\",\n  \"share_class_shares_outstanding\": 16406400000,\n  \"sic_code\": \"3571\",\n  \"sic_description\": \"ELECTRONIC COMPUTERS\",\n  \"ticker\": \"AAPL\",\n  \"ticker_root\": \"AAPL\",\n  \"total_employees\": 154000,\n  \"type\": \"CS\",\n  \"weighted_shares_outstanding\": 16334371000\n },\n \"status\": \"OK\"\n}",
        "description": "Get a single ticker supported by Polygon.io. This response will have detailed information about the ticker and the company behind it.\n",
        "parameters": [
          {
            "description": "The ticker symbol of the asset.",
            "example": "AAPL",
            "in": "path",
            "name": "ticker",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "description": "Specify a point in time to get information about the ticker available on that date.\nWhen retrieving information from SEC filings, we compare this date with the period of report date on the SEC filing.\n\nFor example, consider an SEC filing submitted by AAPL on 2019-07-31, with a period of report date ending on 2019-06-29.\nThat means that the filing was submitted on 2019-07-31, but the filing was created based on information from 2019-06-29.\nIf you were to query for AAPL details on 2019-06-29, the ticker details would include information from the SEC filing.\n\nDefaults to the most recent available date.\n",
            "in": "query",
            "name": "date",
            "schema": {
              "oneOf": [
                { "format": "date-time", "type": "string" },
                { "format": "date", "type": "string" }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe",
                  "results": {
                    "active": true,
                    "address": {
                      "address1": "One Apple Park Way",
                      "city": "Cupertino",
                      "postal_code": "95014",
                      "state": "CA"
                    },
                    "branding": {
                      "icon_url": "https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_icon.png",
                      "logo_url": "https://api.polygon.io/v1/reference/company-branding/d3d3LmFwcGxlLmNvbQ/images/2022-01-10_logo.svg"
                    },
                    "cik": "0000320193",
                    "composite_figi": "BBG000B9XRY4",
                    "currency_name": "usd",
                    "description": "Apple designs a wide variety of consumer electronic devices, including smartphones (iPhone), tablets (iPad), PCs (Mac), smartwatches (Apple Watch), AirPods, and TV boxes (Apple TV), among others. The iPhone makes up the majority of Apple's total revenue. In addition, Apple offers its customers a variety of services such as Apple Music, iCloud, Apple Care, Apple TV+, Apple Arcade, Apple Card, and Apple Pay, among others. Apple's products run internally developed software and semiconductors, and the firm is well known for its integration of hardware, software and services. Apple's products are distributed online as well as through company-owned stores and third-party retailers. The company generates roughly 40% of its revenue from the Americas, with the remainder earned internationally.",
                    "homepage_url": "https://www.apple.com",
                    "list_date": "1980-12-12",
                    "locale": "us",
                    "market": "stocks",
                    "market_cap": 2771126040150,
                    "name": "Apple Inc.",
                    "phone_number": "(408) 996-1010",
                    "primary_exchange": "XNAS",
                    "share_class_figi": "BBG001S5N8V8",
                    "share_class_shares_outstanding": 16406400000,
                    "sic_code": "3571",
                    "sic_description": "ELECTRONIC COMPUTERS",
                    "ticker": "AAPL",
                    "ticker_root": "AAPL",
                    "total_employees": 154000,
                    "type": "CS",
                    "weighted_shares_outstanding": 16334371000
                  },
                  "status": "OK"
                },
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "results": {
                          "description": "Ticker with details.\n",
                          "properties": {
                            "active": {
                              "description": "Whether or not the asset is actively traded. False means the asset has been delisted.",
                              "type": "boolean"
                            },
                            "address": {
                              "properties": {
                                "address1": {
                                  "description": "The first line of the company's headquarters address.",
                                  "type": "string"
                                },
                                "city": {
                                  "description": "The city of the company's headquarters address.",
                                  "type": "string"
                                },
                                "postal_code": {
                                  "description": "The postal code of the company's headquarters address.",
                                  "type": "string"
                                },
                                "state": {
                                  "description": "The state of the company's headquarters address.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "branding": {
                              "properties": {
                                "icon_url": {
                                  "description": "A link to this ticker's company's icon. Icon's are generally smaller, square images that represent the company at a glance.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                                  "type": "string"
                                },
                                "logo_url": {
                                  "description": "A link to this ticker's company's logo.\nNote that you must provide an API key when accessing this URL. See the \"Authentication\" section at the top of this page for more details.\n",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "cik": {
                              "description": "The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).",
                              "type": "string"
                            },
                            "composite_figi": {
                              "description": "The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                              "type": "string"
                            },
                            "currency_name": {
                              "description": "The name of the currency that this asset is traded with.",
                              "type": "string"
                            },
                            "delisted_utc": {
                              "description": "The last date that the asset was traded.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "description": {
                              "description": "A description of the company and what they do/offer.",
                              "type": "string"
                            },
                            "homepage_url": {
                              "description": "The URL of the company's website homepage.",
                              "type": "string"
                            },
                            "list_date": {
                              "description": "The date that the symbol was first publicly listed in the format YYYY-MM-DD.",
                              "type": "string"
                            },
                            "locale": {
                              "description": "The locale of the asset.",
                              "enum": ["us", "global"],
                              "type": "string"
                            },
                            "market": {
                              "description": "The market type of the asset.",
                              "enum": ["stocks", "crypto", "fx", "otc"],
                              "type": "string"
                            },
                            "market_cap": {
                              "description": "The most recent close price of the ticker multiplied by weighted outstanding shares.",
                              "format": "double",
                              "type": "number"
                            },
                            "name": {
                              "description": "The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.\n",
                              "type": "string"
                            },
                            "phone_number": {
                              "description": "The phone number for the company behind this ticker.",
                              "type": "string"
                            },
                            "primary_exchange": {
                              "description": "The ISO code of the primary listing exchange for this asset.",
                              "type": "string"
                            },
                            "share_class_figi": {
                              "description": "The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/assets/content/Open_Symbology_Fields-2a61f8aa4d.pdf)",
                              "type": "string"
                            },
                            "share_class_shares_outstanding": {
                              "description": "The recorded number of outstanding shares for this particular share class.",
                              "format": "double",
                              "type": "number"
                            },
                            "sic_code": {
                              "description": "The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.\n",
                              "type": "string"
                            },
                            "sic_description": {
                              "description": "A description of this ticker's SIC code.",
                              "type": "string"
                            },
                            "ticker": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "ticker_root": {
                              "description": "The root of a specified ticker. For example, the root of BRK.A is BRK.",
                              "type": "string"
                            },
                            "ticker_suffix": {
                              "description": "The suffix of a specified ticker. For example, the suffix of BRK.A is A.",
                              "type": "string"
                            },
                            "total_employees": {
                              "description": "The approximate number of employees for the company.",
                              "type": "number"
                            },
                            "type": {
                              "description": "The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).",
                              "type": "string"
                            },
                            "weighted_shares_outstanding": {
                              "description": "The shares outstanding calculated assuming all shares of other share classes are converted to this share class.\n",
                              "format": "double",
                              "type": "number"
                            }
                          },
                          "required": [
                            "ticker",
                            "name",
                            "market",
                            "locale",
                            "active",
                            "currency_name"
                          ],
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "request_id": {
                          "description": "A request id assigned by the server.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    {
                      "properties": {
                        "count": {
                          "description": "The total number of results for this request.",
                          "type": "integer"
                        },
                        "status": {
                          "description": "The status of this request's response.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "description": "Reference Tickers."
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          }
        },
        "summary": "Ticker Details v3",
        "tags": ["reference:tickers:get"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "parameterTemplate": "{apiBase}/v3/reference/tickers/{ticker}?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v2/reference/news",
        "templatedPath": "/v2/reference/news",
        "path": "get_v2_reference_news",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "amp_url": {
                    "description": "The mobile friendly Accelerated Mobile Page (AMP) URL.",
                    "type": "string"
                  },
                  "article_url": {
                    "description": "A link to the news article.",
                    "type": "string"
                  },
                  "author": {
                    "description": "The article's author.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the article.",
                    "type": "string"
                  },
                  "id": {
                    "description": "Unique identifier for the article.",
                    "type": "string"
                  },
                  "image_url": {
                    "description": "The article's image URL.",
                    "type": "string"
                  },
                  "keywords": {
                    "description": "The keywords associated with the article (which will vary depending on\nthe publishing source).",
                    "items": { "type": "string" },
                    "type": "array"
                  },
                  "published_utc": {
                    "description": "The date the article was published on.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "publisher": {
                    "properties": {
                      "favicon_url": {
                        "description": "The publisher's homepage favicon URL.",
                        "type": "string"
                      },
                      "homepage_url": {
                        "description": "The publisher's homepage URL.",
                        "type": "string"
                      },
                      "logo_url": {
                        "description": "The publisher's logo URL.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The publisher's name.",
                        "type": "string"
                      }
                    },
                    "required": ["name", "logo_url", "homepage_url"],
                    "type": "object"
                  },
                  "tickers": {
                    "description": "The ticker symbols associated with the article.",
                    "items": {
                      "description": "The exchange symbol that this item is traded under.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "title": {
                    "description": "The title of the news article.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "publisher",
                  "title",
                  "author",
                  "published_utc",
                  "article_url",
                  "tickers"
                ],
                "type": "object",
                "x-polygon-go-type": {
                  "name": "NewsArticleMetadata",
                  "path": "github.com/polygon-io/go-lib-models/v2/globals"
                }
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"count\": 1,\n \"next_url\": \"https://api.polygon.io:443/v2/reference/news?cursor=eyJsaW1pdCI6MSwic29ydCI6InB1Ymxpc2hlZF91dGMiLCJvcmRlciI6ImFzY2VuZGluZyIsInRpY2tlciI6e30sInB1Ymxpc2hlZF91dGMiOnsiZ3RlIjoiMjAyMS0wNC0yNiJ9LCJzZWFyY2hfYWZ0ZXIiOlsxNjE5NDA0Mzk3MDAwLG51bGxdfQ\",\n \"request_id\": \"831afdb0b8078549fed053476984947a\",\n \"results\": [\n  {\n   \"amp_url\": \"https://amp.benzinga.com/amp/content/20784086\",\n   \"article_url\": \"https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square\",\n   \"author\": \"Rachit Vats\",\n   \"description\": \"<p>Cathie Wood-led Ark Investment Management on Friday snapped up another 221,167 shares of the cryptocurrency exchange <strong>Coinbase Global Inc </strong>(NASDAQ: <a class=\\\"ticker\\\" href=\\\"https://www.benzinga.com/stock/coin#NASDAQ\\\">COIN</a>) worth about $64.49 million on the stock&rsquo;s Friday&rsquo;s dip and also its fourth-straight loss.</p>\\n<p>The investment firm&rsquo;s <strong>Ark Innovation ETF</strong> (NYSE: <a class=\\\"ticker\\\" href=\\\"https://www.benzinga.com/stock/arkk#NYSE\\\">ARKK</a>) bought the shares of the company that closed 0.63% lower at $291.60 on Friday, giving the cryptocurrency exchange a market cap of $58.09 billion. Coinbase&rsquo;s market cap has dropped from $85.8 billion on its blockbuster listing earlier this month.</p>\\n<p>The New York-based company also added another 3,873 shares of the mobile gaming company <strong>Skillz Inc</strong> (NYSE: <a class=\\\"ticker\\\" href=\\\"https://www.benzinga.com/stock/sklz#NYSE\\\">SKLZ</a>), <a href=\\\"http://www.benzinga.com/markets/cryptocurrency/21/04/20762794/cathie-woods-ark-loads-up-another-1-2-million-shares-in-skillz-also-adds-coinbase-draftkin\\\">just a day after</a> snapping 1.2 million shares of the stock.</p>\\n<p>ARKK bought the shares of the company which closed ...</p><p><a href=https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square alt=Cathie Wood Adds More Coinbase, Skillz, Trims Square>Full story available on Benzinga.com</a></p>\",\n   \"id\": \"nJsSJJdwViHZcw5367rZi7_qkXLfMzacXBfpv-vD9UA\",\n   \"image_url\": \"https://cdn2.benzinga.com/files/imagecache/og_image_social_share_1200x630/images/story/2012/andre-francois-mckenzie-auhr4gcqcce-unsplash.jpg?width=720\",\n   \"keywords\": [\n    \"Sector ETFs\",\n    \"Penny Stocks\",\n    \"Cryptocurrency\",\n    \"Small Cap\",\n    \"Markets\",\n    \"Trading Ideas\",\n    \"ETFs\"\n   ],\n   \"published_utc\": \"2021-04-26T02:33:17Z\",\n   \"publisher\": {\n    \"favicon_url\": \"https://s3.polygon.io/public/public/assets/news/favicons/benzinga.ico\",\n    \"homepage_url\": \"https://www.benzinga.com/\",\n    \"logo_url\": \"https://s3.polygon.io/public/public/assets/news/logos/benzinga.svg\",\n    \"name\": \"Benzinga\"\n   },\n   \"tickers\": [\n    \"DOCU\",\n    \"DDD\",\n    \"NIU\",\n    \"ARKF\",\n    \"NVDA\",\n    \"SKLZ\",\n    \"PCAR\",\n    \"MASS\",\n    \"PSTI\",\n    \"SPFR\",\n    \"TREE\",\n    \"PHR\",\n    \"IRDM\",\n    \"BEAM\",\n    \"ARKW\",\n    \"ARKK\",\n    \"ARKG\",\n    \"PSTG\",\n    \"SQ\",\n    \"IONS\",\n    \"SYRS\"\n   ],\n   \"title\": \"Cathie Wood Adds More Coinbase, Skillz, Trims Square\"\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "Get the most recent news articles relating to a stock ticker symbol, including a summary of the article and a link to the original source.",
        "operationId": "ListNews",
        "parameters": [
          {
            "description": "Return results that contain this ticker.",
            "in": "query",
            "name": "ticker",
            "schema": {
              "description": "The exchange symbol that this item is traded under.",
              "type": "string"
            },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "Return results published on, before, or after this date.",
            "in": "query",
            "name": "published_utc",
            "schema": {
              "oneOf": [
                { "format": "date-time", "type": "string" },
                { "format": "date", "type": "string" }
              ]
            },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 1000.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "example": 10,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "published_utc",
              "enum": ["published_utc"],
              "example": "published_utc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "count": 1,
                  "next_url": "https://api.polygon.io:443/v2/reference/news?cursor=eyJsaW1pdCI6MSwic29ydCI6InB1Ymxpc2hlZF91dGMiLCJvcmRlciI6ImFzY2VuZGluZyIsInRpY2tlciI6e30sInB1Ymxpc2hlZF91dGMiOnsiZ3RlIjoiMjAyMS0wNC0yNiJ9LCJzZWFyY2hfYWZ0ZXIiOlsxNjE5NDA0Mzk3MDAwLG51bGxdfQ",
                  "request_id": "831afdb0b8078549fed053476984947a",
                  "results": [
                    {
                      "amp_url": "https://amp.benzinga.com/amp/content/20784086",
                      "article_url": "https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square",
                      "author": "Rachit Vats",
                      "description": "<p>Cathie Wood-led Ark Investment Management on Friday snapped up another 221,167 shares of the cryptocurrency exchange <strong>Coinbase Global Inc </strong>(NASDAQ: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/coin#NASDAQ\">COIN</a>) worth about $64.49 million on the stock&rsquo;s Friday&rsquo;s dip and also its fourth-straight loss.</p>\n<p>The investment firm&rsquo;s <strong>Ark Innovation ETF</strong> (NYSE: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/arkk#NYSE\">ARKK</a>) bought the shares of the company that closed 0.63% lower at $291.60 on Friday, giving the cryptocurrency exchange a market cap of $58.09 billion. Coinbase&rsquo;s market cap has dropped from $85.8 billion on its blockbuster listing earlier this month.</p>\n<p>The New York-based company also added another 3,873 shares of the mobile gaming company <strong>Skillz Inc</strong> (NYSE: <a class=\"ticker\" href=\"https://www.benzinga.com/stock/sklz#NYSE\">SKLZ</a>), <a href=\"http://www.benzinga.com/markets/cryptocurrency/21/04/20762794/cathie-woods-ark-loads-up-another-1-2-million-shares-in-skillz-also-adds-coinbase-draftkin\">just a day after</a> snapping 1.2 million shares of the stock.</p>\n<p>ARKK bought the shares of the company which closed ...</p><p><a href=https://www.benzinga.com/markets/cryptocurrency/21/04/20784086/cathie-wood-adds-more-coinbase-skillz-trims-square alt=Cathie Wood Adds More Coinbase, Skillz, Trims Square>Full story available on Benzinga.com</a></p>",
                      "id": "nJsSJJdwViHZcw5367rZi7_qkXLfMzacXBfpv-vD9UA",
                      "image_url": "https://cdn2.benzinga.com/files/imagecache/og_image_social_share_1200x630/images/story/2012/andre-francois-mckenzie-auhr4gcqcce-unsplash.jpg?width=720",
                      "keywords": [
                        "Sector ETFs",
                        "Penny Stocks",
                        "Cryptocurrency",
                        "Small Cap",
                        "Markets",
                        "Trading Ideas",
                        "ETFs"
                      ],
                      "published_utc": "2021-04-26T02:33:17Z",
                      "publisher": {
                        "favicon_url": "https://s3.polygon.io/public/public/assets/news/favicons/benzinga.ico",
                        "homepage_url": "https://www.benzinga.com/",
                        "logo_url": "https://s3.polygon.io/public/public/assets/news/logos/benzinga.svg",
                        "name": "Benzinga"
                      },
                      "tickers": [
                        "DOCU",
                        "DDD",
                        "NIU",
                        "ARKF",
                        "NVDA",
                        "SKLZ",
                        "PCAR",
                        "MASS",
                        "PSTI",
                        "SPFR",
                        "TREE",
                        "PHR",
                        "IRDM",
                        "BEAM",
                        "ARKW",
                        "ARKK",
                        "ARKG",
                        "PSTG",
                        "SQ",
                        "IONS",
                        "SYRS"
                      ],
                      "title": "Cathie Wood Adds More Coinbase, Skillz, Trims Square"
                    }
                  ],
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "type": "integer"
                    },
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "items": {
                        "properties": {
                          "amp_url": {
                            "description": "The mobile friendly Accelerated Mobile Page (AMP) URL.",
                            "type": "string"
                          },
                          "article_url": {
                            "description": "A link to the news article.",
                            "type": "string"
                          },
                          "author": {
                            "description": "The article's author.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the article.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Unique identifier for the article.",
                            "type": "string"
                          },
                          "image_url": {
                            "description": "The article's image URL.",
                            "type": "string"
                          },
                          "keywords": {
                            "description": "The keywords associated with the article (which will vary depending on\nthe publishing source).",
                            "items": { "type": "string" },
                            "type": "array"
                          },
                          "published_utc": {
                            "description": "The date the article was published on.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "publisher": {
                            "properties": {
                              "favicon_url": {
                                "description": "The publisher's homepage favicon URL.",
                                "type": "string"
                              },
                              "homepage_url": {
                                "description": "The publisher's homepage URL.",
                                "type": "string"
                              },
                              "logo_url": {
                                "description": "The publisher's logo URL.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The publisher's name.",
                                "type": "string"
                              }
                            },
                            "required": ["name", "logo_url", "homepage_url"],
                            "type": "object"
                          },
                          "tickers": {
                            "description": "The ticker symbols associated with the article.",
                            "items": {
                              "description": "The exchange symbol that this item is traded under.",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "title": {
                            "description": "The title of the news article.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "publisher",
                          "title",
                          "author",
                          "published_utc",
                          "article_url",
                          "tickers"
                        ],
                        "type": "object",
                        "x-polygon-go-type": {
                          "name": "NewsArticleMetadata",
                          "path": "github.com/polygon-io/go-lib-models/v2/globals"
                        }
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An array of news articles."
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": { "description": "The specified resource was not found" }
        },
        "summary": "Ticker News",
        "tags": ["reference:news"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "x-polygon-paginate": {
          "sort": {
            "default": "published_utc",
            "enum": ["published_utc"],
            "limit": { "default": 10, "maximum": 1000, "minimum": 1 }
          }
        },
        "parameterTemplate": "{apiBase}/v2/reference/news?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/tickers/types",
        "templatedPath": "/v3/reference/tickers/types",
        "path": "get_v3_reference_tickers_types",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "count": {
              "description": "The total number of results for this request.",
              "example": 1,
              "type": "integer"
            },
            "request_id": {
              "description": "A request ID assigned by the server.",
              "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
              "type": "string"
            },
            "results": {
              "items": {
                "description": "Describes the type of financial instrument represented by a ticker.",
                "properties": {
                  "asset_class": {
                    "description": "An identifier for a group of similar financial instruments.",
                    "enum": ["stocks", "options", "crypto", "fx"],
                    "example": "stocks",
                    "type": "string"
                  },
                  "code": {
                    "description": "A code used by Polygon.io to refer to this ticker type.",
                    "example": "CS",
                    "type": "string"
                  },
                  "description": {
                    "description": "A short description of this ticker type.",
                    "example": "Common Stock",
                    "type": "string"
                  },
                  "locale": {
                    "description": "An identifier for a geographical location.",
                    "enum": ["us", "global"],
                    "example": "us",
                    "type": "string"
                  }
                },
                "required": ["code", "description", "asset_class", "locale"],
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "example": "OK",
              "type": "string"
            }
          },
          "required": ["status", "request_id"],
          "type": "object"
        },
        "example": "{\n \"count\": 1,\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": [\n  {\n   \"asset_class\": \"stocks\",\n   \"code\": \"CS\",\n   \"description\": \"Common Stock\",\n   \"locale\": \"us\"\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "List all ticker types that Polygon.io has.",
        "operationId": "ListTickerTypes",
        "parameters": [
          {
            "description": "Filter by asset class.",
            "in": "query",
            "name": "asset_class",
            "schema": {
              "description": "An identifier for a group of similar financial instruments.",
              "enum": ["stocks", "options", "crypto", "fx"],
              "example": "stocks",
              "type": "string"
            }
          },
          {
            "description": "Filter by locale.",
            "in": "query",
            "name": "locale",
            "schema": {
              "description": "An identifier for a geographical location.",
              "enum": ["us", "global"],
              "example": "us",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "results": {
                      "items": {
                        "description": "Describes the type of financial instrument represented by a ticker.",
                        "properties": {
                          "asset_class": {
                            "description": "An identifier for a group of similar financial instruments.",
                            "enum": ["stocks", "options", "crypto", "fx"],
                            "example": "stocks",
                            "type": "string"
                          },
                          "code": {
                            "description": "A code used by Polygon.io to refer to this ticker type.",
                            "example": "CS",
                            "type": "string"
                          },
                          "description": {
                            "description": "A short description of this ticker type.",
                            "example": "Common Stock",
                            "type": "string"
                          },
                          "locale": {
                            "description": "An identifier for a geographical location.",
                            "enum": ["us", "global"],
                            "example": "us",
                            "type": "string"
                          }
                        },
                        "required": [
                          "code",
                          "description",
                          "asset_class",
                          "locale"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id"],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id"],
                  "type": "object"
                }
              }
            },
            "description": "a query parameter was malformed"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id"],
                  "type": "object"
                }
              }
            },
            "description": "an unknown error occurred"
          }
        },
        "summary": "Ticker Types",
        "tags": ["reference:tickers:types"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "parameterTemplate": "{apiBase}/v3/reference/tickers/types?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/marketstatus/upcoming",
        "templatedPath": "/v1/marketstatus/upcoming",
        "path": "get_v1_marketstatus_upcoming",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "items": {
            "properties": {
              "close": {
                "description": "The market close time on the holiday (if it's not closed).",
                "format": "date-time",
                "type": "string"
              },
              "date": {
                "description": "The date of the holiday.",
                "format": "date",
                "type": "string"
              },
              "exchange": {
                "description": "Which market the record is for.",
                "type": "string"
              },
              "name": {
                "description": "The name of the holiday.",
                "type": "string"
              },
              "open": {
                "description": "The market open time on the holiday (if it's not closed).",
                "format": "date-time",
                "type": "string"
              },
              "status": {
                "description": "The status of the market on the holiday.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "example": "[\n {\n  \"date\": \"2020-11-26T00:00:00.000Z\",\n  \"exchange\": \"NYSE\",\n  \"name\": \"Thanksgiving\",\n  \"status\": \"closed\"\n },\n {\n  \"date\": \"2020-11-26T00:00:00.000Z\",\n  \"exchange\": \"NASDAQ\",\n  \"name\": \"Thanksgiving\",\n  \"status\": \"closed\"\n },\n {\n  \"date\": \"2020-11-26T00:00:00.000Z\",\n  \"exchange\": \"OTC\",\n  \"name\": \"Thanksgiving\",\n  \"status\": \"closed\"\n },\n {\n  \"close\": \"2020-11-27T18:00:00.000Z\",\n  \"date\": \"2020-11-27T00:00:00.000Z\",\n  \"exchange\": \"NASDAQ\",\n  \"name\": \"Thanksgiving\",\n  \"open\": \"2020-11-27T14:30:00.000Z\",\n  \"status\": \"early-close\"\n },\n {\n  \"close\": \"2020-11-27T18:00:00.000Z\",\n  \"date\": \"2020-11-27T00:00:00.000Z\",\n  \"exchange\": \"NYSE\",\n  \"name\": \"Thanksgiving\",\n  \"open\": \"2020-11-27T14:30:00.000Z\",\n  \"status\": \"early-close\"\n }\n]",
        "description": "Get upcoming market holidays and their open/close times.\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": [
                  {
                    "date": "2020-11-26T00:00:00.000Z",
                    "exchange": "NYSE",
                    "name": "Thanksgiving",
                    "status": "closed"
                  },
                  {
                    "date": "2020-11-26T00:00:00.000Z",
                    "exchange": "NASDAQ",
                    "name": "Thanksgiving",
                    "status": "closed"
                  },
                  {
                    "date": "2020-11-26T00:00:00.000Z",
                    "exchange": "OTC",
                    "name": "Thanksgiving",
                    "status": "closed"
                  },
                  {
                    "close": "2020-11-27T18:00:00.000Z",
                    "date": "2020-11-27T00:00:00.000Z",
                    "exchange": "NASDAQ",
                    "name": "Thanksgiving",
                    "open": "2020-11-27T14:30:00.000Z",
                    "status": "early-close"
                  },
                  {
                    "close": "2020-11-27T18:00:00.000Z",
                    "date": "2020-11-27T00:00:00.000Z",
                    "exchange": "NYSE",
                    "name": "Thanksgiving",
                    "open": "2020-11-27T14:30:00.000Z",
                    "status": "early-close"
                  }
                ],
                "schema": {
                  "items": {
                    "properties": {
                      "close": {
                        "description": "The market close time on the holiday (if it's not closed).",
                        "format": "date-time",
                        "type": "string"
                      },
                      "date": {
                        "description": "The date of the holiday.",
                        "format": "date",
                        "type": "string"
                      },
                      "exchange": {
                        "description": "Which market the record is for.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the holiday.",
                        "type": "string"
                      },
                      "open": {
                        "description": "The market open time on the holiday (if it's not closed).",
                        "format": "date-time",
                        "type": "string"
                      },
                      "status": {
                        "description": "The status of the market on the holiday.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Holidays for each market in the near future."
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": { "description": "The specified resource was not found" },
          "409": { "description": "Parameter is invalid or incorrect." }
        },
        "summary": "Market Holidays",
        "tags": ["reference:stocks:market"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "parameters": [],
        "parameterTemplate": "{apiBase}/v1/marketstatus/upcoming?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v1/marketstatus/now",
        "templatedPath": "/v1/marketstatus/now",
        "path": "get_v1_marketstatus_now",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "afterHours": {
              "description": "Whether or not the market is in post-market hours.",
              "type": "boolean"
            },
            "currencies": {
              "properties": {
                "crypto": {
                  "description": "The status of the crypto market.",
                  "type": "string"
                },
                "fx": {
                  "description": "The status of the forex market.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "earlyHours": {
              "description": "Whether or not the market is in pre-market hours.",
              "type": "boolean"
            },
            "exchanges": {
              "properties": {
                "nasdaq": {
                  "description": "The status of the Nasdaq market.",
                  "type": "string"
                },
                "nyse": {
                  "description": "The status of the NYSE market.",
                  "type": "string"
                },
                "otc": {
                  "description": "The status of the OTC market.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "market": {
              "description": "The status of the market as a whole.",
              "type": "string"
            },
            "serverTime": {
              "description": "The current time of the server.",
              "format": "date-time",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"afterHours\": true,\n \"currencies\": {\n  \"crypto\": \"open\",\n  \"fx\": \"open\"\n },\n \"earlyHours\": false,\n \"exchanges\": {\n  \"nasdaq\": \"extended-hours\",\n  \"nyse\": \"extended-hours\",\n  \"otc\": \"closed\"\n },\n \"market\": \"extended-hours\",\n \"serverTime\": \"2020-11-10T22:37:37.000Z\"\n}",
        "description": "Get the current trading status of the exchanges and overall financial markets.\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "afterHours": true,
                  "currencies": { "crypto": "open", "fx": "open" },
                  "earlyHours": false,
                  "exchanges": {
                    "nasdaq": "extended-hours",
                    "nyse": "extended-hours",
                    "otc": "closed"
                  },
                  "market": "extended-hours",
                  "serverTime": "2020-11-10T22:37:37.000Z"
                },
                "schema": {
                  "properties": {
                    "afterHours": {
                      "description": "Whether or not the market is in post-market hours.",
                      "type": "boolean"
                    },
                    "currencies": {
                      "properties": {
                        "crypto": {
                          "description": "The status of the crypto market.",
                          "type": "string"
                        },
                        "fx": {
                          "description": "The status of the forex market.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "earlyHours": {
                      "description": "Whether or not the market is in pre-market hours.",
                      "type": "boolean"
                    },
                    "exchanges": {
                      "properties": {
                        "nasdaq": {
                          "description": "The status of the Nasdaq market.",
                          "type": "string"
                        },
                        "nyse": {
                          "description": "The status of the NYSE market.",
                          "type": "string"
                        },
                        "otc": {
                          "description": "The status of the OTC market.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "market": {
                      "description": "The status of the market as a whole.",
                      "type": "string"
                    },
                    "serverTime": {
                      "description": "The current time of the server.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Status of the market and each exchange"
          },
          "401": {
            "description": "Unauthorized - Check our API Key and account status"
          },
          "404": { "description": "The specified resource was not found" },
          "409": { "description": "Parameter is invalid or incorrect." }
        },
        "summary": "Market Status",
        "tags": ["reference:stocks:market"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "parameters": [],
        "parameterTemplate": "{apiBase}/v1/marketstatus/now?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/splits",
        "templatedPath": "/v3/reference/splits",
        "path": "get_v3_reference_splits",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": { "type": "string" },
            "results": {
              "items": {
                "properties": {
                  "execution_date": {
                    "description": "The execution date of the stock split. On this date the stock split was applied.",
                    "type": "string"
                  },
                  "split_from": {
                    "description": "The second number in the split ratio.\n\nFor example: In a 2-for-1 split, split_from would be 1.",
                    "format": "float",
                    "type": "number"
                  },
                  "split_to": {
                    "description": "The first number in the split ratio.\n\nFor example: In a 2-for-1 split, split_to would be 2.",
                    "format": "float",
                    "type": "number"
                  },
                  "ticker": {
                    "description": "The ticker symbol of the stock split.",
                    "type": "string"
                  }
                },
                "required": ["split_from", "split_to"],
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v3/splits/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"results\": [\n  {\n   \"execution_date\": \"2020-08-31\",\n   \"split_from\": 1,\n   \"split_to\": 4,\n   \"ticker\": \"AAPL\"\n  },\n  {\n   \"execution_date\": \"2005-02-28\",\n   \"split_from\": 1,\n   \"split_to\": 2,\n   \"ticker\": \"AAPL\"\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "Get a list of historical stock splits, including the ticker symbol, the execution date, and the factors of the split ratio.",
        "operationId": "ListStockSplits",
        "parameters": [
          {
            "description": "Return the stock splits that contain this ticker.",
            "in": "query",
            "name": "ticker",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query by execution date with the format YYYY-MM-DD.",
            "in": "query",
            "name": "execution_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query for reverse stock splits. A split ratio where split_from is greater than split_to represents a reverse split. By default this filter is not used.",
            "in": "query",
            "name": "reverse_split",
            "schema": { "nullable": true, "type": "boolean" }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 1000.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "example": 10,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "execution_date",
              "enum": ["execution_date", "ticker"],
              "example": "execution_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "next_url": "https://api.polygon.io/v3/splits/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                  "results": [
                    {
                      "execution_date": "2020-08-31",
                      "split_from": 1,
                      "split_to": 4,
                      "ticker": "AAPL"
                    },
                    {
                      "execution_date": "2005-02-28",
                      "split_from": 1,
                      "split_to": 2,
                      "ticker": "AAPL"
                    }
                  ],
                  "status": "OK"
                },
                "schema": {
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": { "type": "string" },
                    "results": {
                      "items": {
                        "properties": {
                          "execution_date": {
                            "description": "The execution date of the stock split. On this date the stock split was applied.",
                            "type": "string"
                          },
                          "split_from": {
                            "description": "The second number in the split ratio.\n\nFor example: In a 2-for-1 split, split_from would be 1.",
                            "format": "float",
                            "type": "number"
                          },
                          "split_to": {
                            "description": "The first number in the split ratio.\n\nFor example: In a 2-for-1 split, split_to would be 2.",
                            "format": "float",
                            "type": "number"
                          },
                          "ticker": {
                            "description": "The ticker symbol of the stock split.",
                            "type": "string"
                          }
                        },
                        "required": ["split_from", "split_to"],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A list of stock splits."
          }
        },
        "summary": "Stock Splits v3",
        "tags": ["reference:stocks"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "x-polygon-paginate": {
          "limit": { "default": 10, "max": 1000 },
          "sort": {
            "default": "execution_date",
            "enum": ["execution_date", "ticker"]
          }
        },
        "parameterTemplate": "{apiBase}/v3/reference/splits?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/dividends",
        "templatedPath": "/v3/reference/dividends",
        "path": "get_v3_reference_dividends",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "description": "A list of dividends.",
          "example": {
            "next_url": "https://api.polygon.io/v3/reference/dividends/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
            "results": [
              {
                "cash_amount": 0.22,
                "declaration_date": "2021-10-28",
                "dividend_type": "CD",
                "ex_dividend_date": "2021-11-05",
                "frequency": 4,
                "pay_date": "2021-11-11",
                "record_date": "2021-11-08",
                "ticker": "AAPL"
              },
              {
                "cash_amount": 0.22,
                "declaration_date": "2021-07-27",
                "dividend_type": "CD",
                "ex_dividend_date": "2021-08-06",
                "frequency": 4,
                "pay_date": "2021-08-12",
                "record_date": "2021-08-09",
                "ticker": "AAPL"
              }
            ],
            "status": "OK"
          },
          "properties": {
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": { "type": "string" },
            "results": {
              "items": {
                "properties": {
                  "cash_amount": {
                    "description": "The cash amount of the dividend per share owned.",
                    "type": "number",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "currency": {
                    "description": "The currency in which the dividend is paid.",
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "declaration_date": {
                    "description": "The date that the dividend was announced.",
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "dividend_type": {
                    "description": "The type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.\nLong-Term and Short-Term capital gain distributions are denoted as LT and ST, respectively.",
                    "enum": ["CD", "SC", "LT", "ST"],
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "ex_dividend_date": {
                    "description": "The date that the stock first trades without the dividend, determined by the exchange.",
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "frequency": {
                    "description": "The number of times per year the dividend is paid out.  Possible values are 0 (one-time), 1 (annually), 2 (bi-annually), 4 (quarterly), and 12 (monthly).",
                    "type": "integer",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "pay_date": {
                    "description": "The date that the dividend is paid out.",
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "record_date": {
                    "description": "The date that the stock must be held to receive the dividend, set by the company.",
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  },
                  "ticker": {
                    "description": "The ticker symbol of the dividend.",
                    "type": "string",
                    "x-polygon-go-field-tags": {
                      "tags": [{ "key": "binding", "value": "required" }]
                    }
                  }
                },
                "required": [
                  "ticker",
                  "declaration_date",
                  "ex_dividend_date",
                  "record_date",
                  "pay_date",
                  "frequency",
                  "cash_amount",
                  "dividend_type"
                ],
                "type": "object",
                "x-polygon-go-struct-tags": { "tags": ["db"] }
              },
              "type": "array"
            },
            "status": { "type": "string" }
          },
          "required": ["request_id"],
          "type": "object"
        },
        "example": "{\n \"next_url\": \"https://api.polygon.io/v3/reference/dividends/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy\",\n \"results\": [\n  {\n   \"cash_amount\": 0.22,\n   \"declaration_date\": \"2021-10-28\",\n   \"dividend_type\": \"CD\",\n   \"ex_dividend_date\": \"2021-11-05\",\n   \"frequency\": 4,\n   \"pay_date\": \"2021-11-11\",\n   \"record_date\": \"2021-11-08\",\n   \"ticker\": \"AAPL\"\n  },\n  {\n   \"cash_amount\": 0.22,\n   \"declaration_date\": \"2021-07-27\",\n   \"dividend_type\": \"CD\",\n   \"ex_dividend_date\": \"2021-08-06\",\n   \"frequency\": 4,\n   \"pay_date\": \"2021-08-12\",\n   \"record_date\": \"2021-08-09\",\n   \"ticker\": \"AAPL\"\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "Get a list of historical cash dividends, including the ticker symbol,\ndeclaration date, ex-dividend date, record date, pay date, frequency,\nand amount.",
        "operationId": "ListDividends",
        "parameters": [
          {
            "description": "Return the dividends that contain this ticker.",
            "in": "query",
            "name": "ticker",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query by ex-dividend date with the format YYYY-MM-DD.",
            "in": "query",
            "name": "ex_dividend_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query by record date with the format YYYY-MM-DD.",
            "in": "query",
            "name": "record_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query by declaration date with the format YYYY-MM-DD.",
            "in": "query",
            "name": "declaration_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query by pay date with the format YYYY-MM-DD.",
            "in": "query",
            "name": "pay_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true, "type": "string" }
          },
          {
            "description": "Query by the number of times per year the dividend is paid out.  Possible values are 0 (one-time), 1 (annually), 2 (bi-annually), 4 (quarterly), and 12 (monthly).",
            "in": "query",
            "name": "frequency",
            "schema": { "enum": [0, 1, 2, 4, 12], "type": "integer" }
          },
          {
            "description": "Query by the cash amount of the dividend.",
            "in": "query",
            "name": "cash_amount",
            "schema": { "type": "number" },
            "x-polygon-filter-field": { "range": true, "type": "number" }
          },
          {
            "description": "Query by the type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.",
            "in": "query",
            "name": "dividend_type",
            "schema": {
              "description": "The type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.\nLong-Term and Short-Term capital gain distributions are denoted as LT and ST, respectively.",
              "enum": ["CD", "SC", "LT", "ST"],
              "type": "string",
              "x-polygon-go-field-tags": {
                "tags": [{ "key": "binding", "value": "required" }]
              }
            }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 1000.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "example": 10,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "ex_dividend_date",
              "enum": [
                "ex_dividend_date",
                "pay_date",
                "declaration_date",
                "record_date",
                "cash_amount",
                "ticker"
              ],
              "example": "ex_dividend_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "A list of dividends.",
                  "example": {
                    "next_url": "https://api.polygon.io/v3/reference/dividends/AAPL?cursor=YWN0aXZlPXRydWUmZGF0ZT0yMDIxLTA0LTI1JmxpbWl0PTEmb3JkZXI9YXNjJnBhZ2VfbWFya2VyPUElN0M5YWRjMjY0ZTgyM2E1ZjBiOGUyNDc5YmZiOGE1YmYwNDVkYzU0YjgwMDcyMWE2YmI1ZjBjMjQwMjU4MjFmNGZiJnNvcnQ9dGlja2Vy",
                    "results": [
                      {
                        "cash_amount": 0.22,
                        "declaration_date": "2021-10-28",
                        "dividend_type": "CD",
                        "ex_dividend_date": "2021-11-05",
                        "frequency": 4,
                        "pay_date": "2021-11-11",
                        "record_date": "2021-11-08",
                        "ticker": "AAPL"
                      },
                      {
                        "cash_amount": 0.22,
                        "declaration_date": "2021-07-27",
                        "dividend_type": "CD",
                        "ex_dividend_date": "2021-08-06",
                        "frequency": 4,
                        "pay_date": "2021-08-12",
                        "record_date": "2021-08-09",
                        "ticker": "AAPL"
                      }
                    ],
                    "status": "OK"
                  },
                  "properties": {
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": { "type": "string" },
                    "results": {
                      "items": {
                        "properties": {
                          "cash_amount": {
                            "description": "The cash amount of the dividend per share owned.",
                            "type": "number",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "currency": {
                            "description": "The currency in which the dividend is paid.",
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "declaration_date": {
                            "description": "The date that the dividend was announced.",
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "dividend_type": {
                            "description": "The type of dividend. Dividends that have been paid and/or are expected to be paid on consistent schedules are denoted as CD.\nSpecial Cash dividends that have been paid that are infrequent or unusual, and/or can not be expected to occur in the future are denoted as SC.\nLong-Term and Short-Term capital gain distributions are denoted as LT and ST, respectively.",
                            "enum": ["CD", "SC", "LT", "ST"],
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "ex_dividend_date": {
                            "description": "The date that the stock first trades without the dividend, determined by the exchange.",
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "frequency": {
                            "description": "The number of times per year the dividend is paid out.  Possible values are 0 (one-time), 1 (annually), 2 (bi-annually), 4 (quarterly), and 12 (monthly).",
                            "type": "integer",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "pay_date": {
                            "description": "The date that the dividend is paid out.",
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "record_date": {
                            "description": "The date that the stock must be held to receive the dividend, set by the company.",
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          },
                          "ticker": {
                            "description": "The ticker symbol of the dividend.",
                            "type": "string",
                            "x-polygon-go-field-tags": {
                              "tags": [
                                { "key": "binding", "value": "required" }
                              ]
                            }
                          }
                        },
                        "required": [
                          "ticker",
                          "declaration_date",
                          "ex_dividend_date",
                          "record_date",
                          "pay_date",
                          "frequency",
                          "cash_amount",
                          "dividend_type"
                        ],
                        "type": "object",
                        "x-polygon-go-struct-tags": { "tags": ["db"] }
                      },
                      "type": "array"
                    },
                    "status": { "type": "string" }
                  },
                  "required": ["request_id"],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Dividends v3",
        "tags": ["reference:dividends"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "x-polygon-paginate": {
          "limit": { "default": 10, "max": 1000 },
          "sort": {
            "default": "ex_dividend_date",
            "enum": [
              "ex_dividend_date",
              "pay_date",
              "declaration_date",
              "record_date",
              "cash_amount",
              "ticker"
            ]
          }
        },
        "parameterTemplate": "{apiBase}/v3/reference/dividends?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/vX/reference/financials",
        "templatedPath": "/vX/reference/financials",
        "path": "get_vx_reference_financials",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": {},
        "responseSchema": {
          "properties": {
            "count": {
              "description": "The total number of results for this request.",
              "type": "integer"
            },
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request id assigned by the server.",
              "type": "string"
            },
            "results": {
              "items": {
                "properties": {
                  "cik": {
                    "description": "The CIK number for the company.",
                    "type": "string"
                  },
                  "company_name": {
                    "description": "The company name.",
                    "type": "string"
                  },
                  "end_date": {
                    "description": "The end date of the period that these financials cover in YYYYMMDD format.",
                    "type": "string"
                  },
                  "filing_date": {
                    "description": "The date that the SEC filing which these financials were derived from was made available. Note that this is not necessarily the date when this information became public, as some companies may publish a press release before filing with the SEC."
                  },
                  "financials": {
                    "properties": {
                      "balance_sheet": {
                        "description": "Balance sheet.\nNote that the keys in this object can be any of the balance sheet concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.",
                        "properties": {
                          "*": {
                            "description": "An individual financial data point.",
                            "properties": {
                              "formula": {
                                "description": "The name of the formula used to derive this data point from other financial data points.\nInformation about the formulas can be found <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://xbrlsite.azurewebsites.net/2020/reporting-scheme/us-gaap/fac/documentation/ImputeRulesList.html\">here</a>.\nThis value is only returned for data points that are not explicitly expressed within the XBRL source file when the `include_sources` query parameter is `true`."
                              },
                              "label": {
                                "description": "A human readable label for the financial data point.",
                                "type": "string"
                              },
                              "order": {
                                "description": "An indicator of what order within the statement that you would find this data point.",
                                "type": "integer"
                              },
                              "unit": {
                                "description": "The unit of the financial data point.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the financial data point.",
                                "type": "number"
                              },
                              "xpath": {
                                "description": "The <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/XPath\">XPath 1.0</a> query that identifies the fact from within the XBRL source file.\nThis value is only returned for data points taken directly from XBRL when the `include_sources` query parameter is `true`."
                              }
                            },
                            "required": ["label", "order", "value", "unit"],
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "cash_flow_statement": {
                        "description": "Cash flow statement.\nNote that the keys in this object can be any of the cash flow statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                        "type": "object"
                      },
                      "comprehensive_income": {
                        "description": "Comprehensive income.\nNote that the keys in this object can be any of the comprehensive income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                        "type": "object"
                      },
                      "income_statement": {
                        "description": "Income statement.\nNote that the keys in this object can be any of the income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "fiscal_period": {
                    "description": "Fiscal period of the report according to the company (Q1, Q2, Q3, Q4, or FY).",
                    "type": "string"
                  },
                  "fiscal_year": {
                    "description": "Fiscal year of the report according to the company.",
                    "type": "string"
                  },
                  "source_filing_file_url": {
                    "description": "The URL of the specific XBRL instance document within the SEC filing that these financials were derived from."
                  },
                  "source_filing_url": {
                    "description": "The URL of the SEC filing that these financials were derived from.",
                    "type": "string"
                  },
                  "start_date": {
                    "description": "The start date of the period that these financials cover in YYYYMMDD format.",
                    "type": "string"
                  }
                },
                "required": [
                  "reporting_period",
                  "cik",
                  "company_name",
                  "financials",
                  "fiscal_period",
                  "fiscal_year",
                  "filing_type",
                  "source_filing_url",
                  "source_filing_file_url"
                ],
                "type": "object",
                "x-polygon-go-type": {
                  "name": "ResolvedFinancials",
                  "path": "github.com/polygon-io/go-app-api-financials/extract"
                }
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "type": "string"
            }
          },
          "required": ["status", "request_id", "count", "results"],
          "type": "object"
        },
        "example": "{\n \"cik\": \"0000789019\",\n \"company_name\": \"MICROSOFT CORPORATION\",\n \"end_date\": \"2020-12-31\",\n \"financials\": {\n  \"balance_sheet\": {\n   \"assets\": {\n    \"label\": \"Assets\",\n    \"order\": 100,\n    \"unit\": \"USD\",\n    \"value\": 304137000000,\n    \"xpath\": \"//*[local-name()='Assets' and @id='F_000165']\"\n   },\n   \"equity\": {\n    \"formula\": \"BS-Impute-07\",\n    \"label\": \"Equity\",\n    \"order\": 1400,\n    \"unit\": \"USD\",\n    \"value\": 130236000000\n   },\n   \"liabilities\": {\n    \"label\": \"Liabilities\",\n    \"order\": 600,\n    \"unit\": \"USD\",\n    \"value\": 173901000000,\n    \"xpath\": \"//*[local-name()='Liabilities' and @id='F_000193']\"\n   }\n  },\n  \"cash_flow_statement\": {\n   \"exchange_gains_losses\": {\n    \"label\": \"Exchange Gains/Losses\",\n    \"order\": 1000,\n    \"unit\": \"USD\",\n    \"value\": 14000000,\n    \"xpath\": \"//*[local-name()='EffectOfExchangeRateOnCashAndCashEquivalents' and @id='F_000327']\"\n   },\n   \"net_cash_flow\": {\n    \"formula\": \"CF-Impute-20\",\n    \"label\": \"Net Cash Flow\",\n    \"order\": 1100,\n    \"unit\": \"USD\",\n    \"value\": -2773000000\n   },\n   \"net_cash_flow_from_financing_activities\": {\n    \"label\": \"Net Cash Flow From Financing Activities\",\n    \"order\": 700,\n    \"unit\": \"USD\",\n    \"value\": -13634000000,\n    \"xpath\": \"//*[local-name()='NetCashProvidedByUsedInFinancingActivities' and @id='F_000295']\"\n   }\n  },\n  \"comprehensive_income\": {\n   \"comprehensive_income_loss\": {\n    \"formula\": \"CI-Impute-04\",\n    \"label\": \"Comprehensive Income/Loss\",\n    \"order\": 100,\n    \"unit\": \"USD\",\n    \"value\": 15720000000\n   },\n   \"comprehensive_income_loss_attributable_to_parent\": {\n    \"label\": \"Comprehensive Income/Loss Attributable To Parent\",\n    \"order\": 300,\n    \"unit\": \"USD\",\n    \"value\": 15720000000,\n    \"xpath\": \"//*[local-name()='ComprehensiveIncomeNetOfTax' and @id='F_000135']\"\n   },\n   \"other_comprehensive_income_loss\": {\n    \"formula\": \"CI-Impute-07\",\n    \"label\": \"Other Comprehensive Income/Loss\",\n    \"order\": 400,\n    \"unit\": \"USD\",\n    \"value\": 15720000000\n   }\n  },\n  \"income_statement\": {\n   \"basic_earnings_per_share\": {\n    \"label\": \"Basic Earnings Per Share\",\n    \"order\": 4200,\n    \"unit\": \"USD / shares\",\n    \"value\": 2.05,\n    \"xpath\": \"//*[local-name()='EarningsPerShareBasic' and @id='F_000099']\"\n   },\n   \"cost_of_revenue\": {\n    \"label\": \"Cost Of Revenue\",\n    \"order\": 300,\n    \"unit\": \"USD\",\n    \"value\": 14194000000,\n    \"xpath\": \"//*[local-name()='CostOfGoodsAndServicesSold' and @id='F_000059']\"\n   },\n   \"gross_profit\": {\n    \"label\": \"Gross Profit\",\n    \"order\": 800,\n    \"unit\": \"USD\",\n    \"value\": 28882000000,\n    \"xpath\": \"//*[local-name()='GrossProfit' and @id='F_000063']\"\n   },\n   \"operating_expenses\": {\n    \"formula\": \"IS-Impute-22\",\n    \"label\": \"Operating Expenses\",\n    \"order\": 1000,\n    \"unit\": \"USD\",\n    \"value\": 10985000000\n   },\n   \"revenues\": {\n    \"label\": \"Revenues\",\n    \"order\": 100,\n    \"unit\": \"USD\",\n    \"value\": 43076000000,\n    \"xpath\": \"//*[local-name()='RevenueFromContractWithCustomerExcludingAssessedTax' and @id='F_000047']\"\n   }\n  }\n },\n \"fiscal_period\": \"Q2\",\n \"fiscal_year\": \"2021\",\n \"source_filing_file_url\": \"https:/api.polygon.io/v1/reference/sec/filings/0001564590-21-002316/files/0001564590-21-002316:12:msft-10q_20201231_htm.xml\",\n \"source_filing_url\": \"https://api.polygon.io/v1/reference/sec/filings/0001564590-21-002316\",\n \"start_date\": \"2020-10-01\"\n}",
        "description": "Get historical financial data for a stock ticker.\nThe financials data is extracted from XBRL from company SEC filings using the methodology outlined <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://xbrl.squarespace.com/understanding-sec-xbrl-financi/\">here</a>.",
        "operationId": "ListFinancials",
        "parameters": [
          {
            "description": "Query by company ticker.",
            "in": "query",
            "name": "ticker",
            "schema": { "type": "string" }
          },
          {
            "description": "Query by central index key (<a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://www.sec.gov/edgar/searchedgar/cik.htm\">CIK</a>) Number",
            "in": "query",
            "name": "cik",
            "schema": { "type": "string" }
          },
          {
            "description": "Query by company name.",
            "in": "query",
            "name": "company_name",
            "schema": { "type": "string" },
            "x-polygon-filter-field": { "search": true }
          },
          {
            "description": "Query by standard industrial classification (<a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://www.sec.gov/corpfin/division-of-corporation-finance-standard-industrial-classification-sic-code-list\">SIC</a>)",
            "in": "query",
            "name": "sic",
            "schema": { "type": "string" }
          },
          {
            "description": "Query by the date when the filing with financials data was filed in YYYY-MM-DD format.\n\nBest used when querying over date ranges to find financials based on filings that happen in a time period.\n\nExamples:\n\nTo get financials based on filings that have happened after January 1, 2009 use the query param filing_date.gte=2009-01-01\n\nTo get financials based on filings that happened in the year 2009 use the query params filing_date.gte=2009-01-01&filing_date.lt=2010-01-01",
            "in": "query",
            "name": "filing_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "The period of report for the filing with financials data in YYYY-MM-DD format.",
            "in": "query",
            "name": "period_of_report_date",
            "schema": { "format": "date", "type": "string" },
            "x-polygon-filter-field": { "range": true }
          },
          {
            "description": "Query by timeframe. Annual financials originate from 10-K filings, and quarterly financials originate from 10-Q filings. Note: Most companies do not file quarterly reports for Q4 and instead include those financials in their annual report, so some companies my not return quarterly financials for Q4",
            "in": "query",
            "name": "timeframe",
            "schema": { "enum": ["annual", "quarterly"], "type": "string" }
          },
          {
            "description": "Whether or not to include the `xpath` and `formula` attributes for each financial data point.\nSee the `xpath` and `formula` response attributes for more info. False by default.",
            "in": "query",
            "name": "include_sources",
            "schema": { "default": false, "type": "boolean" }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 1 and max is 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 1,
              "example": 1,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "period_of_report_date",
              "enum": ["filing_date", "period_of_report_date"],
              "example": "filing_date",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "count": 1,
                "description": "FIXME",
                "example": {
                  "cik": "0000789019",
                  "company_name": "MICROSOFT CORPORATION",
                  "end_date": "2020-12-31",
                  "financials": {
                    "balance_sheet": {
                      "assets": {
                        "label": "Assets",
                        "order": 100,
                        "unit": "USD",
                        "value": 304137000000,
                        "xpath": "//*[local-name()='Assets' and @id='F_000165']"
                      },
                      "equity": {
                        "formula": "BS-Impute-07",
                        "label": "Equity",
                        "order": 1400,
                        "unit": "USD",
                        "value": 130236000000
                      },
                      "liabilities": {
                        "label": "Liabilities",
                        "order": 600,
                        "unit": "USD",
                        "value": 173901000000,
                        "xpath": "//*[local-name()='Liabilities' and @id='F_000193']"
                      }
                    },
                    "cash_flow_statement": {
                      "exchange_gains_losses": {
                        "label": "Exchange Gains/Losses",
                        "order": 1000,
                        "unit": "USD",
                        "value": 14000000,
                        "xpath": "//*[local-name()='EffectOfExchangeRateOnCashAndCashEquivalents' and @id='F_000327']"
                      },
                      "net_cash_flow": {
                        "formula": "CF-Impute-20",
                        "label": "Net Cash Flow",
                        "order": 1100,
                        "unit": "USD",
                        "value": -2773000000
                      },
                      "net_cash_flow_from_financing_activities": {
                        "label": "Net Cash Flow From Financing Activities",
                        "order": 700,
                        "unit": "USD",
                        "value": -13634000000,
                        "xpath": "//*[local-name()='NetCashProvidedByUsedInFinancingActivities' and @id='F_000295']"
                      }
                    },
                    "comprehensive_income": {
                      "comprehensive_income_loss": {
                        "formula": "CI-Impute-04",
                        "label": "Comprehensive Income/Loss",
                        "order": 100,
                        "unit": "USD",
                        "value": 15720000000
                      },
                      "comprehensive_income_loss_attributable_to_parent": {
                        "label": "Comprehensive Income/Loss Attributable To Parent",
                        "order": 300,
                        "unit": "USD",
                        "value": 15720000000,
                        "xpath": "//*[local-name()='ComprehensiveIncomeNetOfTax' and @id='F_000135']"
                      },
                      "other_comprehensive_income_loss": {
                        "formula": "CI-Impute-07",
                        "label": "Other Comprehensive Income/Loss",
                        "order": 400,
                        "unit": "USD",
                        "value": 15720000000
                      }
                    },
                    "income_statement": {
                      "basic_earnings_per_share": {
                        "label": "Basic Earnings Per Share",
                        "order": 4200,
                        "unit": "USD / shares",
                        "value": 2.05,
                        "xpath": "//*[local-name()='EarningsPerShareBasic' and @id='F_000099']"
                      },
                      "cost_of_revenue": {
                        "label": "Cost Of Revenue",
                        "order": 300,
                        "unit": "USD",
                        "value": 14194000000,
                        "xpath": "//*[local-name()='CostOfGoodsAndServicesSold' and @id='F_000059']"
                      },
                      "gross_profit": {
                        "label": "Gross Profit",
                        "order": 800,
                        "unit": "USD",
                        "value": 28882000000,
                        "xpath": "//*[local-name()='GrossProfit' and @id='F_000063']"
                      },
                      "operating_expenses": {
                        "formula": "IS-Impute-22",
                        "label": "Operating Expenses",
                        "order": 1000,
                        "unit": "USD",
                        "value": 10985000000
                      },
                      "revenues": {
                        "label": "Revenues",
                        "order": 100,
                        "unit": "USD",
                        "value": 43076000000,
                        "xpath": "//*[local-name()='RevenueFromContractWithCustomerExcludingAssessedTax' and @id='F_000047']"
                      }
                    }
                  },
                  "fiscal_period": "Q2",
                  "fiscal_year": "2021",
                  "source_filing_file_url": "https:/api.polygon.io/v1/reference/sec/filings/0001564590-21-002316/files/0001564590-21-002316:12:msft-10q_20201231_htm.xml",
                  "source_filing_url": "https://api.polygon.io/v1/reference/sec/filings/0001564590-21-002316",
                  "start_date": "2020-10-01"
                },
                "next_url": "https:/api.polygon.io/vX/reference/financials?",
                "request_id": "28173f20a0751f3479afd9e2cc9246ea",
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "type": "integer"
                    },
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request id assigned by the server.",
                      "type": "string"
                    },
                    "results": {
                      "items": {
                        "properties": {
                          "cik": {
                            "description": "The CIK number for the company.",
                            "type": "string"
                          },
                          "company_name": {
                            "description": "The company name.",
                            "type": "string"
                          },
                          "end_date": {
                            "description": "The end date of the period that these financials cover in YYYYMMDD format.",
                            "type": "string"
                          },
                          "filing_date": {
                            "description": "The date that the SEC filing which these financials were derived from was made available. Note that this is not necessarily the date when this information became public, as some companies may publish a press release before filing with the SEC."
                          },
                          "financials": {
                            "properties": {
                              "balance_sheet": {
                                "description": "Balance sheet.\nNote that the keys in this object can be any of the balance sheet concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.",
                                "properties": {
                                  "*": {
                                    "description": "An individual financial data point.",
                                    "properties": {
                                      "formula": {
                                        "description": "The name of the formula used to derive this data point from other financial data points.\nInformation about the formulas can be found <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://xbrlsite.azurewebsites.net/2020/reporting-scheme/us-gaap/fac/documentation/ImputeRulesList.html\">here</a>.\nThis value is only returned for data points that are not explicitly expressed within the XBRL source file when the `include_sources` query parameter is `true`."
                                      },
                                      "label": {
                                        "description": "A human readable label for the financial data point.",
                                        "type": "string"
                                      },
                                      "order": {
                                        "description": "An indicator of what order within the statement that you would find this data point.",
                                        "type": "integer"
                                      },
                                      "unit": {
                                        "description": "The unit of the financial data point.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of the financial data point.",
                                        "type": "number"
                                      },
                                      "xpath": {
                                        "description": "The <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/XPath\">XPath 1.0</a> query that identifies the fact from within the XBRL source file.\nThis value is only returned for data points taken directly from XBRL when the `include_sources` query parameter is `true`."
                                      }
                                    },
                                    "required": [
                                      "label",
                                      "order",
                                      "value",
                                      "unit"
                                    ],
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "cash_flow_statement": {
                                "description": "Cash flow statement.\nNote that the keys in this object can be any of the cash flow statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                "type": "object"
                              },
                              "comprehensive_income": {
                                "description": "Comprehensive income.\nNote that the keys in this object can be any of the comprehensive income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                "type": "object"
                              },
                              "income_statement": {
                                "description": "Income statement.\nNote that the keys in this object can be any of the income statement concepts defined in <a rel=\"noopener noreferrer nofollow\" target=\"_blank\" href=\"http://www.xbrlsite.com/2016/fac/v3/Documentation/FundamentalAccountingConceptsList.html\">this table of fundamental accounting concepts</a> but converted to `snake_case`.\nSee the attributes of the objects within `balance_sheet` for more details.",
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "fiscal_period": {
                            "description": "Fiscal period of the report according to the company (Q1, Q2, Q3, Q4, or FY).",
                            "type": "string"
                          },
                          "fiscal_year": {
                            "description": "Fiscal year of the report according to the company.",
                            "type": "string"
                          },
                          "source_filing_file_url": {
                            "description": "The URL of the specific XBRL instance document within the SEC filing that these financials were derived from."
                          },
                          "source_filing_url": {
                            "description": "The URL of the SEC filing that these financials were derived from.",
                            "type": "string"
                          },
                          "start_date": {
                            "description": "The start date of the period that these financials cover in YYYYMMDD format.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "reporting_period",
                          "cik",
                          "company_name",
                          "financials",
                          "fiscal_period",
                          "fiscal_year",
                          "filing_type",
                          "source_filing_url",
                          "source_filing_file_url"
                        ],
                        "type": "object",
                        "x-polygon-go-type": {
                          "name": "ResolvedFinancials",
                          "path": "github.com/polygon-io/go-app-api-financials/extract"
                        }
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id", "count", "results"],
                  "type": "object"
                },
                "status": "OK"
              }
            },
            "description": "FIXME"
          }
        },
        "summary": "Stock Financials vX",
        "tags": ["reference:stocks"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "x-polygon-experimental": {},
        "x-polygon-paginate": {
          "limit": { "default": 1, "max": 100 },
          "sort": {
            "default": "period_of_report_date",
            "enum": ["filing_date", "period_of_report_date"]
          }
        },
        "parameterTemplate": "{apiBase}/vX/reference/financials?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/conditions",
        "templatedPath": "/v3/reference/conditions",
        "path": "get_v3_reference_conditions",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "example": {
            "count": 1,
            "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe",
            "results": [
              {
                "asset_class": "stocks",
                "data_types": ["trade"],
                "id": 2,
                "name": "Average Price Trade",
                "sip_mapping": { "CTA": "B", "UTP": "W" },
                "type": "condition",
                "update_rules": {
                  "consolidated": {
                    "updates_high_low": false,
                    "updates_open_close": false,
                    "updates_volume": true
                  },
                  "market_center": {
                    "updates_high_low": false,
                    "updates_open_close": false,
                    "updates_volume": true
                  }
                }
              }
            ],
            "status": "OK"
          },
          "properties": {
            "count": {
              "description": "The total number of results for this request.",
              "example": 1,
              "type": "integer"
            },
            "next_url": {
              "description": "If present, this value can be used to fetch the next page of data.",
              "type": "string"
            },
            "request_id": {
              "description": "A request ID assigned by the server.",
              "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
              "type": "string"
            },
            "results": {
              "description": "An array of conditions that match your query.",
              "items": {
                "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                "properties": {
                  "abbreviation": {
                    "description": "A commonly-used abbreviation for this condition.",
                    "type": "string"
                  },
                  "asset_class": {
                    "description": "An identifier for a group of similar financial instruments.",
                    "enum": ["stocks", "options", "crypto", "fx"],
                    "example": "stocks",
                    "type": "string"
                  },
                  "data_types": {
                    "description": "Data types that this condition applies to.",
                    "items": {
                      "description": "The type of financial data represented by a data model.",
                      "enum": ["trade", "bbo", "nbbo"],
                      "example": "trade",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "description": {
                    "description": "A short description of the semantics of this condition.",
                    "type": "string"
                  },
                  "exchange": {
                    "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                    "type": "integer"
                  },
                  "id": {
                    "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                    "example": 1,
                    "type": "integer"
                  },
                  "legacy": {
                    "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name of this condition.",
                    "example": "Acquisition",
                    "type": "string"
                  },
                  "sip_mapping": {
                    "description": "A mapping to a symbol for each SIP that has this condition.",
                    "properties": {
                      "CTA": { "type": "string" },
                      "OPRA": { "type": "string" },
                      "UTP": { "type": "string" }
                    },
                    "type": "object"
                  },
                  "type": {
                    "description": "An identifier for a collection of related conditions.",
                    "enum": [
                      "sale_condition",
                      "quote_condition",
                      "sip_generated_flag",
                      "financial_status_indicator",
                      "short_sale_restriction_indicator",
                      "settlement_condition",
                      "market_condition",
                      "trade_thru_exempt"
                    ],
                    "type": "string"
                  },
                  "update_rules": {
                    "description": "A list of aggregation rules.",
                    "properties": {
                      "consolidated": {
                        "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                        "properties": {
                          "updates_high_low": {
                            "description": "Whether or not trades with this condition update the high/low.",
                            "type": "boolean"
                          },
                          "updates_open_close": {
                            "description": "Whether or not trades with this condition update the open/close.",
                            "type": "boolean"
                          },
                          "updates_volume": {
                            "description": "Whether or not trades with this condition update the volume.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "updates_high_low",
                          "updates_open_close",
                          "updates_volume"
                        ],
                        "type": "object"
                      },
                      "market_center": {
                        "description": "Describes aggregation rules on a per-market-center basis.",
                        "properties": {
                          "updates_high_low": {
                            "description": "Whether or not trades with this condition update the high/low.",
                            "type": "boolean"
                          },
                          "updates_open_close": {
                            "description": "Whether or not trades with this condition update the open/close.",
                            "type": "boolean"
                          },
                          "updates_volume": {
                            "description": "Whether or not trades with this condition update the volume.",
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "updates_high_low",
                          "updates_open_close",
                          "updates_volume"
                        ],
                        "type": "object"
                      }
                    },
                    "required": ["consolidated", "market_center"],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "type",
                  "name",
                  "asset_class",
                  "sip_mapping",
                  "data_types"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "example": "OK",
              "type": "string"
            }
          },
          "required": ["status", "request_id", "count", "results"],
          "type": "object"
        },
        "example": "{\n \"count\": 1,\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": [\n  {\n   \"asset_class\": \"stocks\",\n   \"data_types\": [\n    \"trade\"\n   ],\n   \"id\": 2,\n   \"name\": \"Average Price Trade\",\n   \"sip_mapping\": {\n    \"CTA\": \"B\",\n    \"UTP\": \"W\"\n   },\n   \"type\": \"condition\",\n   \"update_rules\": {\n    \"consolidated\": {\n     \"updates_high_low\": false,\n     \"updates_open_close\": false,\n     \"updates_volume\": true\n    },\n    \"market_center\": {\n     \"updates_high_low\": false,\n     \"updates_open_close\": false,\n     \"updates_volume\": true\n    }\n   }\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "List all conditions that Polygon.io uses.",
        "operationId": "ListConditions",
        "parameters": [
          {
            "description": "Filter for conditions within a given asset class.",
            "in": "query",
            "name": "asset_class",
            "schema": {
              "description": "An identifier for a group of similar financial instruments.",
              "enum": ["stocks", "options", "crypto", "fx"],
              "example": "stocks",
              "type": "string"
            }
          },
          {
            "description": "Filter by data type.",
            "in": "query",
            "name": "data_type",
            "schema": {
              "description": "The type of financial data represented by a data model.",
              "enum": ["trade", "bbo", "nbbo"],
              "example": "trade",
              "type": "string"
            }
          },
          {
            "description": "Filter for conditions with a given ID.",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
              "example": 1,
              "type": "integer"
            }
          },
          {
            "description": "Filter by SIP. If the condition contains a mapping for that SIP, the condition will be returned.",
            "in": "query",
            "name": "sip",
            "schema": {
              "description": "One of the SIPs.",
              "enum": ["CTA", "UTP", "OPRA"],
              "example": "CTA",
              "type": "string"
            }
          },
          {
            "description": "Order results based on the `sort` field.",
            "in": "query",
            "name": "order",
            "schema": {
              "enum": ["asc", "desc"],
              "example": "asc",
              "type": "string"
            }
          },
          {
            "description": "Limit the number of results returned, default is 10 and max is 1000.",
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 10,
              "example": 10,
              "maximum": 1000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort field used for ordering.",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "asset_class",
              "enum": [
                "asset_class",
                "id",
                "type",
                "name",
                "data_types",
                "legacy"
              ],
              "example": "asset_class",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "count": 1,
                    "request_id": "31d59dda-80e5-4721-8496-d0d32a654afe",
                    "results": [
                      {
                        "asset_class": "stocks",
                        "data_types": ["trade"],
                        "id": 2,
                        "name": "Average Price Trade",
                        "sip_mapping": { "CTA": "B", "UTP": "W" },
                        "type": "condition",
                        "update_rules": {
                          "consolidated": {
                            "updates_high_low": false,
                            "updates_open_close": false,
                            "updates_volume": true
                          },
                          "market_center": {
                            "updates_high_low": false,
                            "updates_open_close": false,
                            "updates_volume": true
                          }
                        }
                      }
                    ],
                    "status": "OK"
                  },
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "results": {
                      "description": "An array of conditions that match your query.",
                      "items": {
                        "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                        "properties": {
                          "abbreviation": {
                            "description": "A commonly-used abbreviation for this condition.",
                            "type": "string"
                          },
                          "asset_class": {
                            "description": "An identifier for a group of similar financial instruments.",
                            "enum": ["stocks", "options", "crypto", "fx"],
                            "example": "stocks",
                            "type": "string"
                          },
                          "data_types": {
                            "description": "Data types that this condition applies to.",
                            "items": {
                              "description": "The type of financial data represented by a data model.",
                              "enum": ["trade", "bbo", "nbbo"],
                              "example": "trade",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "description": {
                            "description": "A short description of the semantics of this condition.",
                            "type": "string"
                          },
                          "exchange": {
                            "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                            "example": 1,
                            "type": "integer"
                          },
                          "legacy": {
                            "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of this condition.",
                            "example": "Acquisition",
                            "type": "string"
                          },
                          "sip_mapping": {
                            "description": "A mapping to a symbol for each SIP that has this condition.",
                            "properties": {
                              "CTA": { "type": "string" },
                              "OPRA": { "type": "string" },
                              "UTP": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "An identifier for a collection of related conditions.",
                            "enum": [
                              "sale_condition",
                              "quote_condition",
                              "sip_generated_flag",
                              "financial_status_indicator",
                              "short_sale_restriction_indicator",
                              "settlement_condition",
                              "market_condition",
                              "trade_thru_exempt"
                            ],
                            "type": "string"
                          },
                          "update_rules": {
                            "description": "A list of aggregation rules.",
                            "properties": {
                              "consolidated": {
                                "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                "properties": {
                                  "updates_high_low": {
                                    "description": "Whether or not trades with this condition update the high/low.",
                                    "type": "boolean"
                                  },
                                  "updates_open_close": {
                                    "description": "Whether or not trades with this condition update the open/close.",
                                    "type": "boolean"
                                  },
                                  "updates_volume": {
                                    "description": "Whether or not trades with this condition update the volume.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "updates_high_low",
                                  "updates_open_close",
                                  "updates_volume"
                                ],
                                "type": "object"
                              },
                              "market_center": {
                                "description": "Describes aggregation rules on a per-market-center basis.",
                                "properties": {
                                  "updates_high_low": {
                                    "description": "Whether or not trades with this condition update the high/low.",
                                    "type": "boolean"
                                  },
                                  "updates_open_close": {
                                    "description": "Whether or not trades with this condition update the open/close.",
                                    "type": "boolean"
                                  },
                                  "updates_volume": {
                                    "description": "Whether or not trades with this condition update the volume.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "updates_high_low",
                                  "updates_open_close",
                                  "updates_volume"
                                ],
                                "type": "object"
                              }
                            },
                            "required": ["consolidated", "market_center"],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "name",
                          "asset_class",
                          "sip_mapping",
                          "data_types"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id", "count", "results"],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "results": {
                      "description": "An array of conditions that match your query.",
                      "items": {
                        "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                        "properties": {
                          "abbreviation": {
                            "description": "A commonly-used abbreviation for this condition.",
                            "type": "string"
                          },
                          "asset_class": {
                            "description": "An identifier for a group of similar financial instruments.",
                            "enum": ["stocks", "options", "crypto", "fx"],
                            "example": "stocks",
                            "type": "string"
                          },
                          "data_types": {
                            "description": "Data types that this condition applies to.",
                            "items": {
                              "description": "The type of financial data represented by a data model.",
                              "enum": ["trade", "bbo", "nbbo"],
                              "example": "trade",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "description": {
                            "description": "A short description of the semantics of this condition.",
                            "type": "string"
                          },
                          "exchange": {
                            "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                            "example": 1,
                            "type": "integer"
                          },
                          "legacy": {
                            "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of this condition.",
                            "example": "Acquisition",
                            "type": "string"
                          },
                          "sip_mapping": {
                            "description": "A mapping to a symbol for each SIP that has this condition.",
                            "properties": {
                              "CTA": { "type": "string" },
                              "OPRA": { "type": "string" },
                              "UTP": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "An identifier for a collection of related conditions.",
                            "enum": [
                              "sale_condition",
                              "quote_condition",
                              "sip_generated_flag",
                              "financial_status_indicator",
                              "short_sale_restriction_indicator",
                              "settlement_condition",
                              "market_condition",
                              "trade_thru_exempt"
                            ],
                            "type": "string"
                          },
                          "update_rules": {
                            "description": "A list of aggregation rules.",
                            "properties": {
                              "consolidated": {
                                "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                "properties": {
                                  "updates_high_low": {
                                    "description": "Whether or not trades with this condition update the high/low.",
                                    "type": "boolean"
                                  },
                                  "updates_open_close": {
                                    "description": "Whether or not trades with this condition update the open/close.",
                                    "type": "boolean"
                                  },
                                  "updates_volume": {
                                    "description": "Whether or not trades with this condition update the volume.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "updates_high_low",
                                  "updates_open_close",
                                  "updates_volume"
                                ],
                                "type": "object"
                              },
                              "market_center": {
                                "description": "Describes aggregation rules on a per-market-center basis.",
                                "properties": {
                                  "updates_high_low": {
                                    "description": "Whether or not trades with this condition update the high/low.",
                                    "type": "boolean"
                                  },
                                  "updates_open_close": {
                                    "description": "Whether or not trades with this condition update the open/close.",
                                    "type": "boolean"
                                  },
                                  "updates_volume": {
                                    "description": "Whether or not trades with this condition update the volume.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "updates_high_low",
                                  "updates_open_close",
                                  "updates_volume"
                                ],
                                "type": "object"
                              }
                            },
                            "required": ["consolidated", "market_center"],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "name",
                          "asset_class",
                          "sip_mapping",
                          "data_types"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id", "count", "results"],
                  "type": "object"
                }
              }
            },
            "description": "a query parameter was malformed"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "next_url": {
                      "description": "If present, this value can be used to fetch the next page of data.",
                      "type": "string"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "results": {
                      "description": "An array of conditions that match your query.",
                      "items": {
                        "description": "A condition generally refers to any extra information passed in a trade or a quote. These conditions\nmay or may not affect the behavior of aggregates.",
                        "properties": {
                          "abbreviation": {
                            "description": "A commonly-used abbreviation for this condition.",
                            "type": "string"
                          },
                          "asset_class": {
                            "description": "An identifier for a group of similar financial instruments.",
                            "enum": ["stocks", "options", "crypto", "fx"],
                            "example": "stocks",
                            "type": "string"
                          },
                          "data_types": {
                            "description": "Data types that this condition applies to.",
                            "items": {
                              "description": "The type of financial data represented by a data model.",
                              "enum": ["trade", "bbo", "nbbo"],
                              "example": "trade",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "description": {
                            "description": "A short description of the semantics of this condition.",
                            "type": "string"
                          },
                          "exchange": {
                            "description": "If present, mapping this condition from a Polygon.io code to a SIP symbol depends on this attribute.\nIn other words, data with this condition attached comes exclusively from the given exchange.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "An identifier used by Polygon.io for this condition. Unique per data type.",
                            "example": 1,
                            "type": "integer"
                          },
                          "legacy": {
                            "description": "If true, this condition is from an old version of the SIPs' specs and no longer is used.\nOther conditions may or may not reuse the same symbol as this one.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of this condition.",
                            "example": "Acquisition",
                            "type": "string"
                          },
                          "sip_mapping": {
                            "description": "A mapping to a symbol for each SIP that has this condition.",
                            "properties": {
                              "CTA": { "type": "string" },
                              "OPRA": { "type": "string" },
                              "UTP": { "type": "string" }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "An identifier for a collection of related conditions.",
                            "enum": [
                              "sale_condition",
                              "quote_condition",
                              "sip_generated_flag",
                              "financial_status_indicator",
                              "short_sale_restriction_indicator",
                              "settlement_condition",
                              "market_condition",
                              "trade_thru_exempt"
                            ],
                            "type": "string"
                          },
                          "update_rules": {
                            "description": "A list of aggregation rules.",
                            "properties": {
                              "consolidated": {
                                "description": "Describes aggregation rules on a consolidated (all exchanges) basis.",
                                "properties": {
                                  "updates_high_low": {
                                    "description": "Whether or not trades with this condition update the high/low.",
                                    "type": "boolean"
                                  },
                                  "updates_open_close": {
                                    "description": "Whether or not trades with this condition update the open/close.",
                                    "type": "boolean"
                                  },
                                  "updates_volume": {
                                    "description": "Whether or not trades with this condition update the volume.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "updates_high_low",
                                  "updates_open_close",
                                  "updates_volume"
                                ],
                                "type": "object"
                              },
                              "market_center": {
                                "description": "Describes aggregation rules on a per-market-center basis.",
                                "properties": {
                                  "updates_high_low": {
                                    "description": "Whether or not trades with this condition update the high/low.",
                                    "type": "boolean"
                                  },
                                  "updates_open_close": {
                                    "description": "Whether or not trades with this condition update the open/close.",
                                    "type": "boolean"
                                  },
                                  "updates_volume": {
                                    "description": "Whether or not trades with this condition update the volume.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "updates_high_low",
                                  "updates_open_close",
                                  "updates_volume"
                                ],
                                "type": "object"
                              }
                            },
                            "required": ["consolidated", "market_center"],
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "name",
                          "asset_class",
                          "sip_mapping",
                          "data_types"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id", "count", "results"],
                  "type": "object"
                }
              }
            },
            "description": "an unknown error occurred"
          }
        },
        "summary": "Conditions",
        "tags": ["reference:conditions"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "x-polygon-paginate": {
          "limit": { "default": 10, "max": 1000 },
          "sort": {
            "default": "asset_class",
            "enum": [
              "asset_class",
              "id",
              "type",
              "name",
              "data_types",
              "legacy"
            ]
          }
        },
        "parameterTemplate": "{apiBase}/v3/reference/conditions?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "id": "/v3/reference/exchanges",
        "templatedPath": "/v3/reference/exchanges",
        "path": "get_v3_reference_exchanges",
        "entitlements": {
          "dataType": "reference",
          "market": null,
          "timeframes": null
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "properties": {
            "count": {
              "description": "The total number of results for this request.",
              "example": 1,
              "type": "integer"
            },
            "request_id": {
              "description": "A request ID assigned by the server.",
              "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
              "type": "string"
            },
            "results": {
              "items": {
                "description": "An entity that reports trades.",
                "properties": {
                  "acronym": {
                    "description": "A commonly used abbreviation for this exchange.",
                    "example": "AMEX",
                    "type": "string"
                  },
                  "asset_class": {
                    "description": "An identifier for a group of similar financial instruments.",
                    "enum": ["stocks", "options", "crypto", "fx"],
                    "example": "stocks",
                    "type": "string"
                  },
                  "id": {
                    "description": "A unique identifier used by Polygon.io for this exchange.",
                    "example": 1,
                    "type": "integer"
                  },
                  "locale": {
                    "description": "An identifier for a geographical location.",
                    "enum": ["us", "global"],
                    "example": "us",
                    "type": "string"
                  },
                  "mic": {
                    "description": "The Market Identifer Code of this exchange (see ISO 10383).",
                    "example": "XASE",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of this exchange.",
                    "example": "NYSE American, LLC",
                    "type": "string"
                  },
                  "operating_mic": {
                    "description": "The MIC of the entity that operates this exchange.",
                    "example": "XNYS",
                    "type": "string"
                  },
                  "participant_id": {
                    "description": "The ID used by SIP's to represent this exchange.",
                    "example": "A",
                    "type": "string"
                  },
                  "type": {
                    "description": "Represents the type of exchange.",
                    "enum": ["exchange", "TRF", "SIP"],
                    "example": "exchange",
                    "type": "string"
                  },
                  "url": {
                    "description": "A link to this exchange's website, if one exists.",
                    "example": "https://www.nyse.com/markets/nyse-american",
                    "type": "string"
                  }
                },
                "required": ["id", "type", "asset_class", "locale", "name"],
                "type": "object"
              },
              "type": "array"
            },
            "status": {
              "description": "The status of this request's response.",
              "example": "OK",
              "type": "string"
            }
          },
          "required": ["status", "request_id"],
          "type": "object"
        },
        "example": "{\n \"count\": 1,\n \"request_id\": \"31d59dda-80e5-4721-8496-d0d32a654afe\",\n \"results\": [\n  {\n   \"acronym\": \"AMEX\",\n   \"asset_class\": \"stocks\",\n   \"id\": 1,\n   \"locale\": \"us\",\n   \"mic\": \"XASE\",\n   \"name\": \"NYSE American, LLC\",\n   \"operating_mic\": \"XNYS\",\n   \"participant_id\": \"A\",\n   \"type\": \"exchange\",\n   \"url\": \"https://www.nyse.com/markets/nyse-american\"\n  }\n ],\n \"status\": \"OK\"\n}",
        "description": "List all exchanges that Polygon.io knows about.",
        "operationId": "ListExchanges",
        "parameters": [
          {
            "description": "Filter by asset class.",
            "in": "query",
            "name": "asset_class",
            "schema": {
              "description": "An identifier for a group of similar financial instruments.",
              "enum": ["stocks", "options", "crypto", "fx"],
              "example": "stocks",
              "type": "string"
            }
          },
          {
            "description": "Filter by locale.",
            "in": "query",
            "name": "locale",
            "schema": {
              "description": "An identifier for a geographical location.",
              "enum": ["us", "global"],
              "example": "us",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "results": {
                      "items": {
                        "description": "An entity that reports trades.",
                        "properties": {
                          "acronym": {
                            "description": "A commonly used abbreviation for this exchange.",
                            "example": "AMEX",
                            "type": "string"
                          },
                          "asset_class": {
                            "description": "An identifier for a group of similar financial instruments.",
                            "enum": ["stocks", "options", "crypto", "fx"],
                            "example": "stocks",
                            "type": "string"
                          },
                          "id": {
                            "description": "A unique identifier used by Polygon.io for this exchange.",
                            "example": 1,
                            "type": "integer"
                          },
                          "locale": {
                            "description": "An identifier for a geographical location.",
                            "enum": ["us", "global"],
                            "example": "us",
                            "type": "string"
                          },
                          "mic": {
                            "description": "The Market Identifer Code of this exchange (see ISO 10383).",
                            "example": "XASE",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of this exchange.",
                            "example": "NYSE American, LLC",
                            "type": "string"
                          },
                          "operating_mic": {
                            "description": "The MIC of the entity that operates this exchange.",
                            "example": "XNYS",
                            "type": "string"
                          },
                          "participant_id": {
                            "description": "The ID used by SIP's to represent this exchange.",
                            "example": "A",
                            "type": "string"
                          },
                          "type": {
                            "description": "Represents the type of exchange.",
                            "enum": ["exchange", "TRF", "SIP"],
                            "example": "exchange",
                            "type": "string"
                          },
                          "url": {
                            "description": "A link to this exchange's website, if one exists.",
                            "example": "https://www.nyse.com/markets/nyse-american",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "asset_class",
                          "locale",
                          "name"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id"],
                  "type": "object"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id"],
                  "type": "object"
                }
              }
            },
            "description": "a query parameter was malformed"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "description": "The total number of results for this request.",
                      "example": 1,
                      "type": "integer"
                    },
                    "request_id": {
                      "description": "A request ID assigned by the server.",
                      "example": "31d59dda-80e5-4721-8496-d0d32a654afe",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of this request's response.",
                      "example": "OK",
                      "type": "string"
                    }
                  },
                  "required": ["status", "request_id"],
                  "type": "object"
                }
              }
            },
            "description": "an unknown error occurred"
          }
        },
        "summary": "Exchanges",
        "tags": ["reference:exchanges"],
        "x-polygon-entitlement-data-type": {
          "description": "Reference data",
          "name": "reference"
        },
        "parameterTemplate": "{apiBase}/v3/reference/exchanges?{optionalParameters}apiKey={apiKey}",
        "method": "get"
      },
      {
        "path": "ws_getting-started",
        "summary": "Getting Started",
        "method": "ws",
        "description": "\nThe Polygon.io Stocks WebSocket API provides streaming access to the latest stock market data from all US stock exchanges. \n"
      },
      {
        "id": "/stocks/AM",
        "templatedPath": "/stocks",
        "path": "ws_stocks_am",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": ["delayed", "realtime"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "type": "object",
          "properties": {
            "ev": { "description": "The event type.", "enum": ["AM"] },
            "sym": {
              "type": "string",
              "description": "The ticker symbol for the given stock."
            },
            "v": { "type": "integer", "description": "The tick volume." },
            "av": {
              "type": "integer",
              "description": "Today's accumulated volume."
            },
            "op": {
              "type": "number",
              "format": "double",
              "description": "Today's official opening price."
            },
            "vw": {
              "type": "number",
              "format": "float",
              "description": "The tick's volume weighted average price."
            },
            "o": {
              "type": "number",
              "format": "double",
              "description": "The opening tick price for this aggregate window."
            },
            "c": {
              "type": "number",
              "format": "double",
              "description": "The closing tick price for this aggregate window."
            },
            "h": {
              "type": "number",
              "format": "double",
              "description": "The highest tick price for this aggregate window."
            },
            "l": {
              "type": "number",
              "format": "double",
              "description": "The lowest tick price for this aggregate window."
            },
            "a": {
              "type": "number",
              "format": "float",
              "description": "Today's volume weighted average price."
            },
            "z": {
              "type": "integer",
              "description": "The average trade size for this aggregate window."
            },
            "s": {
              "type": "integer",
              "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
            },
            "e": {
              "type": "integer",
              "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
            },
            "otc": {
              "type": "boolean",
              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
            }
          }
        },
        "example": "{\n \"ev\": \"AM\",\n \"sym\": \"GTE\",\n \"v\": 4110,\n \"av\": 9470157,\n \"op\": 0.4372,\n \"vw\": 0.4488,\n \"o\": 0.4488,\n \"c\": 0.4486,\n \"h\": 0.4489,\n \"l\": 0.4486,\n \"a\": 0.4352,\n \"z\": 685,\n \"s\": 1610144640000,\n \"e\": 1610144700000\n}",
        "summary": "Aggregates (Per Minute)",
        "description": "Stream real-time minute aggregates for a given stock ticker symbol.\n",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
            "required": true,
            "schema": { "type": "string", "pattern": "/^([a-zA-Z]+)$/" },
            "example": "*"
          }
        ],
        "responses": {
          "200": {
            "description": "The WebSocket message for a minute aggregate event.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ev": { "description": "The event type." },
                        "sym": {
                          "type": "string",
                          "description": "The ticker symbol for the given stock."
                        },
                        "v": {
                          "type": "integer",
                          "description": "The tick volume."
                        },
                        "av": {
                          "type": "integer",
                          "description": "Today's accumulated volume."
                        },
                        "op": {
                          "type": "number",
                          "format": "double",
                          "description": "Today's official opening price."
                        },
                        "vw": {
                          "type": "number",
                          "format": "float",
                          "description": "The tick's volume weighted average price."
                        },
                        "o": {
                          "type": "number",
                          "format": "double",
                          "description": "The opening tick price for this aggregate window."
                        },
                        "c": {
                          "type": "number",
                          "format": "double",
                          "description": "The closing tick price for this aggregate window."
                        },
                        "h": {
                          "type": "number",
                          "format": "double",
                          "description": "The highest tick price for this aggregate window."
                        },
                        "l": {
                          "type": "number",
                          "format": "double",
                          "description": "The lowest tick price for this aggregate window."
                        },
                        "a": {
                          "type": "number",
                          "format": "float",
                          "description": "Today's volume weighted average price."
                        },
                        "z": {
                          "type": "integer",
                          "description": "The average trade size for this aggregate window."
                        },
                        "s": {
                          "type": "integer",
                          "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
                        },
                        "e": {
                          "type": "integer",
                          "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
                        },
                        "otc": {
                          "type": "boolean",
                          "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
                        }
                      }
                    },
                    {
                      "properties": {
                        "ev": {
                          "enum": ["AM"],
                          "description": "The event type."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ev": "AM",
                  "sym": "GTE",
                  "v": 4110,
                  "av": 9470157,
                  "op": 0.4372,
                  "vw": 0.4488,
                  "o": 0.4488,
                  "c": 0.4486,
                  "h": 0.4489,
                  "l": 0.4486,
                  "a": 0.4352,
                  "z": 685,
                  "s": 1610144640000,
                  "e": 1610144700000
                }
              }
            }
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          { "name": "delayed", "description": "15 minute delayed data" },
          { "name": "realtime", "description": "Real Time Data" }
        ],
        "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"AM.{ticker}\"}",
        "method": "ws"
      },
      {
        "id": "/stocks/A",
        "templatedPath": "/stocks",
        "path": "ws_stocks_a",
        "entitlements": {
          "dataType": "aggregates",
          "market": "stocks",
          "timeframes": ["delayed", "realtime"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "type": "object",
          "properties": {
            "ev": { "description": "The event type.", "enum": ["A"] },
            "sym": {
              "type": "string",
              "description": "The ticker symbol for the given stock."
            },
            "v": { "type": "integer", "description": "The tick volume." },
            "av": {
              "type": "integer",
              "description": "Today's accumulated volume."
            },
            "op": {
              "type": "number",
              "format": "double",
              "description": "Today's official opening price."
            },
            "vw": {
              "type": "number",
              "format": "float",
              "description": "The tick's volume weighted average price."
            },
            "o": {
              "type": "number",
              "format": "double",
              "description": "The opening tick price for this aggregate window."
            },
            "c": {
              "type": "number",
              "format": "double",
              "description": "The closing tick price for this aggregate window."
            },
            "h": {
              "type": "number",
              "format": "double",
              "description": "The highest tick price for this aggregate window."
            },
            "l": {
              "type": "number",
              "format": "double",
              "description": "The lowest tick price for this aggregate window."
            },
            "a": {
              "type": "number",
              "format": "float",
              "description": "Today's volume weighted average price."
            },
            "z": {
              "type": "integer",
              "description": "The average trade size for this aggregate window."
            },
            "s": {
              "type": "integer",
              "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
            },
            "e": {
              "type": "integer",
              "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
            },
            "otc": {
              "type": "boolean",
              "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
            }
          }
        },
        "example": "{\n \"ev\": \"A\",\n \"sym\": \"SPCE\",\n \"v\": 200,\n \"av\": 8642007,\n \"op\": 25.66,\n \"vw\": 25.3981,\n \"o\": 25.39,\n \"c\": 25.39,\n \"h\": 25.39,\n \"l\": 25.39,\n \"a\": 25.3714,\n \"z\": 50,\n \"s\": 1610144868000,\n \"e\": 1610144869000\n}",
        "summary": "Aggregates (Per Second)",
        "description": "Stream real-time second aggregates for a given stock ticker symbol.\n",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
            "required": true,
            "schema": { "type": "string", "pattern": "/^([a-zA-Z]+)$/" },
            "example": "*"
          }
        ],
        "responses": {
          "200": {
            "description": "The WebSocket message for a second aggregate event.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "ev": { "description": "The event type." },
                        "sym": {
                          "type": "string",
                          "description": "The ticker symbol for the given stock."
                        },
                        "v": {
                          "type": "integer",
                          "description": "The tick volume."
                        },
                        "av": {
                          "type": "integer",
                          "description": "Today's accumulated volume."
                        },
                        "op": {
                          "type": "number",
                          "format": "double",
                          "description": "Today's official opening price."
                        },
                        "vw": {
                          "type": "number",
                          "format": "float",
                          "description": "The tick's volume weighted average price."
                        },
                        "o": {
                          "type": "number",
                          "format": "double",
                          "description": "The opening tick price for this aggregate window."
                        },
                        "c": {
                          "type": "number",
                          "format": "double",
                          "description": "The closing tick price for this aggregate window."
                        },
                        "h": {
                          "type": "number",
                          "format": "double",
                          "description": "The highest tick price for this aggregate window."
                        },
                        "l": {
                          "type": "number",
                          "format": "double",
                          "description": "The lowest tick price for this aggregate window."
                        },
                        "a": {
                          "type": "number",
                          "format": "float",
                          "description": "Today's volume weighted average price."
                        },
                        "z": {
                          "type": "integer",
                          "description": "The average trade size for this aggregate window."
                        },
                        "s": {
                          "type": "integer",
                          "description": "The timestamp of the starting tick for this aggregate window in Unix Milliseconds."
                        },
                        "e": {
                          "type": "integer",
                          "description": "The timestamp of the ending tick for this aggregate window in Unix Milliseconds."
                        },
                        "otc": {
                          "type": "boolean",
                          "description": "Whether or not this aggregate is for an OTC ticker. This field will be left off if false."
                        }
                      }
                    },
                    {
                      "properties": {
                        "ev": {
                          "enum": ["A"],
                          "description": "The event type."
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "ev": "A",
                  "sym": "SPCE",
                  "v": 200,
                  "av": 8642007,
                  "op": 25.66,
                  "vw": 25.3981,
                  "o": 25.39,
                  "c": 25.39,
                  "h": 25.39,
                  "l": 25.39,
                  "a": 25.3714,
                  "z": 50,
                  "s": 1610144868000,
                  "e": 1610144869000
                }
              }
            }
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "aggregates",
          "description": "Aggregate data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          { "name": "delayed", "description": "15 minute delayed data" },
          { "name": "realtime", "description": "Real Time Data" }
        ],
        "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"A.{ticker}\"}",
        "method": "ws"
      },
      {
        "id": "/stocks/T",
        "templatedPath": "/stocks",
        "path": "ws_stocks_t",
        "entitlements": {
          "dataType": "trades",
          "market": "stocks",
          "timeframes": ["delayed", "realtime"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "type": "object",
          "properties": {
            "ev": { "enum": ["T"], "description": "The event type." },
            "sym": {
              "type": "string",
              "description": "The ticker symbol for the given stock."
            },
            "x": {
              "type": "integer",
              "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
            },
            "i": { "type": "string", "description": "The trade ID." },
            "z": {
              "type": "integer",
              "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
            },
            "p": {
              "type": "number",
              "format": "double",
              "description": "The price."
            },
            "s": { "type": "integer", "description": "The trade size." },
            "c": {
              "type": "array",
              "description": "The trade conditions. See <a target=\"_blank\" href=\"https://polygon.io/glossary/us/stocks/conditions-indicators\" \nalt=\"Conditions and Indicators\">Conditions and Indicators\"</a> for Polygon.io's trade conditions glossary.\n",
              "items": {
                "type": "integer",
                "description": "The ID of the condition."
              }
            },
            "t": {
              "type": "integer",
              "description": "The Timestamp in Unix MS."
            },
            "q": {
              "type": "integer",
              "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
            }
          }
        },
        "example": "{\n \"ev\": \"T\",\n \"sym\": \"MSFT\",\n \"x\": 4,\n \"i\": \"12345\",\n \"z\": 3,\n \"p\": 114.125,\n \"s\": 100,\n \"c\": [\n  0,\n  12\n ],\n \"t\": 1536036818784,\n \"q\": 3681328\n}",
        "summary": "Trades",
        "description": "Stream real-time trades for a given stock ticker symbol.\n",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
            "required": true,
            "schema": { "type": "string", "pattern": "/^([a-zA-Z]+)$/" },
            "example": "*"
          }
        ],
        "responses": {
          "200": {
            "description": "The WebSocket message for a trade event.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ev": { "enum": ["T"], "description": "The event type." },
                    "sym": {
                      "type": "string",
                      "description": "The ticker symbol for the given stock."
                    },
                    "x": {
                      "type": "integer",
                      "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                    },
                    "i": { "type": "string", "description": "The trade ID." },
                    "z": {
                      "type": "integer",
                      "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
                    },
                    "p": {
                      "type": "number",
                      "format": "double",
                      "description": "The price."
                    },
                    "s": {
                      "type": "integer",
                      "description": "The trade size."
                    },
                    "c": {
                      "type": "array",
                      "description": "The trade conditions. See <a target=\"_blank\" href=\"https://polygon.io/glossary/us/stocks/conditions-indicators\" \nalt=\"Conditions and Indicators\">Conditions and Indicators\"</a> for Polygon.io's trade conditions glossary.\n",
                      "items": {
                        "type": "integer",
                        "description": "The ID of the condition."
                      }
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Timestamp in Unix MS."
                    },
                    "q": {
                      "type": "integer",
                      "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                    }
                  }
                },
                "example": {
                  "ev": "T",
                  "sym": "MSFT",
                  "x": 4,
                  "i": "12345",
                  "z": 3,
                  "p": 114.125,
                  "s": 100,
                  "c": [0, 12],
                  "t": 1536036818784,
                  "q": 3681328
                }
              }
            }
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "trades",
          "description": "Trade data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          { "name": "delayed", "description": "15 minute delayed data" },
          { "name": "realtime", "description": "Real Time Data" }
        ],
        "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"T.{ticker}\"}",
        "method": "ws"
      },
      {
        "id": "/stocks/Q",
        "templatedPath": "/stocks",
        "path": "ws_stocks_q",
        "entitlements": {
          "dataType": "nbbo",
          "market": "stocks",
          "timeframes": ["realtime"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "type": "object",
          "properties": {
            "ev": { "enum": ["Q"], "description": "The event type." },
            "sym": {
              "type": "string",
              "description": "The ticker symbol for the given stock."
            },
            "bx": { "type": "integer", "description": "The bid exchange ID." },
            "bp": {
              "type": "number",
              "format": "double",
              "description": "The bid price."
            },
            "bs": {
              "type": "integer",
              "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
            },
            "ax": { "type": "integer", "description": "The ask exchange ID." },
            "ap": {
              "type": "number",
              "format": "double",
              "description": "The ask price."
            },
            "as": {
              "type": "integer",
              "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
            },
            "c": { "type": "integer", "description": "The condition." },
            "i": {
              "type": "array",
              "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
              "items": {
                "type": "integer",
                "description": "The indicator code.\n"
              }
            },
            "t": {
              "type": "integer",
              "description": "The Timestamp in Unix MS."
            },
            "z": {
              "type": "integer",
              "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq)."
            }
          }
        },
        "example": "{\n \"ev\": \"Q\",\n \"sym\": \"MSFT\",\n \"bx\": 4,\n \"bp\": 114.125,\n \"bs\": 100,\n \"ax\": 7,\n \"ap\": 114.128,\n \"as\": 160,\n \"c\": 0,\n \"i\": [\n  604\n ],\n \"t\": 1536036818784,\n \"z\": 3\n}",
        "summary": "Quotes",
        "description": "Stream real-time quotes for a given stock ticker symbol.\n",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
            "required": true,
            "schema": { "type": "string", "pattern": "/^([a-zA-Z]+)$/" },
            "example": "*"
          }
        ],
        "responses": {
          "200": {
            "description": "The WebSocket message for a quote event.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ev": { "enum": ["Q"], "description": "The event type." },
                    "sym": {
                      "type": "string",
                      "description": "The ticker symbol for the given stock."
                    },
                    "bx": {
                      "type": "integer",
                      "description": "The bid exchange ID."
                    },
                    "bp": {
                      "type": "number",
                      "format": "double",
                      "description": "The bid price."
                    },
                    "bs": {
                      "type": "integer",
                      "description": "The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price."
                    },
                    "ax": {
                      "type": "integer",
                      "description": "The ask exchange ID."
                    },
                    "ap": {
                      "type": "number",
                      "format": "double",
                      "description": "The ask price."
                    },
                    "as": {
                      "type": "integer",
                      "description": "The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price."
                    },
                    "c": { "type": "integer", "description": "The condition." },
                    "i": {
                      "type": "array",
                      "description": "The indicators. For more information, see our glossary of [Conditions and\nIndicators](https://polygon.io/glossary/us/stocks/conditions-indicators).\n",
                      "items": {
                        "type": "integer",
                        "description": "The indicator code.\n"
                      }
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Timestamp in Unix MS."
                    },
                    "z": {
                      "type": "integer",
                      "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq)."
                    }
                  }
                },
                "example": {
                  "ev": "Q",
                  "sym": "MSFT",
                  "bx": 4,
                  "bp": 114.125,
                  "bs": 100,
                  "ax": 7,
                  "ap": 114.128,
                  "as": 160,
                  "c": 0,
                  "i": [604],
                  "t": 1536036818784,
                  "z": 3
                }
              }
            }
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "nbbo",
          "description": "NBBO data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          { "name": "realtime", "description": "Real Time Data" }
        ],
        "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"Q.{ticker}\"}",
        "method": "ws"
      },
      {
        "id": "/stocks/NOI",
        "templatedPath": "/stocks",
        "path": "ws_stocks_noi",
        "entitlements": {
          "dataType": "imbalances",
          "market": "stocks",
          "timeframes": ["realtime"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "type": "object",
          "properties": {
            "ev": { "enum": ["NOI"], "description": "The event type." },
            "T": {
              "type": "string",
              "description": "The ticker symbol for the given stock."
            },
            "t": {
              "type": "integer",
              "description": "The Timestamp in Unix MS."
            },
            "at": {
              "type": "integer",
              "description": "The time that the auction is planned to take place in the format (hour x 100) + minutes in Eastern Standard Time, \nfor example 930 would be 9:30 am EST, and 1600 would be 4:00 pm EST.\n"
            },
            "a": {
              "type": "string",
              "description": "The auction type.\n`O` - Early Opening Auction (non-NYSE only)\n`M` - Core Opening Auction\n`H` - Reopening Auction (Halt Resume)\n`C` - Closing Auction\n`P` - Extreme Closing Imbalance (NYSE only)\n`R` - Regulatory Closing Imbalance (NYSE only)\n"
            },
            "i": { "type": "integer", "description": "The symbol sequence." },
            "x": {
              "type": "integer",
              "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
            },
            "o": {
              "type": "integer",
              "description": "The imbalance quantity."
            },
            "p": { "type": "integer", "description": "The paired quantity." },
            "b": {
              "type": "number",
              "format": "double",
              "description": "The book clearing price."
            }
          }
        },
        "example": "{\n \"ev\": \"NOI\",\n \"T\": \"NTEST.Q\",\n \"t\": 1601318039223013600,\n \"at\": 930,\n \"a\": \"M\",\n \"i\": 44,\n \"x\": 10,\n \"o\": 480,\n \"p\": 440,\n \"b\": 25.03\n}",
        "summary": "Imbalances",
        "description": "Stream real-time imbalance events for a given stock ticker symbol.\n",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
            "required": true,
            "schema": { "type": "string", "pattern": "/^([a-zA-Z]+)$/" },
            "example": "*"
          }
        ],
        "responses": {
          "200": {
            "description": "The WebSocket message for an imbalance event.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ev": { "enum": ["NOI"], "description": "The event type." },
                    "T": {
                      "type": "string",
                      "description": "The ticker symbol for the given stock."
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Timestamp in Unix MS."
                    },
                    "at": {
                      "type": "integer",
                      "description": "The time that the auction is planned to take place in the format (hour x 100) + minutes in Eastern Standard Time, \nfor example 930 would be 9:30 am EST, and 1600 would be 4:00 pm EST.\n"
                    },
                    "a": {
                      "type": "string",
                      "description": "The auction type.\n`O` - Early Opening Auction (non-NYSE only)\n`M` - Core Opening Auction\n`H` - Reopening Auction (Halt Resume)\n`C` - Closing Auction\n`P` - Extreme Closing Imbalance (NYSE only)\n`R` - Regulatory Closing Imbalance (NYSE only)\n"
                    },
                    "i": {
                      "type": "integer",
                      "description": "The symbol sequence."
                    },
                    "x": {
                      "type": "integer",
                      "description": "The exchange ID. See <a target=\"_blank\" href=\"https://polygon.io/docs/stocks/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs."
                    },
                    "o": {
                      "type": "integer",
                      "description": "The imbalance quantity."
                    },
                    "p": {
                      "type": "integer",
                      "description": "The paired quantity."
                    },
                    "b": {
                      "type": "number",
                      "format": "double",
                      "description": "The book clearing price."
                    }
                  }
                },
                "example": {
                  "ev": "NOI",
                  "T": "NTEST.Q",
                  "t": 1601318039223013600,
                  "at": 930,
                  "a": "M",
                  "i": 44,
                  "x": 10,
                  "o": 480,
                  "p": 440,
                  "b": 25.03
                }
              }
            }
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "imbalances",
          "description": "Imbalances data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          { "name": "realtime", "description": "Real Time Data" }
        ],
        "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"NOI.{ticker}\"}",
        "method": "ws"
      },
      {
        "id": "/stocks/LULD",
        "templatedPath": "/stocks",
        "path": "ws_stocks_luld",
        "entitlements": {
          "dataType": "limit-up-limit-down",
          "market": "stocks",
          "timeframes": ["realtime"]
        },
        "deprecation": null,
        "replaces": null,
        "experimental": null,
        "responseSchema": {
          "type": "object",
          "properties": {
            "ev": { "enum": ["LULD"], "description": "The event type." },
            "T": {
              "type": "string",
              "description": "The ticker symbol for the given stock."
            },
            "h": {
              "type": "number",
              "format": "double",
              "description": "The high price."
            },
            "l": {
              "type": "number",
              "format": "double",
              "description": "The low price."
            },
            "i": {
              "type": "array",
              "description": "The Indicators.",
              "items": { "type": "integer" }
            },
            "z": {
              "type": "integer",
              "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
            },
            "t": {
              "type": "integer",
              "description": "The Timestamp in Unix MS."
            },
            "q": {
              "type": "integer",
              "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
            }
          }
        },
        "example": "{\n \"ev\": \"LULD\",\n \"T\": \"MSFT\",\n \"h\": 218.96,\n \"l\": 198.11,\n \"i\": [\n  21\n ],\n \"z\": 3,\n \"t\": 1601316752683746,\n \"q\": 290317\n}",
        "summary": "Limit-Up Limit-Down (LULD)",
        "description": "Stream real-time LULD events for a given stock ticker symbol.\n",
        "parameters": [
          {
            "name": "ticker",
            "in": "query",
            "description": "Specify a stock ticker or use * to subscribe to all stock tickers.\nYou can also use a comma separated list to subscribe to multiple stock tickers.\nYou can retrieve available stock tickers from our [Stock Tickers API](https://polygon.io/docs/stocks/get_v3_reference_tickers).\n",
            "required": true,
            "schema": { "type": "string", "pattern": "/^([a-zA-Z]+)$/" },
            "example": "*"
          }
        ],
        "responses": {
          "200": {
            "description": "The WebSocket message for a LULD event.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ev": {
                      "enum": ["LULD"],
                      "description": "The event type."
                    },
                    "T": {
                      "type": "string",
                      "description": "The ticker symbol for the given stock."
                    },
                    "h": {
                      "type": "number",
                      "format": "double",
                      "description": "The high price."
                    },
                    "l": {
                      "type": "number",
                      "format": "double",
                      "description": "The low price."
                    },
                    "i": {
                      "type": "array",
                      "description": "The Indicators.",
                      "items": { "type": "integer" }
                    },
                    "z": {
                      "type": "integer",
                      "description": "The tape. (1 = NYSE, 2 = AMEX, 3 = Nasdaq).\n"
                    },
                    "t": {
                      "type": "integer",
                      "description": "The Timestamp in Unix MS."
                    },
                    "q": {
                      "type": "integer",
                      "description": "The sequence number represents the sequence in which message events happened.\nThese are increasing and unique per ticker symbol, but will not always be\nsequential (e.g., 1, 2, 6, 9, 10, 11).\n"
                    }
                  }
                },
                "example": {
                  "ev": "LULD",
                  "T": "MSFT",
                  "h": 218.96,
                  "l": 198.11,
                  "i": [21],
                  "z": 3,
                  "t": 1601316752683746,
                  "q": 290317
                }
              }
            }
          }
        },
        "x-polygon-entitlement-data-type": {
          "name": "limit-up-limit-down",
          "description": "Limit-Up Limit-Down data"
        },
        "x-polygon-entitlement-market-type": {
          "name": "stocks",
          "description": "Stocks data"
        },
        "x-polygon-entitlement-allowed-timeframes": [
          { "name": "realtime", "description": "Real Time Data" }
        ],
        "parameterTemplate": "{\"action\":\"subscribe\", \"params\":\"LULD.{ticker}\"}",
        "method": "ws"
      }
    ],
    "mobileNavigation": [
      {
        "label": "Getting Started",
        "value": "stocks/getting-started",
        "section": "RESTful API"
      },
      {
        "label": "Aggregates (Bars)",
        "value": "stocks/get_v2_aggs_ticker__stocksticker__range__multiplier___timespan___from___to",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Grouped Daily (Bars)",
        "value": "stocks/get_v2_aggs_grouped_locale_us_market_stocks__date",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Daily Open/Close",
        "value": "stocks/get_v1_open-close__stocksticker___date",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Previous Close",
        "value": "stocks/get_v2_aggs_ticker__stocksticker__prev",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Trades",
        "value": "stocks/get_v3_trades__stockticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Last Trade",
        "value": "stocks/get_v2_last_trade__stocksticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Quotes (NBBO)",
        "value": "stocks/get_v3_quotes__stockticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Last Quote",
        "value": "stocks/get_v2_last_nbbo__stocksticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "All Tickers",
        "value": "stocks/get_v2_snapshot_locale_us_markets_stocks_tickers",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Gainers/Losers",
        "value": "stocks/get_v2_snapshot_locale_us_markets_stocks__direction",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Ticker",
        "value": "stocks/get_v2_snapshot_locale_us_markets_stocks_tickers__stocksticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Simple Moving Average (SMA)",
        "value": "stocks/get_v1_indicators_sma__stockticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Exponential Moving Average (EMA)",
        "value": "stocks/get_v1_indicators_ema__stockticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Moving Average Convergence/Divergence (MACD)",
        "value": "stocks/get_v1_indicators_macd__stockticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Relative Strength Index (RSI)",
        "value": "stocks/get_v1_indicators_rsi__stockticker",
        "section": "Market Data Endpoints"
      },
      {
        "label": "Tickers",
        "value": "stocks/get_v3_reference_tickers",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Ticker Details v3",
        "value": "stocks/get_v3_reference_tickers__ticker",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Ticker News",
        "value": "stocks/get_v2_reference_news",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Ticker Types",
        "value": "stocks/get_v3_reference_tickers_types",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Market Holidays",
        "value": "stocks/get_v1_marketstatus_upcoming",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Market Status",
        "value": "stocks/get_v1_marketstatus_now",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Stock Splits v3",
        "value": "stocks/get_v3_reference_splits",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Dividends v3",
        "value": "stocks/get_v3_reference_dividends",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Stock Financials vX",
        "value": "stocks/get_vx_reference_financials",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Conditions",
        "value": "stocks/get_v3_reference_conditions",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Exchanges",
        "value": "stocks/get_v3_reference_exchanges",
        "section": "Reference Data Endpoints"
      },
      {
        "label": "Getting Started",
        "value": "stocks/ws_getting-started",
        "section": "Websocket API"
      },
      {
        "label": "Aggregates (Per Minute)",
        "value": "stocks/ws_stocks_am",
        "section": "Websocket API"
      },
      {
        "label": "Aggregates (Per Second)",
        "value": "stocks/ws_stocks_a",
        "section": "Websocket API"
      },
      {
        "label": "Trades",
        "value": "stocks/ws_stocks_t",
        "section": "Websocket API"
      },
      {
        "label": "Quotes",
        "value": "stocks/ws_stocks_q",
        "section": "Websocket API"
      },
      {
        "label": "Imbalances",
        "value": "stocks/ws_stocks_noi",
        "section": "Websocket API"
      },
      {
        "label": "Limit-Up Limit-Down (LULD)",
        "value": "stocks/ws_stocks_luld",
        "section": "Websocket API"
      }
    ],
    "seo": {
      "title": "Getting Started | The Polygon.io Stocks API provides REST endpoints that let you\nquery the latest market data from all US stock exchanges. You\ncan also find data on company financials, stock market\nholidays, corporate actions, and more.",
      "description": "The Polygon.io Stocks API provides REST endpoints that let you\nquery the latest market data from all US stock exchanges. You\ncan also find data on company financials, stock market\nholidays, corporate actions, and more."
    }
  },
  "__N_SSG": true
}
